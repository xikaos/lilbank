[31m--- node_modules/hsla-regex/index.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -1,9 +1,10 @@
 'use strict';
 
[31m-module.exports = function hslaRegex(options) {[0m
[31m-  options = options || {};[0m
[32m+module.exports = function hslaRegex(options)[0m
[32m+{[0m
[32m+    options = options || {};[0m
 
[31m-  return options.exact ?[0m
[32m+    return options.exact ?[0m
     /^hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*(\d*(?:\.\d+)?)\)$/ :
     /hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*(\d*(?:\.\d+)?)\)/ig;
 }
[31m--- node_modules/hsla-regex/test/test.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -16,37 +16,55 @@
   'hsl(1, .111%, .1111%)'
 ];
 
[31m-describe('hsla-regex', function() {[0m
[32m+describe([0m
[32m+    'hsla-regex', function () {[0m
 
[31m-  describe('exact: true', function() {[0m
[32m+        describe([0m
[32m+            'exact: true', function () {[0m
 
[31m-    it('should return a regex that matches exact hsla strings', function() {[0m
[31m-      hslaStrings.forEach(function(hsla) {[0m
[31m-        assert.ok(hslaRegex({ exact: true }).test(hsla));[0m
[31m-      });[0m
[31m-    });[0m
[32m+                it([0m
[32m+                    'should return a regex that matches exact hsla strings', function () {[0m
[32m+                        hslaStrings.forEach([0m
[32m+                            function (hsla) {[0m
[32m+                                assert.ok(hslaRegex({ exact: true }).test(hsla));[0m
[32m+                            }[0m
[32m+                        );[0m
[32m+                    }[0m
[32m+                );[0m
 
[31m-    it('should return a regex that does not match invalid hsla strings', function() {[0m
[31m-      inexactHslaStrings.forEach(function(invalidHsl) {[0m
[31m-        assert.ok(!hslaRegex({ exact: true }).test(invalidHsl));[0m
[31m-      });[0m
[31m-    });[0m
[31m-  });[0m
[32m+                it([0m
[32m+                    'should return a regex that does not match invalid hsla strings', function () {[0m
[32m+                        inexactHslaStrings.forEach([0m
[32m+                            function (invalidHsl) {[0m
[32m+                                assert.ok(!hslaRegex({ exact: true }).test(invalidHsl));[0m
[32m+                            }[0m
[32m+                        );[0m
[32m+                    }[0m
[32m+                );[0m
[32m+            }[0m
[32m+        );[0m
 
[31m-  describe('g', function() {[0m
[32m+        describe([0m
[32m+            'g', function () {[0m
 
[31m-    it('should match hsla strings', function() {[0m
[31m-      assert.deepEqual([0m
[31m-        hslaStrings.join('foobar').match(hslaRegex()),[0m
[31m-        hslaStrings[0m
[31m-      )[0m
[31m-    });[0m
[32m+                it([0m
[32m+                    'should match hsla strings', function () {[0m
[32m+                        assert.deepEqual([0m
[32m+                            hslaStrings.join('foobar').match(hslaRegex()),[0m
[32m+                            hslaStrings[0m
[32m+                        )[0m
[32m+                    }[0m
[32m+                );[0m
 
[31m-    it('should not match non hsla strings', function() {[0m
[31m-      assert.deepEqual([0m
[31m-        inexactHslaStrings.join('foobar').match(hslaRegex()),[0m
[31m-        ['hsla(1, 1.111%, 1.1111%, .123)', 'hSla(1, 1.111%, 1.1111%, 1)'][0m
[31m-      );[0m
[31m-    });[0m
[31m-  });[0m
[31m-});[0m
[32m+                it([0m
[32m+                    'should not match non hsla strings', function () {[0m
[32m+                        assert.deepEqual([0m
[32m+                            inexactHslaStrings.join('foobar').match(hslaRegex()),[0m
[32m+                            ['hsla(1, 1.111%, 1.1111%, .123)', 'hSla(1, 1.111%, 1.1111%, 1)'][0m
[32m+                        );[0m
[32m+                    }[0m
[32m+                );[0m
[32m+            }[0m
[32m+        );[0m
[32m+    }[0m
[32m+);[0m
[31m--- node_modules/connect-history-api-fallback/lib/index.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -2,119 +2,126 @@
 
 var url = require('url');
 
[31m-exports = module.exports = function historyApiFallback(options) {[0m
[31m-  options = options || {};[0m
[31m-  var logger = getLogger(options);[0m
[32m+exports = module.exports = function historyApiFallback(options)[0m
[32m+{[0m
[32m+    options = options || {};[0m
[32m+    var logger = getLogger(options);[0m
 
[31m-  return function(req, res, next) {[0m
[31m-    var headers = req.headers;[0m
[31m-    if (req.method !== 'GET') {[0m
[31m-      logger([0m
[31m-        'Not rewriting',[0m
[31m-        req.method,[0m
[31m-        req.url,[0m
[31m-        'because the method is not GET.'[0m
[31m-      );[0m
[31m-      return next();[0m
[31m-    } else if (!headers || typeof headers.accept !== 'string') {[0m
[31m-      logger([0m
[31m-        'Not rewriting',[0m
[31m-        req.method,[0m
[31m-        req.url,[0m
[31m-        'because the client did not send an HTTP accept header.'[0m
[31m-      );[0m
[31m-      return next();[0m
[31m-    } else if (headers.accept.indexOf('application/json') === 0) {[0m
[31m-      logger([0m
[31m-        'Not rewriting',[0m
[31m-        req.method,[0m
[31m-        req.url,[0m
[31m-        'because the client prefers JSON.'[0m
[31m-      );[0m
[31m-      return next();[0m
[31m-    } else if (!acceptsHtml(headers.accept, options)) {[0m
[31m-      logger([0m
[31m-        'Not rewriting',[0m
[31m-        req.method,[0m
[31m-        req.url,[0m
[31m-        'because the client does not accept HTML.'[0m
[31m-      );[0m
[31m-      return next();[0m
[31m-    }[0m
[32m+    return function (req, res, next) {[0m
[32m+        var headers = req.headers;[0m
[32m+        if (req.method !== 'GET') {[0m
[32m+            logger([0m
[32m+                'Not rewriting',[0m
[32m+                req.method,[0m
[32m+                req.url,[0m
[32m+                'because the method is not GET.'[0m
[32m+            );[0m
[32m+            return next();[0m
[32m+        } else if (!headers || typeof headers.accept !== 'string') {[0m
[32m+            logger([0m
[32m+                'Not rewriting',[0m
[32m+                req.method,[0m
[32m+                req.url,[0m
[32m+                'because the client did not send an HTTP accept header.'[0m
[32m+            );[0m
[32m+            return next();[0m
[32m+        } else if (headers.accept.indexOf('application/json') === 0) {[0m
[32m+            logger([0m
[32m+                'Not rewriting',[0m
[32m+                req.method,[0m
[32m+                req.url,[0m
[32m+                'because the client prefers JSON.'[0m
[32m+            );[0m
[32m+            return next();[0m
[32m+        } else if (!acceptsHtml(headers.accept, options)) {[0m
[32m+            logger([0m
[32m+                'Not rewriting',[0m
[32m+                req.method,[0m
[32m+                req.url,[0m
[32m+                'because the client does not accept HTML.'[0m
[32m+            );[0m
[32m+            return next();[0m
[32m+        }[0m
 
[31m-    var parsedUrl = url.parse(req.url);[0m
[31m-    var rewriteTarget;[0m
[31m-    options.rewrites = options.rewrites || [];[0m
[31m-    for (var i = 0; i < options.rewrites.length; i++) {[0m
[31m-      var rewrite = options.rewrites[i];[0m
[31m-      var match = parsedUrl.pathname.match(rewrite.from);[0m
[31m-      if (match !== null) {[0m
[31m-        rewriteTarget = evaluateRewriteRule(parsedUrl, match, rewrite.to, req);[0m
[32m+        var parsedUrl = url.parse(req.url);[0m
[32m+        var rewriteTarget;[0m
[32m+        options.rewrites = options.rewrites || [];[0m
[32m+        for (var i = 0; i < options.rewrites.length; i++) {[0m
[32m+            var rewrite = options.rewrites[i];[0m
[32m+            var match = parsedUrl.pathname.match(rewrite.from);[0m
[32m+            if (match !== null) {[0m
[32m+                rewriteTarget = evaluateRewriteRule(parsedUrl, match, rewrite.to, req);[0m
 
[31m-        if(rewriteTarget.charAt(0) !== '/') {[0m
[31m-          logger([0m
[31m-            'We recommend using an absolute path for the rewrite target.',[0m
[31m-            'Received a non-absolute rewrite target',[0m
[31m-            rewriteTarget,[0m
[31m-            'for URL',[0m
[31m-            req.url[0m
[31m-          );[0m
[32m+                if(rewriteTarget.charAt(0) !== '/') {[0m
[32m+                    logger([0m
[32m+                        'We recommend using an absolute path for the rewrite target.',[0m
[32m+                        'Received a non-absolute rewrite target',[0m
[32m+                        rewriteTarget,[0m
[32m+                        'for URL',[0m
[32m+                        req.url[0m
[32m+                    );[0m
[32m+                }[0m
[32m+[0m
[32m+                logger('Rewriting', req.method, req.url, 'to', rewriteTarget);[0m
[32m+                req.url = rewriteTarget;[0m
[32m+                return next();[0m
[32m+            }[0m
         }
 
[32m+        var pathname = parsedUrl.pathname;[0m
[32m+        if (pathname.lastIndexOf('.') > pathname.lastIndexOf('/') [0m
[32m+            && options.disableDotRule !== true[0m
[32m+        ) {[0m
[32m+            logger([0m
[32m+                'Not rewriting',[0m
[32m+                req.method,[0m
[32m+                req.url,[0m
[32m+                'because the path includes a dot (.) character.'[0m
[32m+            );[0m
[32m+            return next();[0m
[32m+        }[0m
[32m+[0m
[32m+        rewriteTarget = options.index || '/index.html';[0m
         logger('Rewriting', req.method, req.url, 'to', rewriteTarget);
         req.url = rewriteTarget;
[31m-        return next();[0m
[31m-      }[0m
[31m-    }[0m
[32m+        next();[0m
[32m+    };[0m
[32m+};[0m
 
[31m-    var pathname = parsedUrl.pathname;[0m
[31m-    if (pathname.lastIndexOf('.') > pathname.lastIndexOf('/') &&[0m
[31m-        options.disableDotRule !== true) {[0m
[31m-      logger([0m
[31m-        'Not rewriting',[0m
[31m-        req.method,[0m
[31m-        req.url,[0m
[31m-        'because the path includes a dot (.) character.'[0m
[31m-      );[0m
[31m-      return next();[0m
[32m+function evaluateRewriteRule(parsedUrl, match, rule, req)[0m
[32m+{[0m
[32m+    if (typeof rule === 'string') {[0m
[32m+        return rule;[0m
[32m+    } else if (typeof rule !== 'function') {[0m
[32m+        throw new Error('Rewrite rule can only be of type string or function.');[0m
     }
 
[31m-    rewriteTarget = options.index || '/index.html';[0m
[31m-    logger('Rewriting', req.method, req.url, 'to', rewriteTarget);[0m
[31m-    req.url = rewriteTarget;[0m
[31m-    next();[0m
[31m-  };[0m
[31m-};[0m
[31m-[0m
[31m-function evaluateRewriteRule(parsedUrl, match, rule, req) {[0m
[31m-  if (typeof rule === 'string') {[0m
[31m-    return rule;[0m
[31m-  } else if (typeof rule !== 'function') {[0m
[31m-    throw new Error('Rewrite rule can only be of type string or function.');[0m
[31m-  }[0m
[31m-[0m
[31m-  return rule({[0m
[31m-    parsedUrl: parsedUrl,[0m
[31m-    match: match,[0m
[31m-    request: req[0m
[31m-  });[0m
[32m+    return rule([0m
[32m+        {[0m
[32m+            parsedUrl: parsedUrl,[0m
[32m+            match: match,[0m
[32m+            request: req[0m
[32m+        }[0m
[32m+    );[0m
 }
 
[31m-function acceptsHtml(header, options) {[0m
[31m-  options.htmlAcceptHeaders = options.htmlAcceptHeaders || ['text/html', '*/*'];[0m
[31m-  for (var i = 0; i < options.htmlAcceptHeaders.length; i++) {[0m
[31m-    if (header.indexOf(options.htmlAcceptHeaders[i]) !== -1) {[0m
[31m-      return true;[0m
[32m+function acceptsHtml(header, options)[0m
[32m+{[0m
[32m+    options.htmlAcceptHeaders = options.htmlAcceptHeaders || ['text/html', '*/*'];[0m
[32m+    for (var i = 0; i < options.htmlAcceptHeaders.length; i++) {[0m
[32m+        if (header.indexOf(options.htmlAcceptHeaders[i]) !== -1) {[0m
[32m+            return true;[0m
[32m+        }[0m
     }
[31m-  }[0m
[31m-  return false;[0m
[32m+    return false;[0m
 }
 
[31m-function getLogger(options) {[0m
[31m-  if (options && options.logger) {[0m
[31m-    return options.logger;[0m
[31m-  } else if (options && options.verbose) {[0m
[31m-    return console.log.bind(console);[0m
[31m-  }[0m
[31m-  return function(){};[0m
[32m+function getLogger(options)[0m
[32m+{[0m
[32m+    if (options && options.logger) {[0m
[32m+        return options.logger;[0m
[32m+    } else if (options && options.verbose) {[0m
[32m+        return console.log.bind(console);[0m
[32m+    }[0m
[32m+    return function (){};[0m
 }
[31m--- node_modules/import-fresh/index.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -4,26 +4,26 @@
 const callerPath = require('caller-path');
 
 module.exports = moduleId => {
[31m-	if (typeof moduleId !== 'string') {[0m
[31m-		throw new TypeError('Expected a string');[0m
[31m-	}[0m
[32m+    if (typeof moduleId !== 'string') {[0m
[32m+        throw new TypeError('Expected a string');[0m
[32m+    }[0m
 
[31m-	const filePath = resolveFrom(path.dirname(callerPath()), moduleId);[0m
[32m+    const filePath = resolveFrom(path.dirname(callerPath()), moduleId);[0m
 
[31m-	// Delete itself from module parent[0m
[31m-	if (require.cache[filePath] && require.cache[filePath].parent) {[0m
[31m-		let i = require.cache[filePath].parent.children.length;[0m
[32m+    // Delete itself from module parent[0m
[32m+    if (require.cache[filePath] && require.cache[filePath].parent) {[0m
[32m+        let i = require.cache[filePath].parent.children.length;[0m
 
[31m-		while (i--) {[0m
[31m-			if (require.cache[filePath].parent.children[i].id === filePath) {[0m
[31m-				require.cache[filePath].parent.children.splice(i, 1);[0m
[31m-			}[0m
[31m-		}[0m
[31m-	}[0m
[32m+        while (i--) {[0m
[32m+            if (require.cache[filePath].parent.children[i].id === filePath) {[0m
[32m+                require.cache[filePath].parent.children.splice(i, 1);[0m
[32m+            }[0m
[32m+        }[0m
[32m+    }[0m
 
[31m-	// Delete module from cache[0m
[31m-	delete require.cache[filePath];[0m
[32m+    // Delete module from cache[0m
[32m+    delete require.cache[filePath];[0m
 
[31m-	// Return fresh module[0m
[31m-	return require(filePath);[0m
[32m+    // Return fresh module[0m
[32m+    return require(filePath);[0m
 };
[31m--- node_modules/object-copy/node_modules/define-property/index.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -9,23 +9,26 @@
 
 var isDescriptor = require('is-descriptor');
 
[31m-module.exports = function defineProperty(obj, prop, val) {[0m
[31m-  if (typeof obj !== 'object' && typeof obj !== 'function') {[0m
[31m-    throw new TypeError('expected an object or function.');[0m
[31m-  }[0m
[32m+module.exports = function defineProperty(obj, prop, val)[0m
[32m+{[0m
[32m+    if (typeof obj !== 'object' && typeof obj !== 'function') {[0m
[32m+        throw new TypeError('expected an object or function.');[0m
[32m+    }[0m
 
[31m-  if (typeof prop !== 'string') {[0m
[31m-    throw new TypeError('expected `prop` to be a string.');[0m
[31m-  }[0m
[32m+    if (typeof prop !== 'string') {[0m
[32m+        throw new TypeError('expected `prop` to be a string.');[0m
[32m+    }[0m
 
[31m-  if (isDescriptor(val) && ('set' in val || 'get' in val)) {[0m
[31m-    return Object.defineProperty(obj, prop, val);[0m
[31m-  }[0m
[32m+    if (isDescriptor(val) && ('set' in val || 'get' in val)) {[0m
[32m+        return Object.defineProperty(obj, prop, val);[0m
[32m+    }[0m
 
[31m-  return Object.defineProperty(obj, prop, {[0m
[31m-    configurable: true,[0m
[31m-    enumerable: false,[0m
[31m-    writable: true,[0m
[31m-    value: val[0m
[31m-  });[0m
[32m+    return Object.defineProperty([0m
[32m+        obj, prop, {[0m
[32m+            configurable: true,[0m
[32m+            enumerable: false,[0m
[32m+            writable: true,[0m
[32m+            value: val[0m
[32m+        }[0m
[32m+    );[0m
 };
[31m--- node_modules/object-copy/node_modules/kind-of/index.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -8,109 +8,110 @@
  * @return {*} Native javascript type
  */
 
[31m-module.exports = function kindOf(val) {[0m
[31m-  // primitivies[0m
[31m-  if (typeof val === 'undefined') {[0m
[31m-    return 'undefined';[0m
[31m-  }[0m
[31m-  if (val === null) {[0m
[31m-    return 'null';[0m
[31m-  }[0m
[31m-  if (val === true || val === false || val instanceof Boolean) {[0m
[31m-    return 'boolean';[0m
[31m-  }[0m
[31m-  if (typeof val === 'string' || val instanceof String) {[0m
[31m-    return 'string';[0m
[31m-  }[0m
[31m-  if (typeof val === 'number' || val instanceof Number) {[0m
[31m-    return 'number';[0m
[31m-  }[0m
[32m+module.exports = function kindOf(val)[0m
[32m+{[0m
[32m+    // primitivies[0m
[32m+    if (typeof val === 'undefined') {[0m
[32m+        return 'undefined';[0m
[32m+    }[0m
[32m+    if (val === null) {[0m
[32m+        return 'null';[0m
[32m+    }[0m
[32m+    if (val === true || val === false || val instanceof Boolean) {[0m
[32m+        return 'boolean';[0m
[32m+    }[0m
[32m+    if (typeof val === 'string' || val instanceof String) {[0m
[32m+        return 'string';[0m
[32m+    }[0m
[32m+    if (typeof val === 'number' || val instanceof Number) {[0m
[32m+        return 'number';[0m
[32m+    }[0m
 
[31m-  // functions[0m
[31m-  if (typeof val === 'function' || val instanceof Function) {[0m
[31m-    return 'function';[0m
[31m-  }[0m
[32m+    // functions[0m
[32m+    if (typeof val === 'function' || val instanceof Function) {[0m
[32m+        return 'function';[0m
[32m+    }[0m
 
[31m-  // array[0m
[31m-  if (typeof Array.isArray !== 'undefined' && Array.isArray(val)) {[0m
[31m-    return 'array';[0m
[31m-  }[0m
[32m+    // array[0m
[32m+    if (typeof Array.isArray !== 'undefined' && Array.isArray(val)) {[0m
[32m+        return 'array';[0m
[32m+    }[0m
 
[31m-  // check for instances of RegExp and Date before calling `toString`[0m
[31m-  if (val instanceof RegExp) {[0m
[31m-    return 'regexp';[0m
[31m-  }[0m
[31m-  if (val instanceof Date) {[0m
[31m-    return 'date';[0m
[31m-  }[0m
[32m+    // check for instances of RegExp and Date before calling `toString`[0m
[32m+    if (val instanceof RegExp) {[0m
[32m+        return 'regexp';[0m
[32m+    }[0m
[32m+    if (val instanceof Date) {[0m
[32m+        return 'date';[0m
[32m+    }[0m
 
[31m-  // other objects[0m
[31m-  var type = toString.call(val);[0m
[32m+    // other objects[0m
[32m+    var type = toString.call(val);[0m
 
[31m-  if (type === '[object RegExp]') {[0m
[31m-    return 'regexp';[0m
[31m-  }[0m
[31m-  if (type === '[object Date]') {[0m
[31m-    return 'date';[0m
[31m-  }[0m
[31m-  if (type === '[object Arguments]') {[0m
[31m-    return 'arguments';[0m
[31m-  }[0m
[31m-  if (type === '[object Error]') {[0m
[31m-    return 'error';[0m
[31m-  }[0m
[32m+    if (type === '[object RegExp]') {[0m
[32m+        return 'regexp';[0m
[32m+    }[0m
[32m+    if (type === '[object Date]') {[0m
[32m+        return 'date';[0m
[32m+    }[0m
[32m+    if (type === '[object Arguments]') {[0m
[32m+        return 'arguments';[0m
[32m+    }[0m
[32m+    if (type === '[object Error]') {[0m
[32m+        return 'error';[0m
[32m+    }[0m
 
[31m-  // buffer[0m
[31m-  if (isBuffer(val)) {[0m
[31m-    return 'buffer';[0m
[31m-  }[0m
[32m+    // buffer[0m
[32m+    if (isBuffer(val)) {[0m
[32m+        return 'buffer';[0m
[32m+    }[0m
 
[31m-  // es6: Map, WeakMap, Set, WeakSet[0m
[31m-  if (type === '[object Set]') {[0m
[31m-    return 'set';[0m
[31m-  }[0m
[31m-  if (type === '[object WeakSet]') {[0m
[31m-    return 'weakset';[0m
[31m-  }[0m
[31m-  if (type === '[object Map]') {[0m
[31m-    return 'map';[0m
[31m-  }[0m
[31m-  if (type === '[object WeakMap]') {[0m
[31m-    return 'weakmap';[0m
[31m-  }[0m
[31m-  if (type === '[object Symbol]') {[0m
[31m-    return 'symbol';[0m
[31m-  }[0m
[32m+    // es6: Map, WeakMap, Set, WeakSet[0m
[32m+    if (type === '[object Set]') {[0m
[32m+        return 'set';[0m
[32m+    }[0m
[32m+    if (type === '[object WeakSet]') {[0m
[32m+        return 'weakset';[0m
[32m+    }[0m
[32m+    if (type === '[object Map]') {[0m
[32m+        return 'map';[0m
[32m+    }[0m
[32m+    if (type === '[object WeakMap]') {[0m
[32m+        return 'weakmap';[0m
[32m+    }[0m
[32m+    if (type === '[object Symbol]') {[0m
[32m+        return 'symbol';[0m
[32m+    }[0m
 
[31m-  // typed arrays[0m
[31m-  if (type === '[object Int8Array]') {[0m
[31m-    return 'int8array';[0m
[31m-  }[0m
[31m-  if (type === '[object Uint8Array]') {[0m
[31m-    return 'uint8array';[0m
[31m-  }[0m
[31m-  if (type === '[object Uint8ClampedArray]') {[0m
[31m-    return 'uint8clampedarray';[0m
[31m-  }[0m
[31m-  if (type === '[object Int16Array]') {[0m
[31m-    return 'int16array';[0m
[31m-  }[0m
[31m-  if (type === '[object Uint16Array]') {[0m
[31m-    return 'uint16array';[0m
[31m-  }[0m
[31m-  if (type === '[object Int32Array]') {[0m
[31m-    return 'int32array';[0m
[31m-  }[0m
[31m-  if (type === '[object Uint32Array]') {[0m
[31m-    return 'uint32array';[0m
[31m-  }[0m
[31m-  if (type === '[object Float32Array]') {[0m
[31m-    return 'float32array';[0m
[31m-  }[0m
[31m-  if (type === '[object Float64Array]') {[0m
[31m-    return 'float64array';[0m
[31m-  }[0m
[32m+    // typed arrays[0m
[32m+    if (type === '[object Int8Array]') {[0m
[32m+        return 'int8array';[0m
[32m+    }[0m
[32m+    if (type === '[object Uint8Array]') {[0m
[32m+        return 'uint8array';[0m
[32m+    }[0m
[32m+    if (type === '[object Uint8ClampedArray]') {[0m
[32m+        return 'uint8clampedarray';[0m
[32m+    }[0m
[32m+    if (type === '[object Int16Array]') {[0m
[32m+        return 'int16array';[0m
[32m+    }[0m
[32m+    if (type === '[object Uint16Array]') {[0m
[32m+        return 'uint16array';[0m
[32m+    }[0m
[32m+    if (type === '[object Int32Array]') {[0m
[32m+        return 'int32array';[0m
[32m+    }[0m
[32m+    if (type === '[object Uint32Array]') {[0m
[32m+        return 'uint32array';[0m
[32m+    }[0m
[32m+    if (type === '[object Float32Array]') {[0m
[32m+        return 'float32array';[0m
[32m+    }[0m
[32m+    if (type === '[object Float64Array]') {[0m
[32m+        return 'float64array';[0m
[32m+    }[0m
 
[31m-  // must be a plain object[0m
[31m-  return 'object';[0m
[32m+    // must be a plain object[0m
[32m+    return 'object';[0m
 };
[31m--- node_modules/object-copy/index.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -16,43 +16,46 @@
  * var obj = {};
  * copy(obj, proto);
  * ```
[31m- * @param {Object} `receiver`[0m
[31m- * @param {Object} `provider`[0m
[31m- * @param {String|Array} `omit` One or more properties to omit[0m
[32m+ *[0m
[32m+ * @param  {Object} `receiver`[0m
[32m+ * @param  {Object} `provider`[0m
[32m+ * @param  {String|Array} `omit` One or more properties to omit[0m
  * @return {Object}
[31m- * @api public[0m
[32m+ * @api    public[0m
  */
 
[31m-function copy(receiver, provider, omit) {[0m
[31m-  if (!isObject(receiver)) {[0m
[31m-    throw new TypeError('expected receiving object to be an object.');[0m
[31m-  }[0m
[31m-  if (!isObject(provider)) {[0m
[31m-    throw new TypeError('expected providing object to be an object.');[0m
[31m-  }[0m
[32m+function copy(receiver, provider, omit)[0m
[32m+{[0m
[32m+    if (!isObject(receiver)) {[0m
[32m+        throw new TypeError('expected receiving object to be an object.');[0m
[32m+    }[0m
[32m+    if (!isObject(provider)) {[0m
[32m+        throw new TypeError('expected providing object to be an object.');[0m
[32m+    }[0m
 
[31m-  var props = nativeKeys(provider);[0m
[31m-  var keys = Object.keys(provider);[0m
[31m-  var len = props.length;[0m
[31m-  omit = arrayify(omit);[0m
[32m+    var props = nativeKeys(provider);[0m
[32m+    var keys = Object.keys(provider);[0m
[32m+    var len = props.length;[0m
[32m+    omit = arrayify(omit);[0m
 
[31m-  while (len--) {[0m
[31m-    var key = props[len];[0m
[32m+    while (len--) {[0m
[32m+        var key = props[len];[0m
 
[31m-    if (has(keys, key)) {[0m
[31m-      define(receiver, key, provider[key]);[0m
[31m-    } else if (!(key in receiver) && !has(omit, key)) {[0m
[31m-      copyDescriptor(receiver, provider, key);[0m
[32m+        if (has(keys, key)) {[0m
[32m+            define(receiver, key, provider[key]);[0m
[32m+        } else if (!(key in receiver) && !has(omit, key)) {[0m
[32m+            copyDescriptor(receiver, provider, key);[0m
[32m+        }[0m
     }
[31m-  }[0m
 };
 
 /**
  * Return true if the given value is an object or function
  */
 
[31m-function isObject(val) {[0m
[31m-  return typeOf(val) === 'object' || typeof val === 'function';[0m
[32m+function isObject(val)[0m
[32m+{[0m
[32m+    return typeOf(val) === 'object' || typeof val === 'function';[0m
 }
 
 /**
@@ -69,37 +72,39 @@
  * has({a: 'b', c: 'd'}, ['c', 'z']);
  * //=> true
  * ```
[31m- * @param {Object} `obj`[0m
[31m- * @param {String|Array} `val`[0m
[32m+ *[0m
[32m+ * @param  {Object} `obj`[0m
[32m+ * @param  {String|Array} `val`[0m
  * @return {Boolean}
  */
 
[31m-function has(obj, val) {[0m
[31m-  val = arrayify(val);[0m
[31m-  var len = val.length;[0m
[32m+function has(obj, val)[0m
[32m+{[0m
[32m+    val = arrayify(val);[0m
[32m+    var len = val.length;[0m
 
[31m-  if (isObject(obj)) {[0m
[31m-    for (var key in obj) {[0m
[31m-      if (val.indexOf(key) > -1) {[0m
[31m-        return true;[0m
[31m-      }[0m
[32m+    if (isObject(obj)) {[0m
[32m+        for (var key in obj) {[0m
[32m+            if (val.indexOf(key) > -1) {[0m
[32m+                return true;[0m
[32m+            }[0m
[32m+        }[0m
[32m+[0m
[32m+        var keys = nativeKeys(obj);[0m
[32m+        return has(keys, val);[0m
     }
 
[31m-    var keys = nativeKeys(obj);[0m
[31m-    return has(keys, val);[0m
[31m-  }[0m
[31m-[0m
[31m-  if (Array.isArray(obj)) {[0m
[31m-    var arr = obj;[0m
[31m-    while (len--) {[0m
[31m-      if (arr.indexOf(val[len]) > -1) {[0m
[31m-        return true;[0m
[31m-      }[0m
[32m+    if (Array.isArray(obj)) {[0m
[32m+        var arr = obj;[0m
[32m+        while (len--) {[0m
[32m+            if (arr.indexOf(val[len]) > -1) {[0m
[32m+                return true;[0m
[32m+            }[0m
[32m+        }[0m
[32m+        return false;[0m
     }
[31m-    return false;[0m
[31m-  }[0m
 
[31m-  throw new TypeError('expected an array or object.');[0m
[32m+    throw new TypeError('expected an array or object.');[0m
 }
 
 /**
@@ -113,12 +118,13 @@
  * //=> ['foo']
  * ```
  *
[31m- * @param {String|Array} `val`[0m
[32m+ * @param  {String|Array} `val`[0m
  * @return {Array}
  */
 
[31m-function arrayify(val) {[0m
[31m-  return val ? (Array.isArray(val) ? val : [val]) : [];[0m
[32m+function arrayify(val)[0m
[32m+{[0m
[32m+    return val ? (Array.isArray(val) ? val : [val]) : [];[0m
 }
 
 /**
@@ -131,12 +137,14 @@
  * hasConstructor(Object.create(null));
  * //=> false
  * ```
[32m+ *[0m
  * @param  {Object} `value`
  * @return {Boolean}
  */
 
[31m-function hasConstructor(val) {[0m
[31m-  return isObject(val) && typeof val.constructor !== 'undefined';[0m
[32m+function hasConstructor(val)[0m
[32m+{[0m
[32m+    return isObject(val) && typeof val.constructor !== 'undefined';[0m
 }
 
 /**
@@ -156,9 +164,11 @@
  * @return {Array} Array of keys.
  */
 
[31m-function nativeKeys(val) {[0m
[31m-  if (!hasConstructor(val)) return [];[0m
[31m-  return Object.getOwnPropertyNames(val);[0m
[32m+function nativeKeys(val)[0m
[32m+{[0m
[32m+    if (!hasConstructor(val)) { return [];[0m
[32m+    }[0m
[32m+    return Object.getOwnPropertyNames(val);[0m
 }
 
 /**
[31m--- node_modules/string.prototype.trimstart/implementation.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -7,6 +7,7 @@
 var startWhitespace = /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]*/;
 /* eslint-enable no-control-regex */
 
[31m-module.exports = function trimStart() {[0m
[31m-	return $replace(this, startWhitespace, '');[0m
[32m+module.exports = function trimStart()[0m
[32m+{[0m
[32m+    return $replace(this, startWhitespace, '');[0m
 };
[31m--- node_modules/string.prototype.trimstart/shim.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -3,12 +3,14 @@
 var define = require('define-properties');
 var getPolyfill = require('./polyfill');
 
[31m-module.exports = function shimTrimStart() {[0m
[31m-	var polyfill = getPolyfill();[0m
[31m-	define([0m
[31m-		String.prototype,[0m
[31m-		{ trimStart: polyfill },[0m
[31m-		{ trimStart: function () { return String.prototype.trimStart !== polyfill; } }[0m
[31m-	);[0m
[31m-	return polyfill;[0m
[32m+module.exports = function shimTrimStart()[0m
[32m+{[0m
[32m+    var polyfill = getPolyfill();[0m
[32m+    define([0m
[32m+        String.prototype,[0m
[32m+        { trimStart: polyfill },[0m
[32m+        { trimStart: function () {[0m
[32m+            return String.prototype.trimStart !== polyfill; } }[0m
[32m+    );[0m
[32m+    return polyfill;[0m
 };
[31m--- node_modules/string.prototype.trimstart/index.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -9,10 +9,12 @@
 
 var bound = callBind(getPolyfill());
 
[31m-define(bound, {[0m
[31m-	getPolyfill: getPolyfill,[0m
[31m-	implementation: implementation,[0m
[31m-	shim: shim[0m
[31m-});[0m
[32m+define([0m
[32m+    bound, {[0m
[32m+        getPolyfill: getPolyfill,[0m
[32m+        implementation: implementation,[0m
[32m+        shim: shim[0m
[32m+    }[0m
[32m+);[0m
 
 module.exports = bound;
[31m--- node_modules/string.prototype.trimstart/polyfill.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -2,14 +2,15 @@
 
 var implementation = require('./implementation');
 
[31m-module.exports = function getPolyfill() {[0m
[31m-	if (!String.prototype.trimStart && !String.prototype.trimLeft) {[0m
[31m-		return implementation;[0m
[31m-	}[0m
[31m-	var zeroWidthSpace = '\u200b';[0m
[31m-	var trimmed = zeroWidthSpace.trimStart ? zeroWidthSpace.trimStart() : zeroWidthSpace.trimLeft();[0m
[31m-	if (trimmed !== zeroWidthSpace) {[0m
[31m-		return implementation;[0m
[31m-	}[0m
[31m-	return String.prototype.trimStart || String.prototype.trimLeft;[0m
[32m+module.exports = function getPolyfill()[0m
[32m+{[0m
[32m+    if (!String.prototype.trimStart && !String.prototype.trimLeft) {[0m
[32m+        return implementation;[0m
[32m+    }[0m
[32m+    var zeroWidthSpace = '\u200b';[0m
[32m+    var trimmed = zeroWidthSpace.trimStart ? zeroWidthSpace.trimStart() : zeroWidthSpace.trimLeft();[0m
[32m+    if (trimmed !== zeroWidthSpace) {[0m
[32m+        return implementation;[0m
[32m+    }[0m
[32m+    return String.prototype.trimStart || String.prototype.trimLeft;[0m
 };
[31m--- node_modules/string.prototype.trimstart/test/implementation.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -6,15 +6,25 @@
 var hasStrictMode = require('has-strict-mode')();
 var runTests = require('./tests');
 
[31m-test('as a function', function (t) {[0m
[31m-	t.test('bad array/this value', { skip: !hasStrictMode }, function (st) {[0m
[31m-		/* eslint no-useless-call: 0 */[0m
[31m-		st['throws'](function () { implementation.call(undefined); }, TypeError, 'undefined is not an object');[0m
[31m-		st['throws'](function () { implementation.call(null); }, TypeError, 'null is not an object');[0m
[31m-		st.end();[0m
[31m-	});[0m
[32m+test([0m
[32m+    'as a function', function (t) {[0m
[32m+        t.test([0m
[32m+            'bad array/this value', { skip: !hasStrictMode }, function (st) {[0m
[32m+                /* eslint no-useless-call: 0 */[0m
[32m+                st['throws']([0m
[32m+                    function () {[0m
[32m+                        implementation.call(undefined); }, TypeError, 'undefined is not an object'[0m
[32m+                );[0m
[32m+                st['throws']([0m
[32m+                    function () {[0m
[32m+                        implementation.call(null); }, TypeError, 'null is not an object'[0m
[32m+                );[0m
[32m+                st.end();[0m
[32m+            }[0m
[32m+        );[0m
 
[31m-	runTests(callBind(implementation), t);[0m
[32m+        runTests(callBind(implementation), t);[0m
 
[31m-	t.end();[0m
[31m-});[0m
[32m+        t.end();[0m
[32m+    }[0m
[32m+);[0m
[31m--- node_modules/string.prototype.trimstart/test/index.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -5,14 +5,24 @@
 
 var runTests = require('./tests');
 
[31m-test('as a function', function (t) {[0m
[31m-	t.test('bad array/this value', function (st) {[0m
[31m-		st['throws'](function () { trimStart(undefined, 'a'); }, TypeError, 'undefined is not an object');[0m
[31m-		st['throws'](function () { trimStart(null, 'a'); }, TypeError, 'null is not an object');[0m
[31m-		st.end();[0m
[31m-	});[0m
[32m+test([0m
[32m+    'as a function', function (t) {[0m
[32m+        t.test([0m
[32m+            'bad array/this value', function (st) {[0m
[32m+                st['throws']([0m
[32m+                    function () {[0m
[32m+                        trimStart(undefined, 'a'); }, TypeError, 'undefined is not an object'[0m
[32m+                );[0m
[32m+                st['throws']([0m
[32m+                    function () {[0m
[32m+                        trimStart(null, 'a'); }, TypeError, 'null is not an object'[0m
[32m+                );[0m
[32m+                st.end();[0m
[32m+            }[0m
[32m+        );[0m
 
[31m-	runTests(trimStart, t);[0m
[32m+        runTests(trimStart, t);[0m
 
[31m-	t.end();[0m
[31m-});[0m
[32m+        t.end();[0m
[32m+    }[0m
[32m+);[0m
[31m--- node_modules/string.prototype.trimstart/test/tests.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -1,26 +1,32 @@
 'use strict';
 
 module.exports = function (trimStart, t) {
[31m-	t.test('normal cases', function (st) {[0m
[31m-		st.equal(trimStart(' \t\na \t\n'), 'a \t\n', 'strips whitespace off the left side');[0m
[31m-		st.equal(trimStart('a'), 'a', 'noop when no whitespace');[0m
[32m+    t.test([0m
[32m+        'normal cases', function (st) {[0m
[32m+            st.equal(trimStart(' \t\na \t\n'), 'a \t\n', 'strips whitespace off the left side');[0m
[32m+            st.equal(trimStart('a'), 'a', 'noop when no whitespace');[0m
 
[31m-		var allWhitespaceChars = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';[0m
[31m-		st.equal(trimStart(allWhitespaceChars + 'a' + allWhitespaceChars), 'a' + allWhitespaceChars, 'all expected whitespace chars are trimmed');[0m
[32m+            var allWhitespaceChars = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';[0m
[32m+            st.equal(trimStart(allWhitespaceChars + 'a' + allWhitespaceChars), 'a' + allWhitespaceChars, 'all expected whitespace chars are trimmed');[0m
 
[31m-		st.end();[0m
[31m-	});[0m
[32m+            st.end();[0m
[32m+        }[0m
[32m+    );[0m
 
[31m-	// see https://codeblog.jonskeet.uk/2014/12/01/when-is-an-identifier-not-an-identifier-attack-of-the-mongolian-vowel-separator/[0m
[31m-	var mongolianVowelSeparator = '\u180E';[0m
[31m-	t.test('unicode >= 4 && < 6.3', { skip: !(/^\s$/).test(mongolianVowelSeparator) }, function (st) {[0m
[31m-		st.equal(trimStart(mongolianVowelSeparator + 'a' + mongolianVowelSeparator), 'a' + mongolianVowelSeparator, 'mongolian vowel separator is whitespace');[0m
[31m-		st.end();[0m
[31m-	});[0m
[32m+    // see https://codeblog.jonskeet.uk/2014/12/01/when-is-an-identifier-not-an-identifier-attack-of-the-mongolian-vowel-separator/[0m
[32m+    var mongolianVowelSeparator = '\u180E';[0m
[32m+    t.test([0m
[32m+        'unicode >= 4 && < 6.3', { skip: !(/^\s$/).test(mongolianVowelSeparator) }, function (st) {[0m
[32m+            st.equal(trimStart(mongolianVowelSeparator + 'a' + mongolianVowelSeparator), 'a' + mongolianVowelSeparator, 'mongolian vowel separator is whitespace');[0m
[32m+            st.end();[0m
[32m+        }[0m
[32m+    );[0m
 
[31m-	t.test('zero-width spaces', function (st) {[0m
[31m-		var zeroWidth = '\u200b';[0m
[31m-		st.equal(trimStart(zeroWidth), zeroWidth, 'zero width space does not trim');[0m
[31m-		st.end();[0m
[31m-	});[0m
[32m+    t.test([0m
[32m+        'zero-width spaces', function (st) {[0m
[32m+            var zeroWidth = '\u200b';[0m
[32m+            st.equal(trimStart(zeroWidth), zeroWidth, 'zero width space does not trim');[0m
[32m+            st.end();[0m
[32m+        }[0m
[32m+    );[0m
 };
[31m--- node_modules/string.prototype.trimstart/test/shimmed.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -11,27 +11,42 @@
 var isEnumerable = Object.prototype.propertyIsEnumerable;
 var functionsHaveNames = require('functions-have-names')();
 
[31m-test('shimmed', function (t) {[0m
[31m-	t.equal(String.prototype.trimStart.length, 0, 'String#trimStart has a length of 0');[0m
[31m-	t.test('Function name', { skip: !functionsHaveNames }, function (st) {[0m
[31m-		st.equal((/^(?:trimLeft|trimStart)$/).test(String.prototype.trimStart.name), true, 'String#trimStart has name "trimLeft" or "trimStart"');[0m
[31m-		st.end();[0m
[31m-	});[0m
[32m+test([0m
[32m+    'shimmed', function (t) {[0m
[32m+        t.equal(String.prototype.trimStart.length, 0, 'String#trimStart has a length of 0');[0m
[32m+        t.test([0m
[32m+            'Function name', { skip: !functionsHaveNames }, function (st) {[0m
[32m+                st.equal((/^(?:trimLeft|trimStart)$/).test(String.prototype.trimStart.name), true, 'String#trimStart has name "trimLeft" or "trimStart"');[0m
[32m+                st.end();[0m
[32m+            }[0m
[32m+        );[0m
 
[31m-	t.test('enumerability', { skip: !defineProperties.supportsDescriptors }, function (et) {[0m
[31m-		et.equal(false, isEnumerable.call(String.prototype, 'trimStart'), 'String#trimStart is not enumerable');[0m
[31m-		et.end();[0m
[31m-	});[0m
[32m+        t.test([0m
[32m+            'enumerability', { skip: !defineProperties.supportsDescriptors }, function (et) {[0m
[32m+                et.equal(false, isEnumerable.call(String.prototype, 'trimStart'), 'String#trimStart is not enumerable');[0m
[32m+                et.end();[0m
[32m+            }[0m
[32m+        );[0m
 
[31m-	var supportsStrictMode = (function () { return typeof this === 'undefined'; }());[0m
[32m+        var supportsStrictMode = (function () {[0m
[32m+            return typeof this === 'undefined'; }());[0m
 
[31m-	t.test('bad string/this value', { skip: !supportsStrictMode }, function (st) {[0m
[31m-		st['throws'](function () { return trimStart(undefined, 'a'); }, TypeError, 'undefined is not an object');[0m
[31m-		st['throws'](function () { return trimStart(null, 'a'); }, TypeError, 'null is not an object');[0m
[31m-		st.end();[0m
[31m-	});[0m
[32m+        t.test([0m
[32m+            'bad string/this value', { skip: !supportsStrictMode }, function (st) {[0m
[32m+                st['throws']([0m
[32m+                    function () {[0m
[32m+                        return trimStart(undefined, 'a'); }, TypeError, 'undefined is not an object'[0m
[32m+                );[0m
[32m+                st['throws']([0m
[32m+                    function () {[0m
[32m+                        return trimStart(null, 'a'); }, TypeError, 'null is not an object'[0m
[32m+                );[0m
[32m+                st.end();[0m
[32m+            }[0m
[32m+        );[0m
 
[31m-	runTests(callBind(String.prototype.trimStart), t);[0m
[32m+        runTests(callBind(String.prototype.trimStart), t);[0m
 
[31m-	t.end();[0m
[31m-});[0m
[32m+        t.end();[0m
[32m+    }[0m
[32m+);[0m
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/root.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -5,15 +5,33 @@
 
 var _container = _interopRequireDefault(require("./container"));
 
[31m-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }[0m
[32m+function _interopRequireDefault(obj)[0m
[32m+{[0m
[32m+    return obj && obj.__esModule ? obj : { default: obj }; }[0m
 
[31m-function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }[0m
[32m+function _createForOfIteratorHelperLoose(o, allowArrayLike)[0m
[32m+{[0m
[32m+    var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) { o = it;[0m
[32m+    } var i = 0; return function () {[0m
[32m+        if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }[0m
 
[31m-function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }[0m
[32m+function _unsupportedIterableToArray(o, minLen)[0m
[32m+{[0m
[32m+    if (!o) { return;[0m
[32m+    } if (typeof o === "string") { return _arrayLikeToArray(o, minLen);[0m
[32m+    } var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) { n = o.constructor.name;[0m
[32m+    } if (n === "Map" || n === "Set") { return Array.from(o);[0m
[32m+    } if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) { return _arrayLikeToArray(o, minLen);[0m
[32m+    } }[0m
 
[31m-function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }[0m
[32m+function _arrayLikeToArray(arr, len)[0m
[32m+{[0m
[32m+    if (len == null || len > arr.length) { len = arr.length;[0m
[32m+    } for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }[0m
 
[31m-function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }[0m
[32m+function _inheritsLoose(subClass, superClass)[0m
[32m+{[0m
[32m+    subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }[0m
 
 /**
  * Represents a CSS file and contains all its parsed nodes.
@@ -26,94 +44,99 @@
  * root.nodes.length //=> 2
  */
 var Root = /*#__PURE__*/function (_Container) {
[31m-  _inheritsLoose(Root, _Container);[0m
[32m+    _inheritsLoose(Root, _Container);[0m
 
[31m-  function Root(defaults) {[0m
[31m-    var _this;[0m
[32m+    function Root(defaults)[0m
[32m+    {[0m
[32m+        var _this;[0m
 
[31m-    _this = _Container.call(this, defaults) || this;[0m
[31m-    _this.type = 'root';[0m
[31m-    if (!_this.nodes) _this.nodes = [];[0m
[31m-    return _this;[0m
[31m-  }[0m
[32m+        _this = _Container.call(this, defaults) || this;[0m
[32m+        _this.type = 'root';[0m
[32m+        if (!_this.nodes) { _this.nodes = [];[0m
[32m+        }[0m
[32m+        return _this;[0m
[32m+    }[0m
 
[31m-  var _proto = Root.prototype;[0m
[32m+    var _proto = Root.prototype;[0m
 
[31m-  _proto.removeChild = function removeChild(child, ignore) {[0m
[31m-    var index = this.index(child);[0m
[32m+    _proto.removeChild = function removeChild(child, ignore)[0m
[32m+    {[0m
[32m+        var index = this.index(child);[0m
 
[31m-    if (!ignore && index === 0 && this.nodes.length > 1) {[0m
[31m-      this.nodes[1].raws.before = this.nodes[index].raws.before;[0m
[31m-    }[0m
[32m+        if (!ignore && index === 0 && this.nodes.length > 1) {[0m
[32m+            this.nodes[1].raws.before = this.nodes[index].raws.before;[0m
[32m+        }[0m
 
[31m-    return _Container.prototype.removeChild.call(this, child);[0m
[31m-  };[0m
[32m+        return _Container.prototype.removeChild.call(this, child);[0m
[32m+    };[0m
 
[31m-  _proto.normalize = function normalize(child, sample, type) {[0m
[31m-    var nodes = _Container.prototype.normalize.call(this, child);[0m
[32m+    _proto.normalize = function normalize(child, sample, type)[0m
[32m+    {[0m
[32m+        var nodes = _Container.prototype.normalize.call(this, child);[0m
 
[31m-    if (sample) {[0m
[31m-      if (type === 'prepend') {[0m
[31m-        if (this.nodes.length > 1) {[0m
[31m-          sample.raws.before = this.nodes[1].raws.before;[0m
[31m-        } else {[0m
[31m-          delete sample.raws.before;[0m
[32m+        if (sample) {[0m
[32m+            if (type === 'prepend') {[0m
[32m+                if (this.nodes.length > 1) {[0m
[32m+                    sample.raws.before = this.nodes[1].raws.before;[0m
[32m+                } else {[0m
[32m+                    delete sample.raws.before;[0m
[32m+                }[0m
[32m+            } else if (this.first !== sample) {[0m
[32m+                for (var _iterator = _createForOfIteratorHelperLoose(nodes), _step; !(_step = _iterator()).done;) {[0m
[32m+                    var node = _step.value;[0m
[32m+                    node.raws.before = sample.raws.before;[0m
[32m+                }[0m
[32m+            }[0m
         }
[31m-      } else if (this.first !== sample) {[0m
[31m-        for (var _iterator = _createForOfIteratorHelperLoose(nodes), _step; !(_step = _iterator()).done;) {[0m
[31m-          var node = _step.value;[0m
[31m-          node.raws.before = sample.raws.before;[0m
[31m-        }[0m
[31m-      }[0m
[31m-    }[0m
 
[31m-    return nodes;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Returns a {@link Result} instance representing the root’s CSS.[0m
[31m-   *[0m
[31m-   * @param {processOptions} [opts] Options with only `to` and `map` keys.[0m
[31m-   *[0m
[31m-   * @return {Result} Result with current root’s CSS.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const root1 = postcss.parse(css1, { from: 'a.css' })[0m
[31m-   * const root2 = postcss.parse(css2, { from: 'b.css' })[0m
[31m-   * root1.append(root2)[0m
[31m-   * const result = root1.toResult({ to: 'all.css', map: true })[0m
[31m-   */[0m
[31m-  ;[0m
[31m-[0m
[31m-  _proto.toResult = function toResult(opts) {[0m
[31m-    if (opts === void 0) {[0m
[31m-      opts = {};[0m
[32m+        return nodes;[0m
     }
[32m+    /**[0m
[32m+     * Returns a {@link Result} instance representing the root’s CSS.[0m
[32m+     *[0m
[32m+     * @param {processOptions} [opts] Options with only `to` and `map` keys.[0m
[32m+     *[0m
[32m+     * @return {Result} Result with current root’s CSS.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const root1 = postcss.parse(css1, { from: 'a.css' })[0m
[32m+     * const root2 = postcss.parse(css2, { from: 'b.css' })[0m
[32m+     * root1.append(root2)[0m
[32m+     * const result = root1.toResult({ to: 'all.css', map: true })[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    var LazyResult = require('./lazy-result');[0m
[32m+    _proto.toResult = function toResult(opts)[0m
[32m+    {[0m
[32m+        if (opts === void 0) {[0m
[32m+            opts = {};[0m
[32m+        }[0m
 
[31m-    var Processor = require('./processor');[0m
[32m+        var LazyResult = require('./lazy-result');[0m
 
[31m-    var lazy = new LazyResult(new Processor(), this, opts);[0m
[31m-    return lazy.stringify();[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * @memberof Root#[0m
[31m-   * @member {object} raws Information to generate byte-to-byte equal[0m
[31m-   *                       node string as it was in the origin input.[0m
[31m-   *[0m
[31m-   * Every parser saves its own properties,[0m
[31m-   * but the default CSS parser uses:[0m
[31m-   *[0m
[31m-   * * `after`: the space symbols after the last child to the end of file.[0m
[31m-   * * `semicolon`: is the last child has an (optional) semicolon.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * postcss.parse('a {}\n').raws //=> { after: '\n' }[0m
[31m-   * postcss.parse('a {}').raws   //=> { after: '' }[0m
[31m-   */[0m
[31m-  ;[0m
[32m+        var Processor = require('./processor');[0m
 
[31m-  return Root;[0m
[32m+        var lazy = new LazyResult(new Processor(), this, opts);[0m
[32m+        return lazy.stringify();[0m
[32m+    }[0m
[32m+    /**[0m
[32m+     * @memberof Root#[0m
[32m+     * @member   {object} raws Information to generate byte-to-byte equal[0m
[32m+     *                       node string as it was in the origin input.[0m
[32m+     *[0m
[32m+     * Every parser saves its own properties,[0m
[32m+     * but the default CSS parser uses:[0m
[32m+     *[0m
[32m+     * * `after`: the space symbols after the last child to the end of file.[0m
[32m+     * * `semicolon`: is the last child has an (optional) semicolon.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * postcss.parse('a {}\n').raws //=> { after: '\n' }[0m
[32m+     * postcss.parse('a {}').raws   //=> { after: '' }[0m
[32m+     */[0m
[32m+    ;[0m
[32m+[0m
[32m+    return Root;[0m
 }(_container.default);
 
 var _default = Root;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/postcss.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -23,7 +23,9 @@
 
 var _root = _interopRequireDefault(require("./root"));
 
[31m-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }[0m
[32m+function _interopRequireDefault(obj)[0m
[32m+{[0m
[32m+    return obj && obj.__esModule ? obj : { default: obj }; }[0m
 
 /**
  * Create a new {@link Processor} instance that will apply `plugins`
@@ -43,16 +45,17 @@
  *
  * @namespace postcss
  */
[31m-function postcss() {[0m
[31m-  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {[0m
[31m-    plugins[_key] = arguments[_key];[0m
[31m-  }[0m
[32m+function postcss()[0m
[32m+{[0m
[32m+    for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {[0m
[32m+        plugins[_key] = arguments[_key];[0m
[32m+    }[0m
 
[31m-  if (plugins.length === 1 && Array.isArray(plugins[0])) {[0m
[31m-    plugins = plugins[0];[0m
[31m-  }[0m
[32m+    if (plugins.length === 1 && Array.isArray(plugins[0])) {[0m
[32m+        plugins = plugins[0];[0m
[32m+    }[0m
 
[31m-  return new _processor.default(plugins);[0m
[32m+    return new _processor.default(plugins);[0m
 }
 /**
  * Creates a PostCSS plugin with a standard API.
@@ -128,27 +131,33 @@
  */
 
 
[31m-postcss.plugin = function plugin(name, initializer) {[0m
[31m-  function creator() {[0m
[31m-    var transformer = initializer.apply(void 0, arguments);[0m
[31m-    transformer.postcssPlugin = name;[0m
[31m-    transformer.postcssVersion = new _processor.default().version;[0m
[31m-    return transformer;[0m
[31m-  }[0m
[31m-[0m
[31m-  var cache;[0m
[31m-  Object.defineProperty(creator, 'postcss', {[0m
[31m-    get: function get() {[0m
[31m-      if (!cache) cache = creator();[0m
[31m-      return cache;[0m
[32m+postcss.plugin = function plugin(name, initializer)[0m
[32m+{[0m
[32m+    function creator()[0m
[32m+    {[0m
[32m+        var transformer = initializer.apply(void 0, arguments);[0m
[32m+        transformer.postcssPlugin = name;[0m
[32m+        transformer.postcssVersion = new _processor.default().version;[0m
[32m+        return transformer;[0m
     }
[31m-  });[0m
 
[31m-  creator.process = function (css, processOpts, pluginOpts) {[0m
[31m-    return postcss([creator(pluginOpts)]).process(css, processOpts);[0m
[31m-  };[0m
[32m+    var cache;[0m
[32m+    Object.defineProperty([0m
[32m+        creator, 'postcss', {[0m
[32m+            get: function get()[0m
[32m+            {[0m
[32m+                if (!cache) { cache = creator();[0m
[32m+                }[0m
[32m+                return cache;[0m
[32m+            }[0m
[32m+        }[0m
[32m+    );[0m
 
[31m-  return creator;[0m
[32m+    creator.process = function (css, processOpts, pluginOpts) {[0m
[32m+        return postcss([creator(pluginOpts)]).process(css, processOpts);[0m
[32m+    };[0m
[32m+[0m
[32m+    return creator;[0m
 };
 /**
  * Default function to convert a node tree into a CSS string.
@@ -216,7 +225,7 @@
  */
 
 postcss.comment = function (defaults) {
[31m-  return new _comment.default(defaults);[0m
[32m+    return new _comment.default(defaults);[0m
 };
 /**
  * Creates a new {@link AtRule} node.
@@ -231,7 +240,7 @@
 
 
 postcss.atRule = function (defaults) {
[31m-  return new _atRule.default(defaults);[0m
[32m+    return new _atRule.default(defaults);[0m
 };
 /**
  * Creates a new {@link Declaration} node.
@@ -246,7 +255,7 @@
 
 
 postcss.decl = function (defaults) {
[31m-  return new _declaration.default(defaults);[0m
[32m+    return new _declaration.default(defaults);[0m
 };
 /**
  * Creates a new {@link Rule} node.
@@ -261,7 +270,7 @@
 
 
 postcss.rule = function (defaults) {
[31m-  return new _rule.default(defaults);[0m
[32m+    return new _rule.default(defaults);[0m
 };
 /**
  * Creates a new {@link Root} node.
@@ -276,7 +285,7 @@
 
 
 postcss.root = function (defaults) {
[31m-  return new _root.default(defaults);[0m
[32m+    return new _root.default(defaults);[0m
 };
 
 var _default = postcss;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/warning.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -12,117 +12,122 @@
  * }
  */
 var Warning = /*#__PURE__*/function () {
[31m-  /**[0m
[31m-   * @param {string} text        Warning message.[0m
[31m-   * @param {Object} [opts]      Warning options.[0m
[31m-   * @param {Node}   opts.node   CSS node that caused the warning.[0m
[31m-   * @param {string} opts.word   Word in CSS source that caused the warning.[0m
[31m-   * @param {number} opts.index  Index in CSS node string that caused[0m
[31m-   *                             the warning.[0m
[31m-   * @param {string} opts.plugin Name of the plugin that created[0m
[31m-   *                             this warning. {@link Result#warn} fills[0m
[31m-   *                             this property automatically.[0m
[31m-   */[0m
[31m-  function Warning(text, opts) {[0m
[31m-    if (opts === void 0) {[0m
[31m-      opts = {};[0m
[31m-    }[0m
[31m-[0m
     /**
[31m-     * Type to filter warnings from {@link Result#messages}.[0m
[31m-     * Always equal to `"warning"`.[0m
[31m-     *[0m
[31m-     * @type {string}[0m
[31m-     *[0m
[31m-     * @example[0m
[31m-     * const nonWarning = result.messages.filter(i => i.type !== 'warning')[0m
[32m+     * @param {string} text        Warning message.[0m
[32m+     * @param {Object} [opts]      Warning options.[0m
[32m+     * @param {Node}   opts.node   CSS node that caused the warning.[0m
[32m+     * @param {string} opts.word   Word in CSS source that caused the warning.[0m
[32m+     * @param {number} opts.index  Index in CSS node string that caused[0m
[32m+     *                             the warning.[0m
[32m+     * @param {string} opts.plugin Name of the plugin that created[0m
[32m+     *                             this warning. {@link Result#warn} fills[0m
[32m+     *                             this property automatically.[0m
      */
[31m-    this.type = 'warning';[0m
[31m-    /**[0m
[31m-     * The warning message.[0m
[31m-     *[0m
[31m-     * @type {string}[0m
[31m-     *[0m
[31m-     * @example[0m
[31m-     * warning.text //=> 'Try to avoid !important'[0m
[31m-     */[0m
[32m+    function Warning(text, opts)[0m
[32m+    {[0m
[32m+        if (opts === void 0) {[0m
[32m+            opts = {};[0m
[32m+        }[0m
 
[31m-    this.text = text;[0m
[32m+        /**[0m
[32m+         * Type to filter warnings from {@link Result#messages}.[0m
[32m+         * Always equal to `"warning"`.[0m
[32m+         *[0m
[32m+         * @type {string}[0m
[32m+         *[0m
[32m+         * @example[0m
[32m+         * const nonWarning = result.messages.filter(i => i.type !== 'warning')[0m
[32m+         */[0m
[32m+        this.type = 'warning';[0m
[32m+        /**[0m
[32m+         * The warning message.[0m
[32m+         *[0m
[32m+         * @type {string}[0m
[32m+         *[0m
[32m+         * @example[0m
[32m+         * warning.text //=> 'Try to avoid !important'[0m
[32m+         */[0m
 
[31m-    if (opts.node && opts.node.source) {[0m
[31m-      var pos = opts.node.positionBy(opts);[0m
[31m-      /**[0m
[31m-       * Line in the input file with this warning’s source.[0m
[31m-       * @type {number}[0m
[31m-       *[0m
[31m-       * @example[0m
[31m-       * warning.line //=> 5[0m
[31m-       */[0m
[32m+        this.text = text;[0m
 
[31m-      this.line = pos.line;[0m
[31m-      /**[0m
[31m-       * Column in the input file with this warning’s source.[0m
[31m-       *[0m
[31m-       * @type {number}[0m
[31m-       *[0m
[31m-       * @example[0m
[31m-       * warning.column //=> 6[0m
[31m-       */[0m
[32m+        if (opts.node && opts.node.source) {[0m
[32m+            var pos = opts.node.positionBy(opts);[0m
[32m+            /**[0m
[32m+             * Line in the input file with this warning’s source.[0m
[32m+           *[0m
[32m+             * @type {number}[0m
[32m+             *[0m
[32m+             * @example[0m
[32m+             * warning.line //=> 5[0m
[32m+             */[0m
 
[31m-      this.column = pos.column;[0m
[31m-    }[0m
[32m+            this.line = pos.line;[0m
[32m+            /**[0m
[32m+             * Column in the input file with this warning’s source.[0m
[32m+             *[0m
[32m+             * @type {number}[0m
[32m+             *[0m
[32m+             * @example[0m
[32m+             * warning.column //=> 6[0m
[32m+             */[0m
 
[31m-    for (var opt in opts) {[0m
[31m-      this[opt] = opts[opt];[0m
[32m+            this.column = pos.column;[0m
[32m+        }[0m
[32m+[0m
[32m+        for (var opt in opts) {[0m
[32m+            this[opt] = opts[opt];[0m
[32m+        }[0m
     }
[31m-  }[0m
[31m-  /**[0m
[31m-   * Returns a warning position and message.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * warning.toString() //=> 'postcss-lint:a.css:10:14: Avoid !important'[0m
[31m-   *[0m
[31m-   * @return {string} Warning position and message.[0m
[31m-   */[0m
[32m+    /**[0m
[32m+     * Returns a warning position and message.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * warning.toString() //=> 'postcss-lint:a.css:10:14: Avoid !important'[0m
[32m+     *[0m
[32m+     * @return {string} Warning position and message.[0m
[32m+     */[0m
 
 
[31m-  var _proto = Warning.prototype;[0m
[32m+    var _proto = Warning.prototype;[0m
 
[31m-  _proto.toString = function toString() {[0m
[31m-    if (this.node) {[0m
[31m-      return this.node.error(this.text, {[0m
[31m-        plugin: this.plugin,[0m
[31m-        index: this.index,[0m
[31m-        word: this.word[0m
[31m-      }).message;[0m
[31m-    }[0m
[32m+    _proto.toString = function toString()[0m
[32m+    {[0m
[32m+        if (this.node) {[0m
[32m+            return this.node.error([0m
[32m+                this.text, {[0m
[32m+                    plugin: this.plugin,[0m
[32m+                    index: this.index,[0m
[32m+                    word: this.word[0m
[32m+                }[0m
[32m+            ).message;[0m
[32m+        }[0m
 
[31m-    if (this.plugin) {[0m
[31m-      return this.plugin + ': ' + this.text;[0m
[32m+        if (this.plugin) {[0m
[32m+            return this.plugin + ': ' + this.text;[0m
[32m+        }[0m
[32m+[0m
[32m+        return this.text;[0m
     }
[32m+    /**[0m
[32m+     * @memberof Warning#[0m
[32m+     * @member   {string} plugin The name of the plugin that created[0m
[32m+     *                         it will fill this property automatically.[0m
[32m+     *                         this warning. When you call {@link Node#warn}[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * warning.plugin //=> 'postcss-important'[0m
[32m+     */[0m
 
[31m-    return this.text;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * @memberof Warning#[0m
[31m-   * @member {string} plugin The name of the plugin that created[0m
[31m-   *                         it will fill this property automatically.[0m
[31m-   *                         this warning. When you call {@link Node#warn}[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * warning.plugin //=> 'postcss-important'[0m
[31m-   */[0m
[32m+    /**[0m
[32m+     * @memberof Warning#[0m
[32m+     * @member   {Node} node Contains the CSS node that caused the warning.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * warning.node.toString() //=> 'color: white !important'[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-  /**[0m
[31m-   * @memberof Warning#[0m
[31m-   * @member {Node} node Contains the CSS node that caused the warning.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * warning.node.toString() //=> 'color: white !important'[0m
[31m-   */[0m
[31m-  ;[0m
[31m-[0m
[31m-  return Warning;[0m
[32m+    return Warning;[0m
 }();
 
 var _default = Warning;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/warn-once.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -4,13 +4,15 @@
 exports.default = warnOnce;
 var printed = {};
 
[31m-function warnOnce(message) {[0m
[31m-  if (printed[message]) return;[0m
[31m-  printed[message] = true;[0m
[32m+function warnOnce(message)[0m
[32m+{[0m
[32m+    if (printed[message]) { return;[0m
[32m+    }[0m
[32m+    printed[message] = true;[0m
 
[31m-  if (typeof console !== 'undefined' && console.warn) {[0m
[31m-    console.warn(message);[0m
[31m-  }[0m
[32m+    if (typeof console !== 'undefined' && console.warn) {[0m
[32m+        console.warn(message);[0m
[32m+    }[0m
 }
 
 module.exports = exports.default;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/at-rule.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -5,9 +5,13 @@
 
 var _container = _interopRequireDefault(require("./container"));
 
[31m-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }[0m
[32m+function _interopRequireDefault(obj)[0m
[32m+{[0m
[32m+    return obj && obj.__esModule ? obj : { default: obj }; }[0m
 
[31m-function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }[0m
[32m+function _inheritsLoose(subClass, superClass)[0m
[32m+{[0m
[32m+    subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }[0m
 
 /**
  * Represents an at-rule.
@@ -28,97 +32,102 @@
  * media.nodes   //=> []
  */
 var AtRule = /*#__PURE__*/function (_Container) {
[31m-  _inheritsLoose(AtRule, _Container);[0m
[32m+    _inheritsLoose(AtRule, _Container);[0m
 
[31m-  function AtRule(defaults) {[0m
[31m-    var _this;[0m
[32m+    function AtRule(defaults)[0m
[32m+    {[0m
[32m+        var _this;[0m
 
[31m-    _this = _Container.call(this, defaults) || this;[0m
[31m-    _this.type = 'atrule';[0m
[31m-    return _this;[0m
[31m-  }[0m
[32m+        _this = _Container.call(this, defaults) || this;[0m
[32m+        _this.type = 'atrule';[0m
[32m+        return _this;[0m
[32m+    }[0m
 
[31m-  var _proto = AtRule.prototype;[0m
[32m+    var _proto = AtRule.prototype;[0m
 
[31m-  _proto.append = function append() {[0m
[31m-    var _Container$prototype$;[0m
[32m+    _proto.append = function append()[0m
[32m+    {[0m
[32m+        var _Container$prototype$;[0m
 
[31m-    if (!this.nodes) this.nodes = [];[0m
[32m+        if (!this.nodes) { this.nodes = [];[0m
[32m+        }[0m
 
[31m-    for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {[0m
[31m-      children[_key] = arguments[_key];[0m
[31m-    }[0m
[32m+        for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {[0m
[32m+            children[_key] = arguments[_key];[0m
[32m+        }[0m
 
[31m-    return (_Container$prototype$ = _Container.prototype.append).call.apply(_Container$prototype$, [this].concat(children));[0m
[31m-  };[0m
[32m+        return (_Container$prototype$ = _Container.prototype.append).call.apply(_Container$prototype$, [this].concat(children));[0m
[32m+    };[0m
 
[31m-  _proto.prepend = function prepend() {[0m
[31m-    var _Container$prototype$2;[0m
[32m+    _proto.prepend = function prepend()[0m
[32m+    {[0m
[32m+        var _Container$prototype$2;[0m
 
[31m-    if (!this.nodes) this.nodes = [];[0m
[32m+        if (!this.nodes) { this.nodes = [];[0m
[32m+        }[0m
 
[31m-    for (var _len2 = arguments.length, children = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {[0m
[31m-      children[_key2] = arguments[_key2];[0m
[32m+        for (var _len2 = arguments.length, children = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {[0m
[32m+            children[_key2] = arguments[_key2];[0m
[32m+        }[0m
[32m+[0m
[32m+        return (_Container$prototype$2 = _Container.prototype.prepend).call.apply(_Container$prototype$2, [this].concat(children));[0m
     }
[32m+    /**[0m
[32m+     * @memberof AtRule#[0m
[32m+     * @member   {string} name The at-rule’s name immediately follows the `@`.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const root  = postcss.parse('@media print {}')[0m
[32m+     * media.name //=> 'media'[0m
[32m+     * const media = root.first[0m
[32m+     */[0m
 
[31m-    return (_Container$prototype$2 = _Container.prototype.prepend).call.apply(_Container$prototype$2, [this].concat(children));[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * @memberof AtRule#[0m
[31m-   * @member {string} name The at-rule’s name immediately follows the `@`.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const root  = postcss.parse('@media print {}')[0m
[31m-   * media.name //=> 'media'[0m
[31m-   * const media = root.first[0m
[31m-   */[0m
[32m+    /**[0m
[32m+     * @memberof AtRule#[0m
[32m+     * @member   {string} params The at-rule’s parameters, the values[0m
[32m+     *                         that follow the at-rule’s name but precede[0m
[32m+     *                         any {} block.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const root  = postcss.parse('@media print, screen {}')[0m
[32m+     * const media = root.first[0m
[32m+     * media.params //=> 'print, screen'[0m
[32m+     */[0m
 
[31m-  /**[0m
[31m-   * @memberof AtRule#[0m
[31m-   * @member {string} params The at-rule’s parameters, the values[0m
[31m-   *                         that follow the at-rule’s name but precede[0m
[31m-   *                         any {} block.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const root  = postcss.parse('@media print, screen {}')[0m
[31m-   * const media = root.first[0m
[31m-   * media.params //=> 'print, screen'[0m
[31m-   */[0m
[32m+    /**[0m
[32m+     * @memberof AtRule#[0m
[32m+     * @member   {object} raws Information to generate byte-to-byte equal[0m
[32m+     *                        node string as it was in the origin input.[0m
[32m+     *[0m
[32m+     * Every parser saves its own properties,[0m
[32m+     * but the default CSS parser uses:[0m
[32m+     *[0m
[32m+     * * `before`: the space symbols before the node. It also stores `*`[0m
[32m+     *   and `_` symbols before the declaration (IE hack).[0m
[32m+     * * `after`: the space symbols after the last child of the node[0m
[32m+     *   to the end of the node.[0m
[32m+     * * `between`: the symbols between the property and value[0m
[32m+     *   for declarations, selector and `{` for rules, or last parameter[0m
[32m+     *   and `{` for at-rules.[0m
[32m+     * * `semicolon`: contains true if the last child has[0m
[32m+     *   an (optional) semicolon.[0m
[32m+     * * `afterName`: the space between the at-rule name and its parameters.[0m
[32m+     *[0m
[32m+     * PostCSS cleans at-rule parameters from comments and extra spaces,[0m
[32m+     * but it stores origin content in raws properties.[0m
[32m+     * As such, if you don’t change a declaration’s value,[0m
[32m+     * PostCSS will use the raw value with comments.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const root = postcss.parse('  @media\nprint {\n}')[0m
[32m+     * root.first.first.raws //=> { before: '  ',[0m
[32m+     *                       //     between: ' ',[0m
[32m+     *                       //     afterName: '\n',[0m
[32m+     *                       //     after: '\n' }[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-  /**[0m
[31m-   * @memberof AtRule#[0m
[31m-   * @member {object} raws Information to generate byte-to-byte equal[0m
[31m-   *                        node string as it was in the origin input.[0m
[31m-   *[0m
[31m-   * Every parser saves its own properties,[0m
[31m-   * but the default CSS parser uses:[0m
[31m-   *[0m
[31m-   * * `before`: the space symbols before the node. It also stores `*`[0m
[31m-   *   and `_` symbols before the declaration (IE hack).[0m
[31m-   * * `after`: the space symbols after the last child of the node[0m
[31m-   *   to the end of the node.[0m
[31m-   * * `between`: the symbols between the property and value[0m
[31m-   *   for declarations, selector and `{` for rules, or last parameter[0m
[31m-   *   and `{` for at-rules.[0m
[31m-   * * `semicolon`: contains true if the last child has[0m
[31m-   *   an (optional) semicolon.[0m
[31m-   * * `afterName`: the space between the at-rule name and its parameters.[0m
[31m-   *[0m
[31m-   * PostCSS cleans at-rule parameters from comments and extra spaces,[0m
[31m-   * but it stores origin content in raws properties.[0m
[31m-   * As such, if you don’t change a declaration’s value,[0m
[31m-   * PostCSS will use the raw value with comments.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const root = postcss.parse('  @media\nprint {\n}')[0m
[31m-   * root.first.first.raws //=> { before: '  ',[0m
[31m-   *                       //     between: ' ',[0m
[31m-   *                       //     afterName: '\n',[0m
[31m-   *                       //     after: '\n' }[0m
[31m-   */[0m
[31m-  ;[0m
[31m-[0m
[31m-  return AtRule;[0m
[32m+    return AtRule;[0m
 }(_container.default);
 
 var _default = AtRule;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/terminal-highlight.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -9,73 +9,83 @@
 
 var _input = _interopRequireDefault(require("./input"));
 
[31m-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }[0m
[32m+function _interopRequireDefault(obj)[0m
[32m+{[0m
[32m+    return obj && obj.__esModule ? obj : { default: obj }; }[0m
 
 var HIGHLIGHT_THEME = {
[31m-  'brackets': _chalk.default.cyan,[0m
[31m-  'at-word': _chalk.default.cyan,[0m
[31m-  'comment': _chalk.default.gray,[0m
[31m-  'string': _chalk.default.green,[0m
[31m-  'class': _chalk.default.yellow,[0m
[31m-  'call': _chalk.default.cyan,[0m
[31m-  'hash': _chalk.default.magenta,[0m
[31m-  '(': _chalk.default.cyan,[0m
[31m-  ')': _chalk.default.cyan,[0m
[31m-  '{': _chalk.default.yellow,[0m
[31m-  '}': _chalk.default.yellow,[0m
[31m-  '[': _chalk.default.yellow,[0m
[31m-  ']': _chalk.default.yellow,[0m
[31m-  ':': _chalk.default.yellow,[0m
[31m-  ';': _chalk.default.yellow[0m
[32m+    'brackets': _chalk.default.cyan,[0m
[32m+    'at-word': _chalk.default.cyan,[0m
[32m+    'comment': _chalk.default.gray,[0m
[32m+    'string': _chalk.default.green,[0m
[32m+    'class': _chalk.default.yellow,[0m
[32m+    'call': _chalk.default.cyan,[0m
[32m+    'hash': _chalk.default.magenta,[0m
[32m+    '(': _chalk.default.cyan,[0m
[32m+    ')': _chalk.default.cyan,[0m
[32m+    '{': _chalk.default.yellow,[0m
[32m+    '}': _chalk.default.yellow,[0m
[32m+    '[': _chalk.default.yellow,[0m
[32m+    ']': _chalk.default.yellow,[0m
[32m+    ':': _chalk.default.yellow,[0m
[32m+    ';': _chalk.default.yellow[0m
 };
 
[31m-function getTokenType(_ref, processor) {[0m
[31m-  var type = _ref[0],[0m
[32m+function getTokenType(_ref, processor)[0m
[32m+{[0m
[32m+    var type = _ref[0],[0m
       value = _ref[1];
 
[31m-  if (type === 'word') {[0m
[31m-    if (value[0] === '.') {[0m
[31m-      return 'class';[0m
[32m+    if (type === 'word') {[0m
[32m+        if (value[0] === '.') {[0m
[32m+            return 'class';[0m
[32m+        }[0m
[32m+[0m
[32m+        if (value[0] === '#') {[0m
[32m+            return 'hash';[0m
[32m+        }[0m
     }
 
[31m-    if (value[0] === '#') {[0m
[31m-      return 'hash';[0m
[32m+    if (!processor.endOfFile()) {[0m
[32m+        var next = processor.nextToken();[0m
[32m+        processor.back(next);[0m
[32m+        if (next[0] === 'brackets' || next[0] === '(') { return 'call';[0m
[32m+        }[0m
     }
[31m-  }[0m
 
[31m-  if (!processor.endOfFile()) {[0m
[31m-    var next = processor.nextToken();[0m
[31m-    processor.back(next);[0m
[31m-    if (next[0] === 'brackets' || next[0] === '(') return 'call';[0m
[31m-  }[0m
[31m-[0m
[31m-  return type;[0m
[32m+    return type;[0m
 }
 
[31m-function terminalHighlight(css) {[0m
[31m-  var processor = (0, _tokenize.default)(new _input.default(css), {[0m
[31m-    ignoreErrors: true[0m
[31m-  });[0m
[31m-  var result = '';[0m
[32m+function terminalHighlight(css)[0m
[32m+{[0m
[32m+    var processor = (0, _tokenize.default)([0m
[32m+        new _input.default(css), {[0m
[32m+            ignoreErrors: true[0m
[32m+        }[0m
[32m+    );[0m
[32m+    var result = '';[0m
 
[31m-  var _loop = function _loop() {[0m
[31m-    var token = processor.nextToken();[0m
[31m-    var color = HIGHLIGHT_THEME[getTokenType(token, processor)];[0m
[32m+    var _loop = function _loop()[0m
[32m+    {[0m
[32m+        var token = processor.nextToken();[0m
[32m+        var color = HIGHLIGHT_THEME[getTokenType(token, processor)];[0m
 
[31m-    if (color) {[0m
[31m-      result += token[1].split(/\r?\n/).map(function (i) {[0m
[31m-        return color(i);[0m
[31m-      }).join('\n');[0m
[31m-    } else {[0m
[31m-      result += token[1];[0m
[32m+        if (color) {[0m
[32m+            result += token[1].split(/\r?\n/).map([0m
[32m+                function (i) {[0m
[32m+                    return color(i);[0m
[32m+                }[0m
[32m+            ).join('\n');[0m
[32m+        } else {[0m
[32m+            result += token[1];[0m
[32m+        }[0m
[32m+    };[0m
[32m+[0m
[32m+    while (!processor.endOfFile()) {[0m
[32m+        _loop();[0m
     }
[31m-  };[0m
 
[31m-  while (!processor.endOfFile()) {[0m
[31m-    _loop();[0m
[31m-  }[0m
[31m-[0m
[31m-  return result;[0m
[32m+    return result;[0m
 }
 
 var _default = terminalHighlight;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/list.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -13,79 +13,86 @@
  * @namespace list
  */
 var list = {
[31m-  split: function split(string, separators, last) {[0m
[31m-    var array = [];[0m
[31m-    var current = '';[0m
[31m-    var split = false;[0m
[31m-    var func = 0;[0m
[31m-    var quote = false;[0m
[31m-    var escape = false;[0m
[32m+    split: function split(string, separators, last)[0m
[32m+    {[0m
[32m+        var array = [];[0m
[32m+        var current = '';[0m
[32m+        var split = false;[0m
[32m+        var func = 0;[0m
[32m+        var quote = false;[0m
[32m+        var escape = false;[0m
 
[31m-    for (var i = 0; i < string.length; i++) {[0m
[31m-      var letter = string[i];[0m
[32m+        for (var i = 0; i < string.length; i++) {[0m
[32m+            var letter = string[i];[0m
 
[31m-      if (quote) {[0m
[31m-        if (escape) {[0m
[31m-          escape = false;[0m
[31m-        } else if (letter === '\\') {[0m
[31m-          escape = true;[0m
[31m-        } else if (letter === quote) {[0m
[31m-          quote = false;[0m
[32m+            if (quote) {[0m
[32m+                if (escape) {[0m
[32m+                    escape = false;[0m
[32m+                } else if (letter === '\\') {[0m
[32m+                    escape = true;[0m
[32m+                } else if (letter === quote) {[0m
[32m+                    quote = false;[0m
[32m+                }[0m
[32m+            } else if (letter === '"' || letter === '\'') {[0m
[32m+                quote = letter;[0m
[32m+            } else if (letter === '(') {[0m
[32m+                func += 1;[0m
[32m+            } else if (letter === ')') {[0m
[32m+                if (func > 0) { func -= 1;[0m
[32m+                }[0m
[32m+            } else if (func === 0) {[0m
[32m+                if (separators.indexOf(letter) !== -1) { split = true;[0m
[32m+                }[0m
[32m+            }[0m
[32m+[0m
[32m+            if (split) {[0m
[32m+                if (current !== '') { array.push(current.trim());[0m
[32m+                }[0m
[32m+                current = '';[0m
[32m+                split = false;[0m
[32m+            } else {[0m
[32m+                current += letter;[0m
[32m+            }[0m
         }
[31m-      } else if (letter === '"' || letter === '\'') {[0m
[31m-        quote = letter;[0m
[31m-      } else if (letter === '(') {[0m
[31m-        func += 1;[0m
[31m-      } else if (letter === ')') {[0m
[31m-        if (func > 0) func -= 1;[0m
[31m-      } else if (func === 0) {[0m
[31m-        if (separators.indexOf(letter) !== -1) split = true;[0m
[31m-      }[0m
 
[31m-      if (split) {[0m
[31m-        if (current !== '') array.push(current.trim());[0m
[31m-        current = '';[0m
[31m-        split = false;[0m
[31m-      } else {[0m
[31m-        current += letter;[0m
[31m-      }[0m
[31m-    }[0m
[32m+        if (last || current !== '') { array.push(current.trim());[0m
[32m+        }[0m
[32m+        return array;[0m
[32m+    },[0m
 
[31m-    if (last || current !== '') array.push(current.trim());[0m
[31m-    return array;[0m
[31m-  },[0m
[32m+    /**[0m
[32m+     * Safely splits space-separated values (such as those for `background`,[0m
[32m+     * `border-radius`, and other shorthand properties).[0m
[32m+     *[0m
[32m+     * @param {string} string Space-separated values.[0m
[32m+     *[0m
[32m+     * @return {string[]} Split values.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * postcss.list.space('1px calc(10% + 1px)') //=> ['1px', 'calc(10% + 1px)'][0m
[32m+     */[0m
[32m+    space: function space(string)[0m
[32m+    {[0m
[32m+        var spaces = [' ', '\n', '\t'];[0m
[32m+        return list.split(string, spaces);[0m
[32m+    },[0m
 
[31m-  /**[0m
[31m-   * Safely splits space-separated values (such as those for `background`,[0m
[31m-   * `border-radius`, and other shorthand properties).[0m
[31m-   *[0m
[31m-   * @param {string} string Space-separated values.[0m
[31m-   *[0m
[31m-   * @return {string[]} Split values.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * postcss.list.space('1px calc(10% + 1px)') //=> ['1px', 'calc(10% + 1px)'][0m
[31m-   */[0m
[31m-  space: function space(string) {[0m
[31m-    var spaces = [' ', '\n', '\t'];[0m
[31m-    return list.split(string, spaces);[0m
[31m-  },[0m
[31m-[0m
[31m-  /**[0m
[31m-   * Safely splits comma-separated values (such as those for `transition-*`[0m
[31m-   * and `background` properties).[0m
[31m-   *[0m
[31m-   * @param {string} string Comma-separated values.[0m
[31m-   *[0m
[31m-   * @return {string[]} Split values.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * postcss.list.comma('black, linear-gradient(white, black)')[0m
[31m-   * //=> ['black', 'linear-gradient(white, black)'][0m
[31m-   */[0m
[31m-  comma: function comma(string) {[0m
[31m-    return list.split(string, [','], true);[0m
[31m-  }[0m
[32m+    /**[0m
[32m+     * Safely splits comma-separated values (such as those for `transition-*`[0m
[32m+     * and `background` properties).[0m
[32m+     *[0m
[32m+     * @param {string} string Comma-separated values.[0m
[32m+     *[0m
[32m+     * @return {string[]} Split values.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * postcss.list.comma('black, linear-gradient(white, black)')[0m
[32m+     * //=> ['black', 'linear-gradient(white, black)'][0m
[32m+     */[0m
[32m+    comma: function comma(string)[0m
[32m+    {[0m
[32m+        return list.split(string, [','], true);[0m
[32m+    }[0m
 };
 var _default = list;
 exports.default = _default;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/vendor.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -12,28 +12,29 @@
  * @namespace vendor
  */
 var vendor = {
[31m-  /**[0m
[31m-   * Returns the vendor prefix extracted from an input string.[0m
[31m-   *[0m
[31m-   * @param {string} prop String with or without vendor prefix.[0m
[31m-   *[0m
[31m-   * @return {string} vendor prefix or empty string[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * postcss.vendor.prefix('-moz-tab-size') //=> '-moz-'[0m
[31m-   * postcss.vendor.prefix('tab-size')      //=> ''[0m
[31m-   */[0m
[31m-  prefix: function prefix(prop) {[0m
[31m-    var match = prop.match(/^(-\w+-)/);[0m
[32m+    /**[0m
[32m+     * Returns the vendor prefix extracted from an input string.[0m
[32m+     *[0m
[32m+     * @param {string} prop String with or without vendor prefix.[0m
[32m+     *[0m
[32m+     * @return {string} vendor prefix or empty string[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * postcss.vendor.prefix('-moz-tab-size') //=> '-moz-'[0m
[32m+     * postcss.vendor.prefix('tab-size')      //=> ''[0m
[32m+     */[0m
[32m+    prefix: function prefix(prop)[0m
[32m+    {[0m
[32m+        var match = prop.match(/^(-\w+-)/);[0m
 
[31m-    if (match) {[0m
[31m-      return match[0];[0m
[31m-    }[0m
[32m+        if (match) {[0m
[32m+            return match[0];[0m
[32m+        }[0m
 
[31m-    return '';[0m
[31m-  },[0m
[32m+        return '';[0m
[32m+    },[0m
 
[31m-  /**[0m
[32m+    /**[0m
      * Returns the input string stripped of its vendor prefix.
      *
      * @param {string} prop String with or without vendor prefix.
@@ -43,9 +44,10 @@
      * @example
      * postcss.vendor.unprefixed('-moz-tab-size') //=> 'tab-size'
      */
[31m-  unprefixed: function unprefixed(prop) {[0m
[31m-    return prop.replace(/^-\w+-/, '');[0m
[31m-  }[0m
[32m+    unprefixed: function unprefixed(prop)[0m
[32m+    {[0m
[32m+        return prop.replace(/^-\w+-/, '');[0m
[32m+    }[0m
 };
 var _default = vendor;
 exports.default = _default;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/result.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -5,11 +5,20 @@
 
 var _warning = _interopRequireDefault(require("./warning"));
 
[31m-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }[0m
[32m+function _interopRequireDefault(obj)[0m
[32m+{[0m
[32m+    return obj && obj.__esModule ? obj : { default: obj }; }[0m
 
[31m-function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }[0m
[32m+function _defineProperties(target, props)[0m
[32m+{[0m
[32m+    for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) { descriptor.writable = true;[0m
[32m+    } Object.defineProperty(target, descriptor.key, descriptor); } }[0m
 
[31m-function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }[0m
[32m+function _createClass(Constructor, protoProps, staticProps)[0m
[32m+{[0m
[32m+    if (protoProps) { _defineProperties(Constructor.prototype, protoProps);[0m
[32m+    } if (staticProps) { _defineProperties(Constructor, staticProps);[0m
[32m+    } return Constructor; }[0m
 
 /**
  * Provides the result of the PostCSS transformations.
@@ -26,179 +35,188 @@
  * const result2 = postcss.parse(css).toResult()
  */
 var Result = /*#__PURE__*/function () {
[31m-  /**[0m
[31m-   * @param {Processor} processor Processor used for this transformation.[0m
[31m-   * @param {Root}      root      Root node after all transformations.[0m
[31m-   * @param {processOptions} opts Options from the {@link Processor#process}[0m
[31m-   *                              or {@link Root#toResult}.[0m
[31m-   */[0m
[31m-  function Result(processor, root, opts) {[0m
     /**
[31m-     * The Processor instance used for this transformation.[0m
[31m-     *[0m
[31m-     * @type {Processor}[0m
[31m-     *[0m
[31m-     * @example[0m
[31m-     * for (const plugin of result.processor.plugins) {[0m
[31m-     *   if (plugin.postcssPlugin === 'postcss-bad') {[0m
[31m-     *     throw 'postcss-good is incompatible with postcss-bad'[0m
[31m-     *   }[0m
[31m-     * })[0m
[32m+     * @param {Processor} processor Processor used for this transformation.[0m
[32m+     * @param {Root}      root      Root node after all transformations.[0m
[32m+     * @param {processOptions} opts Options from the {@link Processor#process}[0m
[32m+     *                              or {@link Root#toResult}.[0m
      */
[31m-    this.processor = processor;[0m
[31m-    /**[0m
[31m-     * Contains messages from plugins (e.g., warnings or custom messages).[0m
[31m-     * Each message should have type and plugin properties.[0m
[31m-     *[0m
[31m-     * @type {Message[]}[0m
[31m-     *[0m
[31m-     * @example[0m
[31m-     * postcss.plugin('postcss-min-browser', () => {[0m
[31m-     *   return (root, result) => {[0m
[31m-     *     const browsers = detectMinBrowsersByCanIUse(root)[0m
[31m-     *     result.messages.push({[0m
[31m-     *       type: 'min-browser',[0m
[31m-     *       plugin: 'postcss-min-browser',[0m
[31m-     *       browsers[0m
[31m-     *     })[0m
[31m-     *   }[0m
[31m-     * })[0m
[31m-     */[0m
[32m+    function Result(processor, root, opts)[0m
[32m+    {[0m
[32m+        /**[0m
[32m+         * The Processor instance used for this transformation.[0m
[32m+         *[0m
[32m+         * @type {Processor}[0m
[32m+         *[0m
[32m+         * @example[0m
[32m+         * for (const plugin of result.processor.plugins) {[0m
[32m+         *   if (plugin.postcssPlugin === 'postcss-bad') {[0m
[32m+         *     throw 'postcss-good is incompatible with postcss-bad'[0m
[32m+         *   }[0m
[32m+         * })[0m
[32m+         */[0m
[32m+        this.processor = processor;[0m
[32m+        /**[0m
[32m+         * Contains messages from plugins (e.g., warnings or custom messages).[0m
[32m+         * Each message should have type and plugin properties.[0m
[32m+         *[0m
[32m+         * @type {Message[]}[0m
[32m+         *[0m
[32m+         * @example[0m
[32m+         * postcss.plugin('postcss-min-browser', () => {[0m
[32m+         *   return (root, result) => {[0m
[32m+         *     const browsers = detectMinBrowsersByCanIUse(root)[0m
[32m+         *     result.messages.push({[0m
[32m+         *       type: 'min-browser',[0m
[32m+         *       plugin: 'postcss-min-browser',[0m
[32m+         *       browsers[0m
[32m+         *     })[0m
[32m+         *   }[0m
[32m+         * })[0m
[32m+         */[0m
 
[31m-    this.messages = [];[0m
[31m-    /**[0m
[31m-     * Root node after all transformations.[0m
[31m-     *[0m
[31m-     * @type {Root}[0m
[31m-     *[0m
[31m-     * @example[0m
[31m-     * root.toResult().root === root[0m
[31m-     */[0m
[32m+        this.messages = [];[0m
[32m+        /**[0m
[32m+         * Root node after all transformations.[0m
[32m+         *[0m
[32m+         * @type {Root}[0m
[32m+         *[0m
[32m+         * @example[0m
[32m+         * root.toResult().root === root[0m
[32m+         */[0m
 
[31m-    this.root = root;[0m
[31m-    /**[0m
[31m-     * Options from the {@link Processor#process} or {@link Root#toResult} call[0m
[31m-     * that produced this Result instance.[0m
[31m-     *[0m
[31m-     * @type {processOptions}[0m
[31m-     *[0m
[31m-     * @example[0m
[31m-     * root.toResult(opts).opts === opts[0m
[31m-     */[0m
[32m+        this.root = root;[0m
[32m+        /**[0m
[32m+         * Options from the {@link Processor#process} or {@link Root#toResult} call[0m
[32m+         * that produced this Result instance.[0m
[32m+         *[0m
[32m+         * @type {processOptions}[0m
[32m+         *[0m
[32m+         * @example[0m
[32m+         * root.toResult(opts).opts === opts[0m
[32m+         */[0m
 
[31m-    this.opts = opts;[0m
[32m+        this.opts = opts;[0m
[32m+        /**[0m
[32m+         * A CSS string representing of {@link Result#root}.[0m
[32m+         *[0m
[32m+         * @type {string}[0m
[32m+         *[0m
[32m+         * @example[0m
[32m+         * postcss.parse('a{}').toResult().css //=> "a{}"[0m
[32m+         */[0m
[32m+[0m
[32m+        this.css = undefined;[0m
[32m+        /**[0m
[32m+         * An instance of `SourceMapGenerator` class from the `source-map` library,[0m
[32m+         * representing changes to the {@link Result#root} instance.[0m
[32m+         *[0m
[32m+         * @type {SourceMapGenerator}[0m
[32m+         *[0m
[32m+         * @example[0m
[32m+         * result.map.toJSON() //=> { version: 3, file: 'a.css', … }[0m
[32m+         *[0m
[32m+         * @example[0m
[32m+         * if (result.map) {[0m
[32m+         *   fs.writeFileSync(result.opts.to + '.map', result.map.toString())[0m
[32m+         * }[0m
[32m+         */[0m
[32m+[0m
[32m+        this.map = undefined;[0m
[32m+    }[0m
     /**
[31m-     * A CSS string representing of {@link Result#root}.[0m
[32m+     * Returns for @{link Result#css} content.[0m
      *
[31m-     * @type {string}[0m
[31m-     *[0m
      * @example
[31m-     * postcss.parse('a{}').toResult().css //=> "a{}"[0m
[32m+     * result + '' === result.css[0m
[32m+     *[0m
[32m+     * @return {string} String representing of {@link Result#root}.[0m
      */
 
[31m-    this.css = undefined;[0m
[32m+[0m
[32m+    var _proto = Result.prototype;[0m
[32m+[0m
[32m+    _proto.toString = function toString()[0m
[32m+    {[0m
[32m+        return this.css;[0m
[32m+    }[0m
     /**
[31m-     * An instance of `SourceMapGenerator` class from the `source-map` library,[0m
[31m-     * representing changes to the {@link Result#root} instance.[0m
[32m+     * Creates an instance of {@link Warning} and adds it[0m
[32m+     * to {@link Result#messages}.[0m
      *
[31m-     * @type {SourceMapGenerator}[0m
[32m+     * @param {string} text        Warning message.[0m
[32m+     * @param {Object} [opts]      Warning options.[0m
[32m+     * @param {Node}   opts.node   CSS node that caused the warning.[0m
[32m+     * @param {string} opts.word   Word in CSS source that caused the warning.[0m
[32m+     * @param {number} opts.index  Index in CSS node string that caused[0m
[32m+     *                             the warning.[0m
[32m+     * @param {string} opts.plugin Name of the plugin that created[0m
[32m+     *                             this warning. {@link Result#warn} fills[0m
[32m+     *                             this property automatically.[0m
      *
[31m-     * @example[0m
[31m-     * result.map.toJSON() //=> { version: 3, file: 'a.css', … }[0m
[31m-     *[0m
[31m-     * @example[0m
[31m-     * if (result.map) {[0m
[31m-     *   fs.writeFileSync(result.opts.to + '.map', result.map.toString())[0m
[31m-     * }[0m
[32m+     * @return {Warning} Created warning.[0m
      */
[32m+    ;[0m
 
[31m-    this.map = undefined;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Returns for @{link Result#css} content.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * result + '' === result.css[0m
[31m-   *[0m
[31m-   * @return {string} String representing of {@link Result#root}.[0m
[31m-   */[0m
[32m+    _proto.warn = function warn(text, opts)[0m
[32m+    {[0m
[32m+        if (opts === void 0) {[0m
[32m+            opts = {};[0m
[32m+        }[0m
 
[32m+        if (!opts.plugin) {[0m
[32m+            if (this.lastPlugin && this.lastPlugin.postcssPlugin) {[0m
[32m+                opts.plugin = this.lastPlugin.postcssPlugin;[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-  var _proto = Result.prototype;[0m
[31m-[0m
[31m-  _proto.toString = function toString() {[0m
[31m-    return this.css;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Creates an instance of {@link Warning} and adds it[0m
[31m-   * to {@link Result#messages}.[0m
[31m-   *[0m
[31m-   * @param {string} text        Warning message.[0m
[31m-   * @param {Object} [opts]      Warning options.[0m
[31m-   * @param {Node}   opts.node   CSS node that caused the warning.[0m
[31m-   * @param {string} opts.word   Word in CSS source that caused the warning.[0m
[31m-   * @param {number} opts.index  Index in CSS node string that caused[0m
[31m-   *                             the warning.[0m
[31m-   * @param {string} opts.plugin Name of the plugin that created[0m
[31m-   *                             this warning. {@link Result#warn} fills[0m
[31m-   *                             this property automatically.[0m
[31m-   *[0m
[31m-   * @return {Warning} Created warning.[0m
[31m-   */[0m
[31m-  ;[0m
[31m-[0m
[31m-  _proto.warn = function warn(text, opts) {[0m
[31m-    if (opts === void 0) {[0m
[31m-      opts = {};[0m
[32m+        var warning = new _warning.default(text, opts);[0m
[32m+        this.messages.push(warning);[0m
[32m+        return warning;[0m
     }
[32m+    /**[0m
[32m+       * Returns warnings from plugins. Filters {@link Warning} instances[0m
[32m+       * from {@link Result#messages}.[0m
[32m+       *[0m
[32m+       * @example[0m
[32m+       * result.warnings().forEach(warn => {[0m
[32m+       *   console.warn(warn.toString())[0m
[32m+       * })[0m
[32m+       *[0m
[32m+       * @return {Warning[]} Warnings from plugins.[0m
[32m+       */[0m
[32m+    ;[0m
 
[31m-    if (!opts.plugin) {[0m
[31m-      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {[0m
[31m-        opts.plugin = this.lastPlugin.postcssPlugin;[0m
[31m-      }[0m
[32m+    _proto.warnings = function warnings()[0m
[32m+    {[0m
[32m+        return this.messages.filter([0m
[32m+            function (i) {[0m
[32m+                return i.type === 'warning';[0m
[32m+            }[0m
[32m+        );[0m
     }
[31m-[0m
[31m-    var warning = new _warning.default(text, opts);[0m
[31m-    this.messages.push(warning);[0m
[31m-    return warning;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-     * Returns warnings from plugins. Filters {@link Warning} instances[0m
[31m-     * from {@link Result#messages}.[0m
[32m+    /**[0m
[32m+     * An alias for the {@link Result#css} property.[0m
[32m+     * Use it with syntaxes that generate non-CSS output.[0m
      *
[31m-     * @example[0m
[31m-     * result.warnings().forEach(warn => {[0m
[31m-     *   console.warn(warn.toString())[0m
[31m-     * })[0m
[32m+     * @type {string}[0m
      *
[31m-     * @return {Warning[]} Warnings from plugins.[0m
[32m+     * @example[0m
[32m+     * result.css === result.content[0m
      */
[31m-  ;[0m
[32m+    ;[0m
 
[31m-  _proto.warnings = function warnings() {[0m
[31m-    return this.messages.filter(function (i) {[0m
[31m-      return i.type === 'warning';[0m
[31m-    });[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * An alias for the {@link Result#css} property.[0m
[31m-   * Use it with syntaxes that generate non-CSS output.[0m
[31m-   *[0m
[31m-   * @type {string}[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * result.css === result.content[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _createClass([0m
[32m+        Result, [{[0m
[32m+            key: "content",[0m
[32m+            get: function get()[0m
[32m+            {[0m
[32m+                return this.css;[0m
[32m+            }[0m
[32m+        }][0m
[32m+    );[0m
 
[31m-  _createClass(Result, [{[0m
[31m-    key: "content",[0m
[31m-    get: function get() {[0m
[31m-      return this.css;[0m
[31m-    }[0m
[31m-  }]);[0m
[31m-[0m
[31m-  return Result;[0m
[32m+    return Result;[0m
 }();
 
 var _default = Result;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/parser.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -15,593 +15,638 @@
 
 var _rule = _interopRequireDefault(require("./rule"));
 
[31m-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }[0m
[32m+function _interopRequireDefault(obj)[0m
[32m+{[0m
[32m+    return obj && obj.__esModule ? obj : { default: obj }; }[0m
 
 var Parser = /*#__PURE__*/function () {
[31m-  function Parser(input) {[0m
[31m-    this.input = input;[0m
[31m-    this.root = new _root.default();[0m
[31m-    this.current = this.root;[0m
[31m-    this.spaces = '';[0m
[31m-    this.semicolon = false;[0m
[31m-    this.createTokenizer();[0m
[31m-    this.root.source = {[0m
[31m-      input: input,[0m
[31m-      start: {[0m
[31m-        line: 1,[0m
[31m-        column: 1[0m
[31m-      }[0m
[32m+    function Parser(input)[0m
[32m+    {[0m
[32m+        this.input = input;[0m
[32m+        this.root = new _root.default();[0m
[32m+        this.current = this.root;[0m
[32m+        this.spaces = '';[0m
[32m+        this.semicolon = false;[0m
[32m+        this.createTokenizer();[0m
[32m+        this.root.source = {[0m
[32m+            input: input,[0m
[32m+            start: {[0m
[32m+                line: 1,[0m
[32m+                column: 1[0m
[32m+            }[0m
[32m+        };[0m
[32m+    }[0m
[32m+[0m
[32m+    var _proto = Parser.prototype;[0m
[32m+[0m
[32m+    _proto.createTokenizer = function createTokenizer()[0m
[32m+    {[0m
[32m+        this.tokenizer = (0, _tokenize.default)(this.input);[0m
     };
[31m-  }[0m
 
[31m-  var _proto = Parser.prototype;[0m
[32m+    _proto.parse = function parse()[0m
[32m+    {[0m
[32m+        var token;[0m
 
[31m-  _proto.createTokenizer = function createTokenizer() {[0m
[31m-    this.tokenizer = (0, _tokenize.default)(this.input);[0m
[31m-  };[0m
[32m+        while (!this.tokenizer.endOfFile()) {[0m
[32m+            token = this.tokenizer.nextToken();[0m
 
[31m-  _proto.parse = function parse() {[0m
[31m-    var token;[0m
[32m+            switch (token[0]) {[0m
[32m+            case 'space':[0m
[32m+                this.spaces += token[1];[0m
[32m+                break;[0m
 
[31m-    while (!this.tokenizer.endOfFile()) {[0m
[31m-      token = this.tokenizer.nextToken();[0m
[32m+            case ';':[0m
[32m+                this.freeSemicolon(token);[0m
[32m+                break;[0m
 
[31m-      switch (token[0]) {[0m
[31m-        case 'space':[0m
[31m-          this.spaces += token[1];[0m
[31m-          break;[0m
[32m+            case '}':[0m
[32m+                this.end(token);[0m
[32m+                break;[0m
 
[31m-        case ';':[0m
[31m-          this.freeSemicolon(token);[0m
[31m-          break;[0m
[32m+            case 'comment':[0m
[32m+                this.comment(token);[0m
[32m+                break;[0m
 
[31m-        case '}':[0m
[31m-          this.end(token);[0m
[31m-          break;[0m
[32m+            case 'at-word':[0m
[32m+                this.atrule(token);[0m
[32m+                break;[0m
 
[31m-        case 'comment':[0m
[31m-          this.comment(token);[0m
[31m-          break;[0m
[32m+            case '{':[0m
[32m+                this.emptyRule(token);[0m
[32m+                break;[0m
 
[31m-        case 'at-word':[0m
[31m-          this.atrule(token);[0m
[31m-          break;[0m
[32m+            default:[0m
[32m+                this.other(token);[0m
[32m+                break;[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-        case '{':[0m
[31m-          this.emptyRule(token);[0m
[31m-          break;[0m
[32m+        this.endFile();[0m
[32m+    };[0m
 
[31m-        default:[0m
[31m-          this.other(token);[0m
[31m-          break;[0m
[31m-      }[0m
[31m-    }[0m
[32m+    _proto.comment = function comment(token)[0m
[32m+    {[0m
[32m+        var node = new _comment.default();[0m
[32m+        this.init(node, token[2], token[3]);[0m
[32m+        node.source.end = {[0m
[32m+            line: token[4],[0m
[32m+            column: token[5][0m
[32m+        };[0m
[32m+        var text = token[1].slice(2, -2);[0m
 
[31m-    this.endFile();[0m
[31m-  };[0m
[32m+        if (/^\s*$/.test(text)) {[0m
[32m+            node.text = '';[0m
[32m+            node.raws.left = text;[0m
[32m+            node.raws.right = '';[0m
[32m+        } else {[0m
[32m+            var match = text.match(/^(\s*)([^]*[^\s])(\s*)$/);[0m
[32m+            node.text = match[2];[0m
[32m+            node.raws.left = match[1];[0m
[32m+            node.raws.right = match[3];[0m
[32m+        }[0m
[32m+    };[0m
 
[31m-  _proto.comment = function comment(token) {[0m
[31m-    var node = new _comment.default();[0m
[31m-    this.init(node, token[2], token[3]);[0m
[31m-    node.source.end = {[0m
[31m-      line: token[4],[0m
[31m-      column: token[5][0m
[32m+    _proto.emptyRule = function emptyRule(token)[0m
[32m+    {[0m
[32m+        var node = new _rule.default();[0m
[32m+        this.init(node, token[2], token[3]);[0m
[32m+        node.selector = '';[0m
[32m+        node.raws.between = '';[0m
[32m+        this.current = node;[0m
     };
[31m-    var text = token[1].slice(2, -2);[0m
 
[31m-    if (/^\s*$/.test(text)) {[0m
[31m-      node.text = '';[0m
[31m-      node.raws.left = text;[0m
[31m-      node.raws.right = '';[0m
[31m-    } else {[0m
[31m-      var match = text.match(/^(\s*)([^]*[^\s])(\s*)$/);[0m
[31m-      node.text = match[2];[0m
[31m-      node.raws.left = match[1];[0m
[31m-      node.raws.right = match[3];[0m
[31m-    }[0m
[31m-  };[0m
[32m+    _proto.other = function other(start)[0m
[32m+    {[0m
[32m+        var end = false;[0m
[32m+        var type = null;[0m
[32m+        var colon = false;[0m
[32m+        var bracket = null;[0m
[32m+        var brackets = [];[0m
[32m+        var tokens = [];[0m
[32m+        var token = start;[0m
 
[31m-  _proto.emptyRule = function emptyRule(token) {[0m
[31m-    var node = new _rule.default();[0m
[31m-    this.init(node, token[2], token[3]);[0m
[31m-    node.selector = '';[0m
[31m-    node.raws.between = '';[0m
[31m-    this.current = node;[0m
[31m-  };[0m
[32m+        while (token) {[0m
[32m+            type = token[0];[0m
[32m+            tokens.push(token);[0m
 
[31m-  _proto.other = function other(start) {[0m
[31m-    var end = false;[0m
[31m-    var type = null;[0m
[31m-    var colon = false;[0m
[31m-    var bracket = null;[0m
[31m-    var brackets = [];[0m
[31m-    var tokens = [];[0m
[31m-    var token = start;[0m
[32m+            if (type === '(' || type === '[') {[0m
[32m+                if (!bracket) { bracket = token;[0m
[32m+                }[0m
[32m+                brackets.push(type === '(' ? ')' : ']');[0m
[32m+            } else if (brackets.length === 0) {[0m
[32m+                if (type === ';') {[0m
[32m+                    if (colon) {[0m
[32m+                        this.decl(tokens);[0m
[32m+                        return;[0m
[32m+                    } else {[0m
[32m+                        break;[0m
[32m+                    }[0m
[32m+                } else if (type === '{') {[0m
[32m+                    this.rule(tokens);[0m
[32m+                    return;[0m
[32m+                } else if (type === '}') {[0m
[32m+                    this.tokenizer.back(tokens.pop());[0m
[32m+                    end = true;[0m
[32m+                    break;[0m
[32m+                } else if (type === ':') {[0m
[32m+                    colon = true;[0m
[32m+                }[0m
[32m+            } else if (type === brackets[brackets.length - 1]) {[0m
[32m+                brackets.pop();[0m
[32m+                if (brackets.length === 0) { bracket = null;[0m
[32m+                }[0m
[32m+            }[0m
 
[31m-    while (token) {[0m
[31m-      type = token[0];[0m
[31m-      tokens.push(token);[0m
[32m+            token = this.tokenizer.nextToken();[0m
[32m+        }[0m
 
[31m-      if (type === '(' || type === '[') {[0m
[31m-        if (!bracket) bracket = token;[0m
[31m-        brackets.push(type === '(' ? ')' : ']');[0m
[31m-      } else if (brackets.length === 0) {[0m
[31m-        if (type === ';') {[0m
[31m-          if (colon) {[0m
[31m-            this.decl(tokens);[0m
[31m-            return;[0m
[31m-          } else {[0m
[31m-            break;[0m
[31m-          }[0m
[31m-        } else if (type === '{') {[0m
[31m-          this.rule(tokens);[0m
[31m-          return;[0m
[31m-        } else if (type === '}') {[0m
[31m-          this.tokenizer.back(tokens.pop());[0m
[31m-          end = true;[0m
[31m-          break;[0m
[31m-        } else if (type === ':') {[0m
[31m-          colon = true;[0m
[32m+        if (this.tokenizer.endOfFile()) { end = true;[0m
         }
[31m-      } else if (type === brackets[brackets.length - 1]) {[0m
[31m-        brackets.pop();[0m
[31m-        if (brackets.length === 0) bracket = null;[0m
[31m-      }[0m
[32m+        if (brackets.length > 0) { this.unclosedBracket(bracket);[0m
[32m+        }[0m
 
[31m-      token = this.tokenizer.nextToken();[0m
[31m-    }[0m
[32m+        if (end && colon) {[0m
[32m+            while (tokens.length) {[0m
[32m+                token = tokens[tokens.length - 1][0];[0m
[32m+                if (token !== 'space' && token !== 'comment') { break;[0m
[32m+                }[0m
[32m+                this.tokenizer.back(tokens.pop());[0m
[32m+            }[0m
 
[31m-    if (this.tokenizer.endOfFile()) end = true;[0m
[31m-    if (brackets.length > 0) this.unclosedBracket(bracket);[0m
[32m+            this.decl(tokens);[0m
[32m+        } else {[0m
[32m+            this.unknownWord(tokens);[0m
[32m+        }[0m
[32m+    };[0m
 
[31m-    if (end && colon) {[0m
[31m-      while (tokens.length) {[0m
[31m-        token = tokens[tokens.length - 1][0];[0m
[31m-        if (token !== 'space' && token !== 'comment') break;[0m
[31m-        this.tokenizer.back(tokens.pop());[0m
[31m-      }[0m
[32m+    _proto.rule = function rule(tokens)[0m
[32m+    {[0m
[32m+        tokens.pop();[0m
[32m+        var node = new _rule.default();[0m
[32m+        this.init(node, tokens[0][2], tokens[0][3]);[0m
[32m+        node.raws.between = this.spacesAndCommentsFromEnd(tokens);[0m
[32m+        this.raw(node, 'selector', tokens);[0m
[32m+        this.current = node;[0m
[32m+    };[0m
 
[31m-      this.decl(tokens);[0m
[31m-    } else {[0m
[31m-      this.unknownWord(tokens);[0m
[31m-    }[0m
[31m-  };[0m
[32m+    _proto.decl = function decl(tokens)[0m
[32m+    {[0m
[32m+        var node = new _declaration.default();[0m
[32m+        this.init(node);[0m
[32m+        var last = tokens[tokens.length - 1];[0m
 
[31m-  _proto.rule = function rule(tokens) {[0m
[31m-    tokens.pop();[0m
[31m-    var node = new _rule.default();[0m
[31m-    this.init(node, tokens[0][2], tokens[0][3]);[0m
[31m-    node.raws.between = this.spacesAndCommentsFromEnd(tokens);[0m
[31m-    this.raw(node, 'selector', tokens);[0m
[31m-    this.current = node;[0m
[31m-  };[0m
[32m+        if (last[0] === ';') {[0m
[32m+            this.semicolon = true;[0m
[32m+            tokens.pop();[0m
[32m+        }[0m
 
[31m-  _proto.decl = function decl(tokens) {[0m
[31m-    var node = new _declaration.default();[0m
[31m-    this.init(node);[0m
[31m-    var last = tokens[tokens.length - 1];[0m
[32m+        if (last[4]) {[0m
[32m+            node.source.end = {[0m
[32m+                line: last[4],[0m
[32m+                column: last[5][0m
[32m+            };[0m
[32m+        } else {[0m
[32m+            node.source.end = {[0m
[32m+                line: last[2],[0m
[32m+                column: last[3][0m
[32m+            };[0m
[32m+        }[0m
 
[31m-    if (last[0] === ';') {[0m
[31m-      this.semicolon = true;[0m
[31m-      tokens.pop();[0m
[31m-    }[0m
[32m+        while (tokens[0][0] !== 'word') {[0m
[32m+            if (tokens.length === 1) { this.unknownWord(tokens);[0m
[32m+            }[0m
[32m+            node.raws.before += tokens.shift()[1];[0m
[32m+        }[0m
 
[31m-    if (last[4]) {[0m
[31m-      node.source.end = {[0m
[31m-        line: last[4],[0m
[31m-        column: last[5][0m
[31m-      };[0m
[31m-    } else {[0m
[31m-      node.source.end = {[0m
[31m-        line: last[2],[0m
[31m-        column: last[3][0m
[31m-      };[0m
[31m-    }[0m
[32m+        node.source.start = {[0m
[32m+            line: tokens[0][2],[0m
[32m+            column: tokens[0][3][0m
[32m+        };[0m
[32m+        node.prop = '';[0m
 
[31m-    while (tokens[0][0] !== 'word') {[0m
[31m-      if (tokens.length === 1) this.unknownWord(tokens);[0m
[31m-      node.raws.before += tokens.shift()[1];[0m
[31m-    }[0m
[32m+        while (tokens.length) {[0m
[32m+            var type = tokens[0][0];[0m
 
[31m-    node.source.start = {[0m
[31m-      line: tokens[0][2],[0m
[31m-      column: tokens[0][3][0m
[31m-    };[0m
[31m-    node.prop = '';[0m
[32m+            if (type === ':' || type === 'space' || type === 'comment') {[0m
[32m+                break;[0m
[32m+            }[0m
 
[31m-    while (tokens.length) {[0m
[31m-      var type = tokens[0][0];[0m
[32m+            node.prop += tokens.shift()[1];[0m
[32m+        }[0m
 
[31m-      if (type === ':' || type === 'space' || type === 'comment') {[0m
[31m-        break;[0m
[31m-      }[0m
[32m+        node.raws.between = '';[0m
[32m+        var token;[0m
 
[31m-      node.prop += tokens.shift()[1];[0m
[31m-    }[0m
[32m+        while (tokens.length) {[0m
[32m+            token = tokens.shift();[0m
 
[31m-    node.raws.between = '';[0m
[31m-    var token;[0m
[32m+            if (token[0] === ':') {[0m
[32m+                node.raws.between += token[1];[0m
[32m+                break;[0m
[32m+            } else {[0m
[32m+                if (token[0] === 'word' && /\w/.test(token[1])) {[0m
[32m+                    this.unknownWord([token]);[0m
[32m+                }[0m
 
[31m-    while (tokens.length) {[0m
[31m-      token = tokens.shift();[0m
[32m+                node.raws.between += token[1];[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-      if (token[0] === ':') {[0m
[31m-        node.raws.between += token[1];[0m
[31m-        break;[0m
[31m-      } else {[0m
[31m-        if (token[0] === 'word' && /\w/.test(token[1])) {[0m
[31m-          this.unknownWord([token]);[0m
[32m+        if (node.prop[0] === '_' || node.prop[0] === '*') {[0m
[32m+            node.raws.before += node.prop[0];[0m
[32m+            node.prop = node.prop.slice(1);[0m
         }
 
[31m-        node.raws.between += token[1];[0m
[31m-      }[0m
[31m-    }[0m
[32m+        node.raws.between += this.spacesAndCommentsFromStart(tokens);[0m
[32m+        this.precheckMissedSemicolon(tokens);[0m
 
[31m-    if (node.prop[0] === '_' || node.prop[0] === '*') {[0m
[31m-      node.raws.before += node.prop[0];[0m
[31m-      node.prop = node.prop.slice(1);[0m
[31m-    }[0m
[32m+        for (var i = tokens.length - 1; i > 0; i--) {[0m
[32m+            token = tokens[i];[0m
 
[31m-    node.raws.between += this.spacesAndCommentsFromStart(tokens);[0m
[31m-    this.precheckMissedSemicolon(tokens);[0m
[32m+            if (token[1].toLowerCase() === '!important') {[0m
[32m+                node.important = true;[0m
[32m+                var string = this.stringFrom(tokens, i);[0m
[32m+                string = this.spacesFromEnd(tokens) + string;[0m
[32m+                if (string !== ' !important') { node.raws.important = string;[0m
[32m+                }[0m
[32m+                break;[0m
[32m+            } else if (token[1].toLowerCase() === 'important') {[0m
[32m+                var cache = tokens.slice(0);[0m
[32m+                var str = '';[0m
 
[31m-    for (var i = tokens.length - 1; i > 0; i--) {[0m
[31m-      token = tokens[i];[0m
[32m+                for (var j = i; j > 0; j--) {[0m
[32m+                    var _type = cache[j][0];[0m
 
[31m-      if (token[1].toLowerCase() === '!important') {[0m
[31m-        node.important = true;[0m
[31m-        var string = this.stringFrom(tokens, i);[0m
[31m-        string = this.spacesFromEnd(tokens) + string;[0m
[31m-        if (string !== ' !important') node.raws.important = string;[0m
[31m-        break;[0m
[31m-      } else if (token[1].toLowerCase() === 'important') {[0m
[31m-        var cache = tokens.slice(0);[0m
[31m-        var str = '';[0m
[32m+                    if (str.trim().indexOf('!') === 0 && _type !== 'space') {[0m
[32m+                        break;[0m
[32m+                    }[0m
 
[31m-        for (var j = i; j > 0; j--) {[0m
[31m-          var _type = cache[j][0];[0m
[32m+                    str = cache.pop()[1] + str;[0m
[32m+                }[0m
 
[31m-          if (str.trim().indexOf('!') === 0 && _type !== 'space') {[0m
[31m-            break;[0m
[31m-          }[0m
[32m+                if (str.trim().indexOf('!') === 0) {[0m
[32m+                    node.important = true;[0m
[32m+                    node.raws.important = str;[0m
[32m+                    tokens = cache;[0m
[32m+                }[0m
[32m+            }[0m
 
[31m-          str = cache.pop()[1] + str;[0m
[32m+            if (token[0] !== 'space' && token[0] !== 'comment') {[0m
[32m+                break;[0m
[32m+            }[0m
         }
 
[31m-        if (str.trim().indexOf('!') === 0) {[0m
[31m-          node.important = true;[0m
[31m-          node.raws.important = str;[0m
[31m-          tokens = cache;[0m
[32m+        this.raw(node, 'value', tokens);[0m
[32m+        if (node.value.indexOf(':') !== -1) { this.checkMissedSemicolon(tokens);[0m
         }
[31m-      }[0m
[32m+    };[0m
 
[31m-      if (token[0] !== 'space' && token[0] !== 'comment') {[0m
[31m-        break;[0m
[31m-      }[0m
[31m-    }[0m
[32m+    _proto.atrule = function atrule(token)[0m
[32m+    {[0m
[32m+        var node = new _atRule.default();[0m
[32m+        node.name = token[1].slice(1);[0m
 
[31m-    this.raw(node, 'value', tokens);[0m
[31m-    if (node.value.indexOf(':') !== -1) this.checkMissedSemicolon(tokens);[0m
[31m-  };[0m
[32m+        if (node.name === '') {[0m
[32m+            this.unnamedAtrule(node, token);[0m
[32m+        }[0m
 
[31m-  _proto.atrule = function atrule(token) {[0m
[31m-    var node = new _atRule.default();[0m
[31m-    node.name = token[1].slice(1);[0m
[32m+        this.init(node, token[2], token[3]);[0m
[32m+        var prev;[0m
[32m+        var shift;[0m
[32m+        var last = false;[0m
[32m+        var open = false;[0m
[32m+        var params = [];[0m
 
[31m-    if (node.name === '') {[0m
[31m-      this.unnamedAtrule(node, token);[0m
[31m-    }[0m
[32m+        while (!this.tokenizer.endOfFile()) {[0m
[32m+            token = this.tokenizer.nextToken();[0m
 
[31m-    this.init(node, token[2], token[3]);[0m
[31m-    var prev;[0m
[31m-    var shift;[0m
[31m-    var last = false;[0m
[31m-    var open = false;[0m
[31m-    var params = [];[0m
[32m+            if (token[0] === ';') {[0m
[32m+                node.source.end = {[0m
[32m+                    line: token[2],[0m
[32m+                    column: token[3][0m
[32m+                };[0m
[32m+                this.semicolon = true;[0m
[32m+                break;[0m
[32m+            } else if (token[0] === '{') {[0m
[32m+                open = true;[0m
[32m+                break;[0m
[32m+            } else if (token[0] === '}') {[0m
[32m+                if (params.length > 0) {[0m
[32m+                    shift = params.length - 1;[0m
[32m+                    prev = params[shift];[0m
 
[31m-    while (!this.tokenizer.endOfFile()) {[0m
[31m-      token = this.tokenizer.nextToken();[0m
[32m+                    while (prev && prev[0] === 'space') {[0m
[32m+                        prev = params[--shift];[0m
[32m+                    }[0m
 
[31m-      if (token[0] === ';') {[0m
[31m-        node.source.end = {[0m
[31m-          line: token[2],[0m
[31m-          column: token[3][0m
[31m-        };[0m
[31m-        this.semicolon = true;[0m
[31m-        break;[0m
[31m-      } else if (token[0] === '{') {[0m
[31m-        open = true;[0m
[31m-        break;[0m
[31m-      } else if (token[0] === '}') {[0m
[31m-        if (params.length > 0) {[0m
[31m-          shift = params.length - 1;[0m
[31m-          prev = params[shift];[0m
[32m+                    if (prev) {[0m
[32m+                        node.source.end = {[0m
[32m+                            line: prev[4],[0m
[32m+                            column: prev[5][0m
[32m+                        };[0m
[32m+                    }[0m
[32m+                }[0m
 
[31m-          while (prev && prev[0] === 'space') {[0m
[31m-            prev = params[--shift];[0m
[31m-          }[0m
[32m+                this.end(token);[0m
[32m+                break;[0m
[32m+            } else {[0m
[32m+                params.push(token);[0m
[32m+            }[0m
 
[31m-          if (prev) {[0m
[31m-            node.source.end = {[0m
[31m-              line: prev[4],[0m
[31m-              column: prev[5][0m
[31m-            };[0m
[31m-          }[0m
[32m+            if (this.tokenizer.endOfFile()) {[0m
[32m+                last = true;[0m
[32m+                break;[0m
[32m+            }[0m
         }
 
[31m-        this.end(token);[0m
[31m-        break;[0m
[31m-      } else {[0m
[31m-        params.push(token);[0m
[31m-      }[0m
[32m+        node.raws.between = this.spacesAndCommentsFromEnd(params);[0m
 
[31m-      if (this.tokenizer.endOfFile()) {[0m
[31m-        last = true;[0m
[31m-        break;[0m
[31m-      }[0m
[31m-    }[0m
[32m+        if (params.length) {[0m
[32m+            node.raws.afterName = this.spacesAndCommentsFromStart(params);[0m
[32m+            this.raw(node, 'params', params);[0m
 
[31m-    node.raws.between = this.spacesAndCommentsFromEnd(params);[0m
[32m+            if (last) {[0m
[32m+                token = params[params.length - 1];[0m
[32m+                node.source.end = {[0m
[32m+                    line: token[4],[0m
[32m+                    column: token[5][0m
[32m+                };[0m
[32m+                this.spaces = node.raws.between;[0m
[32m+                node.raws.between = '';[0m
[32m+            }[0m
[32m+        } else {[0m
[32m+            node.raws.afterName = '';[0m
[32m+            node.params = '';[0m
[32m+        }[0m
 
[31m-    if (params.length) {[0m
[31m-      node.raws.afterName = this.spacesAndCommentsFromStart(params);[0m
[31m-      this.raw(node, 'params', params);[0m
[32m+        if (open) {[0m
[32m+            node.nodes = [];[0m
[32m+            this.current = node;[0m
[32m+        }[0m
[32m+    };[0m
 
[31m-      if (last) {[0m
[31m-        token = params[params.length - 1];[0m
[31m-        node.source.end = {[0m
[31m-          line: token[4],[0m
[31m-          column: token[5][0m
[31m-        };[0m
[31m-        this.spaces = node.raws.between;[0m
[31m-        node.raws.between = '';[0m
[31m-      }[0m
[31m-    } else {[0m
[31m-      node.raws.afterName = '';[0m
[31m-      node.params = '';[0m
[31m-    }[0m
[32m+    _proto.end = function end(token)[0m
[32m+    {[0m
[32m+        if (this.current.nodes && this.current.nodes.length) {[0m
[32m+            this.current.raws.semicolon = this.semicolon;[0m
[32m+        }[0m
 
[31m-    if (open) {[0m
[31m-      node.nodes = [];[0m
[31m-      this.current = node;[0m
[31m-    }[0m
[31m-  };[0m
[32m+        this.semicolon = false;[0m
[32m+        this.current.raws.after = (this.current.raws.after || '') + this.spaces;[0m
[32m+        this.spaces = '';[0m
 
[31m-  _proto.end = function end(token) {[0m
[31m-    if (this.current.nodes && this.current.nodes.length) {[0m
[31m-      this.current.raws.semicolon = this.semicolon;[0m
[31m-    }[0m
[32m+        if (this.current.parent) {[0m
[32m+            this.current.source.end = {[0m
[32m+                line: token[2],[0m
[32m+                column: token[3][0m
[32m+            };[0m
[32m+            this.current = this.current.parent;[0m
[32m+        } else {[0m
[32m+            this.unexpectedClose(token);[0m
[32m+        }[0m
[32m+    };[0m
 
[31m-    this.semicolon = false;[0m
[31m-    this.current.raws.after = (this.current.raws.after || '') + this.spaces;[0m
[31m-    this.spaces = '';[0m
[32m+    _proto.endFile = function endFile()[0m
[32m+    {[0m
[32m+        if (this.current.parent) { this.unclosedBlock();[0m
[32m+        }[0m
 
[31m-    if (this.current.parent) {[0m
[31m-      this.current.source.end = {[0m
[31m-        line: token[2],[0m
[31m-        column: token[3][0m
[31m-      };[0m
[31m-      this.current = this.current.parent;[0m
[31m-    } else {[0m
[31m-      this.unexpectedClose(token);[0m
[31m-    }[0m
[31m-  };[0m
[32m+        if (this.current.nodes && this.current.nodes.length) {[0m
[32m+            this.current.raws.semicolon = this.semicolon;[0m
[32m+        }[0m
 
[31m-  _proto.endFile = function endFile() {[0m
[31m-    if (this.current.parent) this.unclosedBlock();[0m
[32m+        this.current.raws.after = (this.current.raws.after || '') + this.spaces;[0m
[32m+    };[0m
 
[31m-    if (this.current.nodes && this.current.nodes.length) {[0m
[31m-      this.current.raws.semicolon = this.semicolon;[0m
[31m-    }[0m
[32m+    _proto.freeSemicolon = function freeSemicolon(token)[0m
[32m+    {[0m
[32m+        this.spaces += token[1];[0m
 
[31m-    this.current.raws.after = (this.current.raws.after || '') + this.spaces;[0m
[31m-  };[0m
[32m+        if (this.current.nodes) {[0m
[32m+            var prev = this.current.nodes[this.current.nodes.length - 1];[0m
 
[31m-  _proto.freeSemicolon = function freeSemicolon(token) {[0m
[31m-    this.spaces += token[1];[0m
[32m+            if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {[0m
[32m+                prev.raws.ownSemicolon = this.spaces;[0m
[32m+                this.spaces = '';[0m
[32m+            }[0m
[32m+        }[0m
[32m+    } // Helpers[0m
[32m+    ;[0m
 
[31m-    if (this.current.nodes) {[0m
[31m-      var prev = this.current.nodes[this.current.nodes.length - 1];[0m
[31m-[0m
[31m-      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {[0m
[31m-        prev.raws.ownSemicolon = this.spaces;[0m
[32m+    _proto.init = function init(node, line, column)[0m
[32m+    {[0m
[32m+        this.current.push(node);[0m
[32m+        node.source = {[0m
[32m+            start: {[0m
[32m+                line: line,[0m
[32m+                column: column[0m
[32m+            },[0m
[32m+            input: this.input[0m
[32m+        };[0m
[32m+        node.raws.before = this.spaces;[0m
         this.spaces = '';
[31m-      }[0m
[31m-    }[0m
[31m-  } // Helpers[0m
[31m-  ;[0m
[31m-[0m
[31m-  _proto.init = function init(node, line, column) {[0m
[31m-    this.current.push(node);[0m
[31m-    node.source = {[0m
[31m-      start: {[0m
[31m-        line: line,[0m
[31m-        column: column[0m
[31m-      },[0m
[31m-      input: this.input[0m
[32m+        if (node.type !== 'comment') { this.semicolon = false;[0m
[32m+        }[0m
     };
[31m-    node.raws.before = this.spaces;[0m
[31m-    this.spaces = '';[0m
[31m-    if (node.type !== 'comment') this.semicolon = false;[0m
[31m-  };[0m
 
[31m-  _proto.raw = function raw(node, prop, tokens) {[0m
[31m-    var token, type;[0m
[31m-    var length = tokens.length;[0m
[31m-    var value = '';[0m
[31m-    var clean = true;[0m
[31m-    var next, prev;[0m
[31m-    var pattern = /^([.|#])?([\w])+/i;[0m
[32m+    _proto.raw = function raw(node, prop, tokens)[0m
[32m+    {[0m
[32m+        var token, type;[0m
[32m+        var length = tokens.length;[0m
[32m+        var value = '';[0m
[32m+        var clean = true;[0m
[32m+        var next, prev;[0m
[32m+        var pattern = /^([.|#])?([\w])+/i;[0m
 
[31m-    for (var i = 0; i < length; i += 1) {[0m
[31m-      token = tokens[i];[0m
[31m-      type = token[0];[0m
[32m+        for (var i = 0; i < length; i += 1) {[0m
[32m+            token = tokens[i];[0m
[32m+            type = token[0];[0m
 
[31m-      if (type === 'comment' && node.type === 'rule') {[0m
[31m-        prev = tokens[i - 1];[0m
[31m-        next = tokens[i + 1];[0m
[32m+            if (type === 'comment' && node.type === 'rule') {[0m
[32m+                prev = tokens[i - 1];[0m
[32m+                next = tokens[i + 1];[0m
 
[31m-        if (prev[0] !== 'space' && next[0] !== 'space' && pattern.test(prev[1]) && pattern.test(next[1])) {[0m
[31m-          value += token[1];[0m
[31m-        } else {[0m
[31m-          clean = false;[0m
[31m-        }[0m
[32m+                if (prev[0] !== 'space' && next[0] !== 'space' && pattern.test(prev[1]) && pattern.test(next[1])) {[0m
[32m+                    value += token[1];[0m
[32m+                } else {[0m
[32m+                    clean = false;[0m
[32m+                }[0m
 
[31m-        continue;[0m
[31m-      }[0m
[32m+                continue;[0m
[32m+            }[0m
 
[31m-      if (type === 'comment' || type === 'space' && i === length - 1) {[0m
[31m-        clean = false;[0m
[31m-      } else {[0m
[31m-        value += token[1];[0m
[31m-      }[0m
[31m-    }[0m
[32m+            if (type === 'comment' || type === 'space' && i === length - 1) {[0m
[32m+                clean = false;[0m
[32m+            } else {[0m
[32m+                value += token[1];[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-    if (!clean) {[0m
[31m-      var raw = tokens.reduce(function (all, i) {[0m
[31m-        return all + i[1];[0m
[31m-      }, '');[0m
[31m-      node.raws[prop] = {[0m
[31m-        value: value,[0m
[31m-        raw: raw[0m
[31m-      };[0m
[31m-    }[0m
[32m+        if (!clean) {[0m
[32m+            var raw = tokens.reduce([0m
[32m+                function (all, i) {[0m
[32m+                    return all + i[1];[0m
[32m+                }, ''[0m
[32m+            );[0m
[32m+            node.raws[prop] = {[0m
[32m+                value: value,[0m
[32m+                raw: raw[0m
[32m+            };[0m
[32m+        }[0m
 
[31m-    node[prop] = value;[0m
[31m-  };[0m
[32m+        node[prop] = value;[0m
[32m+    };[0m
 
[31m-  _proto.spacesAndCommentsFromEnd = function spacesAndCommentsFromEnd(tokens) {[0m
[31m-    var lastTokenType;[0m
[31m-    var spaces = '';[0m
[32m+    _proto.spacesAndCommentsFromEnd = function spacesAndCommentsFromEnd(tokens)[0m
[32m+    {[0m
[32m+        var lastTokenType;[0m
[32m+        var spaces = '';[0m
 
[31m-    while (tokens.length) {[0m
[31m-      lastTokenType = tokens[tokens.length - 1][0];[0m
[31m-      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break;[0m
[31m-      spaces = tokens.pop()[1] + spaces;[0m
[31m-    }[0m
[32m+        while (tokens.length) {[0m
[32m+            lastTokenType = tokens[tokens.length - 1][0];[0m
[32m+            if (lastTokenType !== 'space' && lastTokenType !== 'comment') { break;[0m
[32m+            }[0m
[32m+            spaces = tokens.pop()[1] + spaces;[0m
[32m+        }[0m
 
[31m-    return spaces;[0m
[31m-  };[0m
[32m+        return spaces;[0m
[32m+    };[0m
 
[31m-  _proto.spacesAndCommentsFromStart = function spacesAndCommentsFromStart(tokens) {[0m
[31m-    var next;[0m
[31m-    var spaces = '';[0m
[32m+    _proto.spacesAndCommentsFromStart = function spacesAndCommentsFromStart(tokens)[0m
[32m+    {[0m
[32m+        var next;[0m
[32m+        var spaces = '';[0m
 
[31m-    while (tokens.length) {[0m
[31m-      next = tokens[0][0];[0m
[31m-      if (next !== 'space' && next !== 'comment') break;[0m
[31m-      spaces += tokens.shift()[1];[0m
[31m-    }[0m
[32m+        while (tokens.length) {[0m
[32m+            next = tokens[0][0];[0m
[32m+            if (next !== 'space' && next !== 'comment') { break;[0m
[32m+            }[0m
[32m+            spaces += tokens.shift()[1];[0m
[32m+        }[0m
 
[31m-    return spaces;[0m
[31m-  };[0m
[32m+        return spaces;[0m
[32m+    };[0m
 
[31m-  _proto.spacesFromEnd = function spacesFromEnd(tokens) {[0m
[31m-    var lastTokenType;[0m
[31m-    var spaces = '';[0m
[32m+    _proto.spacesFromEnd = function spacesFromEnd(tokens)[0m
[32m+    {[0m
[32m+        var lastTokenType;[0m
[32m+        var spaces = '';[0m
 
[31m-    while (tokens.length) {[0m
[31m-      lastTokenType = tokens[tokens.length - 1][0];[0m
[31m-      if (lastTokenType !== 'space') break;[0m
[31m-      spaces = tokens.pop()[1] + spaces;[0m
[31m-    }[0m
[32m+        while (tokens.length) {[0m
[32m+            lastTokenType = tokens[tokens.length - 1][0];[0m
[32m+            if (lastTokenType !== 'space') { break;[0m
[32m+            }[0m
[32m+            spaces = tokens.pop()[1] + spaces;[0m
[32m+        }[0m
 
[31m-    return spaces;[0m
[31m-  };[0m
[32m+        return spaces;[0m
[32m+    };[0m
 
[31m-  _proto.stringFrom = function stringFrom(tokens, from) {[0m
[31m-    var result = '';[0m
[32m+    _proto.stringFrom = function stringFrom(tokens, from)[0m
[32m+    {[0m
[32m+        var result = '';[0m
 
[31m-    for (var i = from; i < tokens.length; i++) {[0m
[31m-      result += tokens[i][1];[0m
[31m-    }[0m
[32m+        for (var i = from; i < tokens.length; i++) {[0m
[32m+            result += tokens[i][1];[0m
[32m+        }[0m
 
[31m-    tokens.splice(from, tokens.length - from);[0m
[31m-    return result;[0m
[31m-  };[0m
[32m+        tokens.splice(from, tokens.length - from);[0m
[32m+        return result;[0m
[32m+    };[0m
 
[31m-  _proto.colon = function colon(tokens) {[0m
[31m-    var brackets = 0;[0m
[31m-    var token, type, prev;[0m
[32m+    _proto.colon = function colon(tokens)[0m
[32m+    {[0m
[32m+        var brackets = 0;[0m
[32m+        var token, type, prev;[0m
 
[31m-    for (var i = 0; i < tokens.length; i++) {[0m
[31m-      token = tokens[i];[0m
[31m-      type = token[0];[0m
[32m+        for (var i = 0; i < tokens.length; i++) {[0m
[32m+            token = tokens[i];[0m
[32m+            type = token[0];[0m
 
[31m-      if (type === '(') {[0m
[31m-        brackets += 1;[0m
[31m-      }[0m
[32m+            if (type === '(') {[0m
[32m+                brackets += 1;[0m
[32m+            }[0m
 
[31m-      if (type === ')') {[0m
[31m-        brackets -= 1;[0m
[31m-      }[0m
[32m+            if (type === ')') {[0m
[32m+                brackets -= 1;[0m
[32m+            }[0m
 
[31m-      if (brackets === 0 && type === ':') {[0m
[31m-        if (!prev) {[0m
[31m-          this.doubleColon(token);[0m
[31m-        } else if (prev[0] === 'word' && prev[1] === 'progid') {[0m
[31m-          continue;[0m
[31m-        } else {[0m
[31m-          return i;[0m
[32m+            if (brackets === 0 && type === ':') {[0m
[32m+                if (!prev) {[0m
[32m+                    this.doubleColon(token);[0m
[32m+                } else if (prev[0] === 'word' && prev[1] === 'progid') {[0m
[32m+                    continue;[0m
[32m+                } else {[0m
[32m+                    return i;[0m
[32m+                }[0m
[32m+            }[0m
[32m+[0m
[32m+            prev = token;[0m
         }
[31m-      }[0m
 
[31m-      prev = token;[0m
[31m-    }[0m
[32m+        return false;[0m
[32m+    } // Errors[0m
[32m+    ;[0m
 
[31m-    return false;[0m
[31m-  } // Errors[0m
[31m-  ;[0m
[32m+    _proto.unclosedBracket = function unclosedBracket(bracket)[0m
[32m+    {[0m
[32m+        throw this.input.error('Unclosed bracket', bracket[2], bracket[3]);[0m
[32m+    };[0m
 
[31m-  _proto.unclosedBracket = function unclosedBracket(bracket) {[0m
[31m-    throw this.input.error('Unclosed bracket', bracket[2], bracket[3]);[0m
[31m-  };[0m
[32m+    _proto.unknownWord = function unknownWord(tokens)[0m
[32m+    {[0m
[32m+        throw this.input.error('Unknown word', tokens[0][2], tokens[0][3]);[0m
[32m+    };[0m
 
[31m-  _proto.unknownWord = function unknownWord(tokens) {[0m
[31m-    throw this.input.error('Unknown word', tokens[0][2], tokens[0][3]);[0m
[31m-  };[0m
[32m+    _proto.unexpectedClose = function unexpectedClose(token)[0m
[32m+    {[0m
[32m+        throw this.input.error('Unexpected }', token[2], token[3]);[0m
[32m+    };[0m
 
[31m-  _proto.unexpectedClose = function unexpectedClose(token) {[0m
[31m-    throw this.input.error('Unexpected }', token[2], token[3]);[0m
[31m-  };[0m
[32m+    _proto.unclosedBlock = function unclosedBlock()[0m
[32m+    {[0m
[32m+        var pos = this.current.source.start;[0m
[32m+        throw this.input.error('Unclosed block', pos.line, pos.column);[0m
[32m+    };[0m
 
[31m-  _proto.unclosedBlock = function unclosedBlock() {[0m
[31m-    var pos = this.current.source.start;[0m
[31m-    throw this.input.error('Unclosed block', pos.line, pos.column);[0m
[31m-  };[0m
[32m+    _proto.doubleColon = function doubleColon(token)[0m
[32m+    {[0m
[32m+        throw this.input.error('Double colon', token[2], token[3]);[0m
[32m+    };[0m
 
[31m-  _proto.doubleColon = function doubleColon(token) {[0m
[31m-    throw this.input.error('Double colon', token[2], token[3]);[0m
[31m-  };[0m
[32m+    _proto.unnamedAtrule = function unnamedAtrule(node, token)[0m
[32m+    {[0m
[32m+        throw this.input.error('At-rule without name', token[2], token[3]);[0m
[32m+    };[0m
 
[31m-  _proto.unnamedAtrule = function unnamedAtrule(node, token) {[0m
[31m-    throw this.input.error('At-rule without name', token[2], token[3]);[0m
[31m-  };[0m
[32m+    _proto.precheckMissedSemicolon = function precheckMissedSemicolon()[0m
[32m+    {[0m
[32m+        // Hook for Safe Parser[0m
[32m+    };[0m
 
[31m-  _proto.precheckMissedSemicolon = function precheckMissedSemicolon()[0m
[31m-  /* tokens */[0m
[31m-  {// Hook for Safe Parser[0m
[31m-  };[0m
[32m+    _proto.checkMissedSemicolon = function checkMissedSemicolon(tokens)[0m
[32m+    {[0m
[32m+        var colon = this.colon(tokens);[0m
[32m+        if (colon === false) { return;[0m
[32m+        }[0m
[32m+        var founded = 0;[0m
[32m+        var token;[0m
 
[31m-  _proto.checkMissedSemicolon = function checkMissedSemicolon(tokens) {[0m
[31m-    var colon = this.colon(tokens);[0m
[31m-    if (colon === false) return;[0m
[31m-    var founded = 0;[0m
[31m-    var token;[0m
[32m+        for (var j = colon - 1; j >= 0; j--) {[0m
[32m+            token = tokens[j];[0m
 
[31m-    for (var j = colon - 1; j >= 0; j--) {[0m
[31m-      token = tokens[j];[0m
[32m+            if (token[0] !== 'space') {[0m
[32m+                founded += 1;[0m
[32m+                if (founded === 2) { break;[0m
[32m+                }[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-      if (token[0] !== 'space') {[0m
[31m-        founded += 1;[0m
[31m-        if (founded === 2) break;[0m
[31m-      }[0m
[31m-    }[0m
[32m+        throw this.input.error('Missed semicolon', token[2], token[3]);[0m
[32m+    };[0m
 
[31m-    throw this.input.error('Missed semicolon', token[2], token[3]);[0m
[31m-  };[0m
[31m-[0m
[31m-  return Parser;[0m
[32m+    return Parser;[0m
 }();
 
 exports.default = Parser;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/declaration.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -5,9 +5,13 @@
 
 var _node = _interopRequireDefault(require("./node"));
 
[31m-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }[0m
[32m+function _interopRequireDefault(obj)[0m
[32m+{[0m
[32m+    return obj && obj.__esModule ? obj : { default: obj }; }[0m
 
[31m-function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }[0m
[32m+function _inheritsLoose(subClass, superClass)[0m
[32m+{[0m
[32m+    subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }[0m
 
 /**
  * Represents a CSS declaration.
@@ -21,73 +25,74 @@
  * decl.toString() //=> ' color: black'
  */
 var Declaration = /*#__PURE__*/function (_Node) {
[31m-  _inheritsLoose(Declaration, _Node);[0m
[32m+    _inheritsLoose(Declaration, _Node);[0m
 
[31m-  function Declaration(defaults) {[0m
[31m-    var _this;[0m
[32m+    function Declaration(defaults)[0m
[32m+    {[0m
[32m+        var _this;[0m
 
[31m-    _this = _Node.call(this, defaults) || this;[0m
[31m-    _this.type = 'decl';[0m
[31m-    return _this;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * @memberof Declaration#[0m
[31m-   * @member {string} prop The declaration’s property name.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const root = postcss.parse('a { color: black }')[0m
[31m-   * const decl = root.first.first[0m
[31m-   * decl.prop //=> 'color'[0m
[31m-   */[0m
[32m+        _this = _Node.call(this, defaults) || this;[0m
[32m+        _this.type = 'decl';[0m
[32m+        return _this;[0m
[32m+    }[0m
[32m+    /**[0m
[32m+     * @memberof Declaration#[0m
[32m+     * @member   {string} prop The declaration’s property name.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const root = postcss.parse('a { color: black }')[0m
[32m+     * const decl = root.first.first[0m
[32m+     * decl.prop //=> 'color'[0m
[32m+     */[0m
 
[31m-  /**[0m
[31m-   * @memberof Declaration#[0m
[31m-   * @member {string} value The declaration’s value.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const root = postcss.parse('a { color: black }')[0m
[31m-   * const decl = root.first.first[0m
[31m-   * decl.value //=> 'black'[0m
[31m-   */[0m
[32m+    /**[0m
[32m+     * @memberof Declaration#[0m
[32m+     * @member   {string} value The declaration’s value.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const root = postcss.parse('a { color: black }')[0m
[32m+     * const decl = root.first.first[0m
[32m+     * decl.value //=> 'black'[0m
[32m+     */[0m
 
[31m-  /**[0m
[31m-   * @memberof Declaration#[0m
[31m-   * @member {boolean} important `true` if the declaration[0m
[31m-   *                             has an !important annotation.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const root = postcss.parse('a { color: black !important; color: red }')[0m
[31m-   * root.first.first.important //=> true[0m
[31m-   * root.first.last.important  //=> undefined[0m
[31m-   */[0m
[32m+    /**[0m
[32m+     * @memberof Declaration#[0m
[32m+     * @member   {boolean} important `true` if the declaration[0m
[32m+     *                             has an !important annotation.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const root = postcss.parse('a { color: black !important; color: red }')[0m
[32m+     * root.first.first.important //=> true[0m
[32m+     * root.first.last.important  //=> undefined[0m
[32m+     */[0m
 
[31m-  /**[0m
[31m-   * @memberof Declaration#[0m
[31m-   * @member {object} raws Information to generate byte-to-byte equal[0m
[31m-   *                       node string as it was in the origin input.[0m
[31m-   *[0m
[31m-   * Every parser saves its own properties,[0m
[31m-   * but the default CSS parser uses:[0m
[31m-   *[0m
[31m-   * * `before`: the space symbols before the node. It also stores `*`[0m
[31m-   *   and `_` symbols before the declaration (IE hack).[0m
[31m-   * * `between`: the symbols between the property and value[0m
[31m-   *   for declarations.[0m
[31m-   * * `important`: the content of the important statement,[0m
[31m-   *   if it is not just `!important`.[0m
[31m-   *[0m
[31m-   * PostCSS cleans declaration from comments and extra spaces,[0m
[31m-   * but it stores origin content in raws properties.[0m
[31m-   * As such, if you don’t change a declaration’s value,[0m
[31m-   * PostCSS will use the raw value with comments.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const root = postcss.parse('a {\n  color:black\n}')[0m
[31m-   * root.first.first.raws //=> { before: '\n  ', between: ':' }[0m
[31m-   */[0m
[32m+    /**[0m
[32m+     * @memberof Declaration#[0m
[32m+     * @member   {object} raws Information to generate byte-to-byte equal[0m
[32m+     *                       node string as it was in the origin input.[0m
[32m+     *[0m
[32m+     * Every parser saves its own properties,[0m
[32m+     * but the default CSS parser uses:[0m
[32m+     *[0m
[32m+     * * `before`: the space symbols before the node. It also stores `*`[0m
[32m+     *   and `_` symbols before the declaration (IE hack).[0m
[32m+     * * `between`: the symbols between the property and value[0m
[32m+     *   for declarations.[0m
[32m+     * * `important`: the content of the important statement,[0m
[32m+     *   if it is not just `!important`.[0m
[32m+     *[0m
[32m+     * PostCSS cleans declaration from comments and extra spaces,[0m
[32m+     * but it stores origin content in raws properties.[0m
[32m+     * As such, if you don’t change a declaration’s value,[0m
[32m+     * PostCSS will use the raw value with comments.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const root = postcss.parse('a {\n  color:black\n}')[0m
[32m+     * root.first.first.raws //=> { before: '\n  ', between: ':' }[0m
[32m+     */[0m
 
 
[31m-  return Declaration;[0m
[32m+    return Declaration;[0m
 }(_node.default);
 
 var _default = Declaration;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/rule.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -7,13 +7,24 @@
 
 var _list = _interopRequireDefault(require("./list"));
 
[31m-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }[0m
[32m+function _interopRequireDefault(obj)[0m
[32m+{[0m
[32m+    return obj && obj.__esModule ? obj : { default: obj }; }[0m
 
[31m-function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }[0m
[32m+function _defineProperties(target, props)[0m
[32m+{[0m
[32m+    for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) { descriptor.writable = true;[0m
[32m+    } Object.defineProperty(target, descriptor.key, descriptor); } }[0m
 
[31m-function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }[0m
[32m+function _createClass(Constructor, protoProps, staticProps)[0m
[32m+{[0m
[32m+    if (protoProps) { _defineProperties(Constructor.prototype, protoProps);[0m
[32m+    } if (staticProps) { _defineProperties(Constructor, staticProps);[0m
[32m+    } return Constructor; }[0m
 
[31m-function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }[0m
[32m+function _inheritsLoose(subClass, superClass)[0m
[32m+{[0m
[32m+    subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }[0m
 
 /**
  * Represents a CSS rule: a selector followed by a declaration block.
@@ -27,87 +38,93 @@
  * rule.toString() //=> 'a{}'
  */
 var Rule = /*#__PURE__*/function (_Container) {
[31m-  _inheritsLoose(Rule, _Container);[0m
[32m+    _inheritsLoose(Rule, _Container);[0m
 
[31m-  function Rule(defaults) {[0m
[31m-    var _this;[0m
[32m+    function Rule(defaults)[0m
[32m+    {[0m
[32m+        var _this;[0m
 
[31m-    _this = _Container.call(this, defaults) || this;[0m
[31m-    _this.type = 'rule';[0m
[31m-    if (!_this.nodes) _this.nodes = [];[0m
[31m-    return _this;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * An array containing the rule’s individual selectors.[0m
[31m-   * Groups of selectors are split at commas.[0m
[31m-   *[0m
[31m-   * @type {string[]}[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const root = postcss.parse('a, b { }')[0m
[31m-   * const rule = root.first[0m
[31m-   *[0m
[31m-   * rule.selector  //=> 'a, b'[0m
[31m-   * rule.selectors //=> ['a', 'b'][0m
[31m-   *[0m
[31m-   * rule.selectors = ['a', 'strong'][0m
[31m-   * rule.selector //=> 'a, strong'[0m
[31m-   */[0m
[31m-[0m
[31m-[0m
[31m-  _createClass(Rule, [{[0m
[31m-    key: "selectors",[0m
[31m-    get: function get() {[0m
[31m-      return _list.default.comma(this.selector);[0m
[31m-    },[0m
[31m-    set: function set(values) {[0m
[31m-      var match = this.selector ? this.selector.match(/,\s*/) : null;[0m
[31m-      var sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen');[0m
[31m-      this.selector = values.join(sep);[0m
[32m+        _this = _Container.call(this, defaults) || this;[0m
[32m+        _this.type = 'rule';[0m
[32m+        if (!_this.nodes) { _this.nodes = [];[0m
[32m+        }[0m
[32m+        return _this;[0m
     }
     /**
[31m-     * @memberof Rule#[0m
[31m-     * @member {string} selector The rule’s full selector represented[0m
[31m-     *                           as a string.[0m
[32m+     * An array containing the rule’s individual selectors.[0m
[32m+     * Groups of selectors are split at commas.[0m
      *
[32m+     * @type {string[]}[0m
[32m+     *[0m
      * @example
      * const root = postcss.parse('a, b { }')
      * const rule = root.first
[31m-     * rule.selector //=> 'a, b'[0m
[31m-     */[0m
[31m-[0m
[31m-    /**[0m
[31m-     * @memberof Rule#[0m
[31m-     * @member {object} raws Information to generate byte-to-byte equal[0m
[31m-     *                       node string as it was in the origin input.[0m
      *
[31m-     * Every parser saves its own properties,[0m
[31m-     * but the default CSS parser uses:[0m
[32m+     * rule.selector  //=> 'a, b'[0m
[32m+     * rule.selectors //=> ['a', 'b'][0m
      *
[31m-     * * `before`: the space symbols before the node. It also stores `*`[0m
[31m-     *   and `_` symbols before the declaration (IE hack).[0m
[31m-     * * `after`: the space symbols after the last child of the node[0m
[31m-     *   to the end of the node.[0m
[31m-     * * `between`: the symbols between the property and value[0m
[31m-     *   for declarations, selector and `{` for rules, or last parameter[0m
[31m-     *   and `{` for at-rules.[0m
[31m-     * * `semicolon`: contains `true` if the last child has[0m
[31m-     *   an (optional) semicolon.[0m
[31m-     * * `ownSemicolon`: contains `true` if there is semicolon after rule.[0m
[31m-     *[0m
[31m-     * PostCSS cleans selectors from comments and extra spaces,[0m
[31m-     * but it stores origin content in raws properties.[0m
[31m-     * As such, if you don’t change a declaration’s value,[0m
[31m-     * PostCSS will use the raw value with comments.[0m
[31m-     *[0m
[31m-     * @example[0m
[31m-     * const root = postcss.parse('a {\n  color:black\n}')[0m
[31m-     * root.first.first.raws //=> { before: '', between: ' ', after: '\n' }[0m
[32m+     * rule.selectors = ['a', 'strong'][0m
[32m+     * rule.selector //=> 'a, strong'[0m
      */
 
[31m-  }]);[0m
 
[31m-  return Rule;[0m
[32m+    _createClass([0m
[32m+        Rule, [{[0m
[32m+            key: "selectors",[0m
[32m+            get: function get()[0m
[32m+            {[0m
[32m+                return _list.default.comma(this.selector);[0m
[32m+            },[0m
[32m+            set: function set(values)[0m
[32m+            {[0m
[32m+                var match = this.selector ? this.selector.match(/,\s*/) : null;[0m
[32m+                var sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen');[0m
[32m+                this.selector = values.join(sep);[0m
[32m+            }[0m
[32m+            /**[0m
[32m+             * @memberof Rule#[0m
[32m+             * @member   {string} selector The rule’s full selector represented[0m
[32m+             *                           as a string.[0m
[32m+             *[0m
[32m+             * @example[0m
[32m+             * const root = postcss.parse('a, b { }')[0m
[32m+             * const rule = root.first[0m
[32m+             * rule.selector //=> 'a, b'[0m
[32m+             */[0m
[32m+[0m
[32m+            /**[0m
[32m+             * @memberof Rule#[0m
[32m+             * @member   {object} raws Information to generate byte-to-byte equal[0m
[32m+             *                       node string as it was in the origin input.[0m
[32m+             *[0m
[32m+             * Every parser saves its own properties,[0m
[32m+             * but the default CSS parser uses:[0m
[32m+             *[0m
[32m+             * * `before`: the space symbols before the node. It also stores `*`[0m
[32m+             *   and `_` symbols before the declaration (IE hack).[0m
[32m+             * * `after`: the space symbols after the last child of the node[0m
[32m+             *   to the end of the node.[0m
[32m+             * * `between`: the symbols between the property and value[0m
[32m+             *   for declarations, selector and `{` for rules, or last parameter[0m
[32m+             *   and `{` for at-rules.[0m
[32m+             * * `semicolon`: contains `true` if the last child has[0m
[32m+             *   an (optional) semicolon.[0m
[32m+             * * `ownSemicolon`: contains `true` if there is semicolon after rule.[0m
[32m+             *[0m
[32m+             * PostCSS cleans selectors from comments and extra spaces,[0m
[32m+             * but it stores origin content in raws properties.[0m
[32m+             * As such, if you don’t change a declaration’s value,[0m
[32m+             * PostCSS will use the raw value with comments.[0m
[32m+             *[0m
[32m+             * @example[0m
[32m+             * const root = postcss.parse('a {\n  color:black\n}')[0m
[32m+             * root.first.first.raws //=> { before: '', between: ' ', after: '\n' }[0m
[32m+             */[0m
[32m+[0m
[32m+        }][0m
[32m+    );[0m
[32m+[0m
[32m+    return Rule;[0m
 }(_container.default);
 
 var _default = Rule;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/input.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -9,11 +9,20 @@
 
 var _previousMap = _interopRequireDefault(require("./previous-map"));
 
[31m-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }[0m
[32m+function _interopRequireDefault(obj)[0m
[32m+{[0m
[32m+    return obj && obj.__esModule ? obj : { default: obj }; }[0m
 
[31m-function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }[0m
[32m+function _defineProperties(target, props)[0m
[32m+{[0m
[32m+    for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) { descriptor.writable = true;[0m
[32m+    } Object.defineProperty(target, descriptor.key, descriptor); } }[0m
 
[31m-function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }[0m
[32m+function _createClass(Constructor, protoProps, staticProps)[0m
[32m+{[0m
[32m+    if (protoProps) { _defineProperties(Constructor.prototype, protoProps);[0m
[32m+    } if (staticProps) { _defineProperties(Constructor, staticProps);[0m
[32m+    } return Constructor; }[0m
 
 var sequence = 0;
 /**
@@ -25,180 +34,195 @@
  */
 
 var Input = /*#__PURE__*/function () {
[31m-  /**[0m
[31m-   * @param {string} css    Input CSS source.[0m
[31m-   * @param {object} [opts] {@link Processor#process} options.[0m
[31m-   */[0m
[31m-  function Input(css, opts) {[0m
[31m-    if (opts === void 0) {[0m
[31m-      opts = {};[0m
[31m-    }[0m
[31m-[0m
[31m-    if (css === null || typeof css === 'undefined' || typeof css === 'object' && !css.toString) {[0m
[31m-      throw new Error("PostCSS received " + css + " instead of CSS string");[0m
[31m-    }[0m
     /**
[31m-     * Input CSS source[0m
[31m-     *[0m
[31m-     * @type {string}[0m
[31m-     *[0m
[31m-     * @example[0m
[31m-     * const input = postcss.parse('a{}', { from: file }).input[0m
[31m-     * input.css //=> "a{}"[0m
[32m+     * @param {string} css    Input CSS source.[0m
[32m+     * @param {object} [opts] {@link Processor#process} options.[0m
      */
[32m+    function Input(css, opts)[0m
[32m+    {[0m
[32m+        if (opts === void 0) {[0m
[32m+            opts = {};[0m
[32m+        }[0m
 
[31m-[0m
[31m-    this.css = css.toString();[0m
[31m-[0m
[31m-    if (this.css[0] === "\uFEFF" || this.css[0] === "\uFFFE") {[0m
[31m-      this.hasBOM = true;[0m
[31m-      this.css = this.css.slice(1);[0m
[31m-    } else {[0m
[31m-      this.hasBOM = false;[0m
[31m-    }[0m
[31m-[0m
[31m-    if (opts.from) {[0m
[31m-      if (/^\w+:\/\//.test(opts.from) || _path.default.isAbsolute(opts.from)) {[0m
[32m+        if (css === null || typeof css === 'undefined' || typeof css === 'object' && !css.toString) {[0m
[32m+            throw new Error("PostCSS received " + css + " instead of CSS string");[0m
[32m+        }[0m
         /**
[31m-         * The absolute path to the CSS source file defined[0m
[31m-         * with the `from` option.[0m
[32m+         * Input CSS source[0m
          *
          * @type {string}
          *
          * @example
[31m-         * const root = postcss.parse(css, { from: 'a.css' })[0m
[31m-         * root.source.input.file //=> '/home/ai/a.css'[0m
[32m+         * const input = postcss.parse('a{}', { from: file }).input[0m
[32m+         * input.css //=> "a{}"[0m
          */
[31m-        this.file = opts.from;[0m
[31m-      } else {[0m
[31m-        this.file = _path.default.resolve(opts.from);[0m
[31m-      }[0m
[31m-    }[0m
 
[31m-    var map = new _previousMap.default(this.css, opts);[0m
 
[31m-    if (map.text) {[0m
[31m-      /**[0m
[31m-       * The input source map passed from a compilation step before PostCSS[0m
[31m-       * (for example, from Sass compiler).[0m
[31m-       *[0m
[31m-       * @type {PreviousMap}[0m
[31m-       *[0m
[31m-       * @example[0m
[31m-       * root.source.input.map.consumer().sources //=> ['a.sass'][0m
[31m-       */[0m
[31m-      this.map = map;[0m
[31m-      var file = map.consumer().file;[0m
[31m-      if (!this.file && file) this.file = this.mapResolve(file);[0m
[31m-    }[0m
[32m+        this.css = css.toString();[0m
 
[31m-    if (!this.file) {[0m
[31m-      sequence += 1;[0m
[31m-      /**[0m
[31m-       * The unique ID of the CSS source. It will be created if `from` option[0m
[31m-       * is not provided (because PostCSS does not know the file path).[0m
[31m-       *[0m
[31m-       * @type {string}[0m
[31m-       *[0m
[31m-       * @example[0m
[31m-       * const root = postcss.parse(css)[0m
[31m-       * root.source.input.file //=> undefined[0m
[31m-       * root.source.input.id   //=> "<input css 1>"[0m
[31m-       */[0m
[32m+        if (this.css[0] === "\uFEFF" || this.css[0] === "\uFFFE") {[0m
[32m+            this.hasBOM = true;[0m
[32m+            this.css = this.css.slice(1);[0m
[32m+        } else {[0m
[32m+            this.hasBOM = false;[0m
[32m+        }[0m
 
[31m-      this.id = '<input css ' + sequence + '>';[0m
[31m-    }[0m
[32m+        if (opts.from) {[0m
[32m+            if (/^\w+:\/\//.test(opts.from) || _path.default.isAbsolute(opts.from)) {[0m
[32m+                /**[0m
[32m+                 * The absolute path to the CSS source file defined[0m
[32m+                 * with the `from` option.[0m
[32m+                 *[0m
[32m+                 * @type {string}[0m
[32m+                 *[0m
[32m+                 * @example[0m
[32m+                 * const root = postcss.parse(css, { from: 'a.css' })[0m
[32m+                 * root.source.input.file //=> '/home/ai/a.css'[0m
[32m+                 */[0m
[32m+                this.file = opts.from;[0m
[32m+            } else {[0m
[32m+                this.file = _path.default.resolve(opts.from);[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-    if (this.map) this.map.file = this.from;[0m
[31m-  }[0m
[32m+        var map = new _previousMap.default(this.css, opts);[0m
 
[31m-  var _proto = Input.prototype;[0m
[32m+        if (map.text) {[0m
[32m+            /**[0m
[32m+             * The input source map passed from a compilation step before PostCSS[0m
[32m+             * (for example, from Sass compiler).[0m
[32m+             *[0m
[32m+             * @type {PreviousMap}[0m
[32m+             *[0m
[32m+             * @example[0m
[32m+             * root.source.input.map.consumer().sources //=> ['a.sass'][0m
[32m+             */[0m
[32m+            this.map = map;[0m
[32m+            var file = map.consumer().file;[0m
[32m+            if (!this.file && file) { this.file = this.mapResolve(file);[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-  _proto.error = function error(message, line, column, opts) {[0m
[31m-    if (opts === void 0) {[0m
[31m-      opts = {};[0m
[31m-    }[0m
[32m+        if (!this.file) {[0m
[32m+            sequence += 1;[0m
[32m+            /**[0m
[32m+             * The unique ID of the CSS source. It will be created if `from` option[0m
[32m+             * is not provided (because PostCSS does not know the file path).[0m
[32m+             *[0m
[32m+             * @type {string}[0m
[32m+             *[0m
[32m+             * @example[0m
[32m+             * const root = postcss.parse(css)[0m
[32m+             * root.source.input.file //=> undefined[0m
[32m+             * root.source.input.id   //=> "<input css 1>"[0m
[32m+             */[0m
 
[31m-    var result;[0m
[31m-    var origin = this.origin(line, column);[0m
[32m+            this.id = '<input css ' + sequence + '>';[0m
[32m+        }[0m
 
[31m-    if (origin) {[0m
[31m-      result = new _cssSyntaxError.default(message, origin.line, origin.column, origin.source, origin.file, opts.plugin);[0m
[31m-    } else {[0m
[31m-      result = new _cssSyntaxError.default(message, line, column, this.css, this.file, opts.plugin);[0m
[32m+        if (this.map) { this.map.file = this.from;[0m
[32m+        }[0m
     }
 
[31m-    result.input = {[0m
[31m-      line: line,[0m
[31m-      column: column,[0m
[31m-      source: this.css[0m
[31m-    };[0m
[31m-    if (this.file) result.input.file = this.file;[0m
[31m-    return result;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Reads the input source map and returns a symbol position[0m
[31m-   * in the input source (e.g., in a Sass file that was compiled[0m
[31m-   * to CSS before being passed to PostCSS).[0m
[31m-   *[0m
[31m-   * @param {number} line   Line in input CSS.[0m
[31m-   * @param {number} column Column in input CSS.[0m
[31m-   *[0m
[31m-   * @return {filePosition} Position in input source.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * root.source.input.origin(1, 1) //=> { file: 'a.css', line: 3, column: 1 }[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    var _proto = Input.prototype;[0m
 
[31m-  _proto.origin = function origin(line, column) {[0m
[31m-    if (!this.map) return false;[0m
[31m-    var consumer = this.map.consumer();[0m
[31m-    var from = consumer.originalPositionFor({[0m
[31m-      line: line,[0m
[31m-      column: column[0m
[31m-    });[0m
[31m-    if (!from.source) return false;[0m
[31m-    var result = {[0m
[31m-      file: this.mapResolve(from.source),[0m
[31m-      line: from.line,[0m
[31m-      column: from.column[0m
[31m-    };[0m
[31m-    var source = consumer.sourceContentFor(from.source);[0m
[31m-    if (source) result.source = source;[0m
[31m-    return result;[0m
[31m-  };[0m
[32m+    _proto.error = function error(message, line, column, opts)[0m
[32m+    {[0m
[32m+        if (opts === void 0) {[0m
[32m+            opts = {};[0m
[32m+        }[0m
 
[31m-  _proto.mapResolve = function mapResolve(file) {[0m
[31m-    if (/^\w+:\/\//.test(file)) {[0m
[31m-      return file;[0m
[32m+        var result;[0m
[32m+        var origin = this.origin(line, column);[0m
[32m+[0m
[32m+        if (origin) {[0m
[32m+            result = new _cssSyntaxError.default(message, origin.line, origin.column, origin.source, origin.file, opts.plugin);[0m
[32m+        } else {[0m
[32m+            result = new _cssSyntaxError.default(message, line, column, this.css, this.file, opts.plugin);[0m
[32m+        }[0m
[32m+[0m
[32m+        result.input = {[0m
[32m+            line: line,[0m
[32m+            column: column,[0m
[32m+            source: this.css[0m
[32m+        };[0m
[32m+        if (this.file) { result.input.file = this.file;[0m
[32m+        }[0m
[32m+        return result;[0m
     }
[32m+    /**[0m
[32m+     * Reads the input source map and returns a symbol position[0m
[32m+     * in the input source (e.g., in a Sass file that was compiled[0m
[32m+     * to CSS before being passed to PostCSS).[0m
[32m+     *[0m
[32m+     * @param {number} line   Line in input CSS.[0m
[32m+     * @param {number} column Column in input CSS.[0m
[32m+     *[0m
[32m+     * @return {filePosition} Position in input source.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * root.source.input.origin(1, 1) //=> { file: 'a.css', line: 3, column: 1 }[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    return _path.default.resolve(this.map.consumer().sourceRoot || '.', file);[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * The CSS source identifier. Contains {@link Input#file} if the user[0m
[31m-   * set the `from` option, or {@link Input#id} if they did not.[0m
[31m-   *[0m
[31m-   * @type {string}[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const root = postcss.parse(css, { from: 'a.css' })[0m
[31m-   * root.source.input.from //=> "/home/ai/a.css"[0m
[31m-   *[0m
[31m-   * const root = postcss.parse(css)[0m
[31m-   * root.source.input.from //=> "<input css 1>"[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.origin = function origin(line, column)[0m
[32m+    {[0m
[32m+        if (!this.map) { return false;[0m
[32m+        }[0m
[32m+        var consumer = this.map.consumer();[0m
[32m+        var from = consumer.originalPositionFor([0m
[32m+            {[0m
[32m+                line: line,[0m
[32m+                column: column[0m
[32m+            }[0m
[32m+        );[0m
[32m+        if (!from.source) { return false;[0m
[32m+        }[0m
[32m+        var result = {[0m
[32m+            file: this.mapResolve(from.source),[0m
[32m+            line: from.line,[0m
[32m+            column: from.column[0m
[32m+        };[0m
[32m+        var source = consumer.sourceContentFor(from.source);[0m
[32m+        if (source) { result.source = source;[0m
[32m+        }[0m
[32m+        return result;[0m
[32m+    };[0m
 
[31m-  _createClass(Input, [{[0m
[31m-    key: "from",[0m
[31m-    get: function get() {[0m
[31m-      return this.file || this.id;[0m
[32m+    _proto.mapResolve = function mapResolve(file)[0m
[32m+    {[0m
[32m+        if (/^\w+:\/\//.test(file)) {[0m
[32m+            return file;[0m
[32m+        }[0m
[32m+[0m
[32m+        return _path.default.resolve(this.map.consumer().sourceRoot || '.', file);[0m
     }
[31m-  }]);[0m
[32m+    /**[0m
[32m+     * The CSS source identifier. Contains {@link Input#file} if the user[0m
[32m+     * set the `from` option, or {@link Input#id} if they did not.[0m
[32m+     *[0m
[32m+     * @type {string}[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const root = postcss.parse(css, { from: 'a.css' })[0m
[32m+     * root.source.input.from //=> "/home/ai/a.css"[0m
[32m+     *[0m
[32m+     * const root = postcss.parse(css)[0m
[32m+     * root.source.input.from //=> "<input css 1>"[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-  return Input;[0m
[32m+    _createClass([0m
[32m+        Input, [{[0m
[32m+            key: "from",[0m
[32m+            get: function get()[0m
[32m+            {[0m
[32m+                return this.file || this.id;[0m
[32m+            }[0m
[32m+        }][0m
[32m+    );[0m
[32m+[0m
[32m+    return Input;[0m
 }();
 
 var _default = Input;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/stringifier.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -3,357 +3,416 @@
 exports.__esModule = true;
 exports.default = void 0;
 var DEFAULT_RAW = {
[31m-  colon: ': ',[0m
[31m-  indent: '    ',[0m
[31m-  beforeDecl: '\n',[0m
[31m-  beforeRule: '\n',[0m
[31m-  beforeOpen: ' ',[0m
[31m-  beforeClose: '\n',[0m
[31m-  beforeComment: '\n',[0m
[31m-  after: '\n',[0m
[31m-  emptyBody: '',[0m
[31m-  commentLeft: ' ',[0m
[31m-  commentRight: ' ',[0m
[31m-  semicolon: false[0m
[32m+    colon: ': ',[0m
[32m+    indent: '    ',[0m
[32m+    beforeDecl: '\n',[0m
[32m+    beforeRule: '\n',[0m
[32m+    beforeOpen: ' ',[0m
[32m+    beforeClose: '\n',[0m
[32m+    beforeComment: '\n',[0m
[32m+    after: '\n',[0m
[32m+    emptyBody: '',[0m
[32m+    commentLeft: ' ',[0m
[32m+    commentRight: ' ',[0m
[32m+    semicolon: false[0m
 };
 
[31m-function capitalize(str) {[0m
[31m-  return str[0].toUpperCase() + str.slice(1);[0m
[32m+function capitalize(str)[0m
[32m+{[0m
[32m+    return str[0].toUpperCase() + str.slice(1);[0m
 }
 
 var Stringifier = /*#__PURE__*/function () {
[31m-  function Stringifier(builder) {[0m
[31m-    this.builder = builder;[0m
[31m-  }[0m
[32m+    function Stringifier(builder)[0m
[32m+    {[0m
[32m+        this.builder = builder;[0m
[32m+    }[0m
 
[31m-  var _proto = Stringifier.prototype;[0m
[32m+    var _proto = Stringifier.prototype;[0m
 
[31m-  _proto.stringify = function stringify(node, semicolon) {[0m
[31m-    this[node.type](node, semicolon);[0m
[31m-  };[0m
[32m+    _proto.stringify = function stringify(node, semicolon)[0m
[32m+    {[0m
[32m+        this[node.type](node, semicolon);[0m
[32m+    };[0m
 
[31m-  _proto.root = function root(node) {[0m
[31m-    this.body(node);[0m
[31m-    if (node.raws.after) this.builder(node.raws.after);[0m
[31m-  };[0m
[32m+    _proto.root = function root(node)[0m
[32m+    {[0m
[32m+        this.body(node);[0m
[32m+        if (node.raws.after) { this.builder(node.raws.after);[0m
[32m+        }[0m
[32m+    };[0m
 
[31m-  _proto.comment = function comment(node) {[0m
[31m-    var left = this.raw(node, 'left', 'commentLeft');[0m
[31m-    var right = this.raw(node, 'right', 'commentRight');[0m
[31m-    this.builder('/*' + left + node.text + right + '*/', node);[0m
[31m-  };[0m
[32m+    _proto.comment = function comment(node)[0m
[32m+    {[0m
[32m+        var left = this.raw(node, 'left', 'commentLeft');[0m
[32m+        var right = this.raw(node, 'right', 'commentRight');[0m
[32m+        this.builder('/*' + left + node.text + right + '*/', node);[0m
[32m+    };[0m
 
[31m-  _proto.decl = function decl(node, semicolon) {[0m
[31m-    var between = this.raw(node, 'between', 'colon');[0m
[31m-    var string = node.prop + between + this.rawValue(node, 'value');[0m
[32m+    _proto.decl = function decl(node, semicolon)[0m
[32m+    {[0m
[32m+        var between = this.raw(node, 'between', 'colon');[0m
[32m+        var string = node.prop + between + this.rawValue(node, 'value');[0m
 
[31m-    if (node.important) {[0m
[31m-      string += node.raws.important || ' !important';[0m
[31m-    }[0m
[32m+        if (node.important) {[0m
[32m+            string += node.raws.important || ' !important';[0m
[32m+        }[0m
 
[31m-    if (semicolon) string += ';';[0m
[31m-    this.builder(string, node);[0m
[31m-  };[0m
[32m+        if (semicolon) { string += ';';[0m
[32m+        }[0m
[32m+        this.builder(string, node);[0m
[32m+    };[0m
 
[31m-  _proto.rule = function rule(node) {[0m
[31m-    this.block(node, this.rawValue(node, 'selector'));[0m
[32m+    _proto.rule = function rule(node)[0m
[32m+    {[0m
[32m+        this.block(node, this.rawValue(node, 'selector'));[0m
 
[31m-    if (node.raws.ownSemicolon) {[0m
[31m-      this.builder(node.raws.ownSemicolon, node, 'end');[0m
[31m-    }[0m
[31m-  };[0m
[32m+        if (node.raws.ownSemicolon) {[0m
[32m+            this.builder(node.raws.ownSemicolon, node, 'end');[0m
[32m+        }[0m
[32m+    };[0m
 
[31m-  _proto.atrule = function atrule(node, semicolon) {[0m
[31m-    var name = '@' + node.name;[0m
[31m-    var params = node.params ? this.rawValue(node, 'params') : '';[0m
[32m+    _proto.atrule = function atrule(node, semicolon)[0m
[32m+    {[0m
[32m+        var name = '@' + node.name;[0m
[32m+        var params = node.params ? this.rawValue(node, 'params') : '';[0m
 
[31m-    if (typeof node.raws.afterName !== 'undefined') {[0m
[31m-      name += node.raws.afterName;[0m
[31m-    } else if (params) {[0m
[31m-      name += ' ';[0m
[31m-    }[0m
[32m+        if (typeof node.raws.afterName !== 'undefined') {[0m
[32m+            name += node.raws.afterName;[0m
[32m+        } else if (params) {[0m
[32m+            name += ' ';[0m
[32m+        }[0m
 
[31m-    if (node.nodes) {[0m
[31m-      this.block(node, name + params);[0m
[31m-    } else {[0m
[31m-      var end = (node.raws.between || '') + (semicolon ? ';' : '');[0m
[31m-      this.builder(name + params + end, node);[0m
[31m-    }[0m
[31m-  };[0m
[32m+        if (node.nodes) {[0m
[32m+            this.block(node, name + params);[0m
[32m+        } else {[0m
[32m+            var end = (node.raws.between || '') + (semicolon ? ';' : '');[0m
[32m+            this.builder(name + params + end, node);[0m
[32m+        }[0m
[32m+    };[0m
 
[31m-  _proto.body = function body(node) {[0m
[31m-    var last = node.nodes.length - 1;[0m
[32m+    _proto.body = function body(node)[0m
[32m+    {[0m
[32m+        var last = node.nodes.length - 1;[0m
 
[31m-    while (last > 0) {[0m
[31m-      if (node.nodes[last].type !== 'comment') break;[0m
[31m-      last -= 1;[0m
[31m-    }[0m
[32m+        while (last > 0) {[0m
[32m+            if (node.nodes[last].type !== 'comment') { break;[0m
[32m+            }[0m
[32m+            last -= 1;[0m
[32m+        }[0m
 
[31m-    var semicolon = this.raw(node, 'semicolon');[0m
[32m+        var semicolon = this.raw(node, 'semicolon');[0m
 
[31m-    for (var i = 0; i < node.nodes.length; i++) {[0m
[31m-      var child = node.nodes[i];[0m
[31m-      var before = this.raw(child, 'before');[0m
[31m-      if (before) this.builder(before);[0m
[31m-      this.stringify(child, last !== i || semicolon);[0m
[31m-    }[0m
[31m-  };[0m
[32m+        for (var i = 0; i < node.nodes.length; i++) {[0m
[32m+            var child = node.nodes[i];[0m
[32m+            var before = this.raw(child, 'before');[0m
[32m+            if (before) { this.builder(before);[0m
[32m+            }[0m
[32m+            this.stringify(child, last !== i || semicolon);[0m
[32m+        }[0m
[32m+    };[0m
 
[31m-  _proto.block = function block(node, start) {[0m
[31m-    var between = this.raw(node, 'between', 'beforeOpen');[0m
[31m-    this.builder(start + between + '{', node, 'start');[0m
[31m-    var after;[0m
[32m+    _proto.block = function block(node, start)[0m
[32m+    {[0m
[32m+        var between = this.raw(node, 'between', 'beforeOpen');[0m
[32m+        this.builder(start + between + '{', node, 'start');[0m
[32m+        var after;[0m
 
[31m-    if (node.nodes && node.nodes.length) {[0m
[31m-      this.body(node);[0m
[31m-      after = this.raw(node, 'after');[0m
[31m-    } else {[0m
[31m-      after = this.raw(node, 'after', 'emptyBody');[0m
[31m-    }[0m
[32m+        if (node.nodes && node.nodes.length) {[0m
[32m+            this.body(node);[0m
[32m+            after = this.raw(node, 'after');[0m
[32m+        } else {[0m
[32m+            after = this.raw(node, 'after', 'emptyBody');[0m
[32m+        }[0m
 
[31m-    if (after) this.builder(after);[0m
[31m-    this.builder('}', node, 'end');[0m
[31m-  };[0m
[32m+        if (after) { this.builder(after);[0m
[32m+        }[0m
[32m+        this.builder('}', node, 'end');[0m
[32m+    };[0m
 
[31m-  _proto.raw = function raw(node, own, detect) {[0m
[31m-    var value;[0m
[31m-    if (!detect) detect = own; // Already had[0m
[32m+    _proto.raw = function raw(node, own, detect)[0m
[32m+    {[0m
[32m+        var value;[0m
[32m+        if (!detect) { detect = own; // Already had[0m
[32m+        }[0m
 
[31m-    if (own) {[0m
[31m-      value = node.raws[own];[0m
[31m-      if (typeof value !== 'undefined') return value;[0m
[31m-    }[0m
[32m+        if (own) {[0m
[32m+            value = node.raws[own];[0m
[32m+            if (typeof value !== 'undefined') { return value;[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-    var parent = node.parent; // Hack for first rule in CSS[0m
[32m+        var parent = node.parent; // Hack for first rule in CSS[0m
 
[31m-    if (detect === 'before') {[0m
[31m-      if (!parent || parent.type === 'root' && parent.first === node) {[0m
[31m-        return '';[0m
[31m-      }[0m
[31m-    } // Floating child without parent[0m
[32m+        if (detect === 'before') {[0m
[32m+            if (!parent || parent.type === 'root' && parent.first === node) {[0m
[32m+                return '';[0m
[32m+            }[0m
[32m+        } // Floating child without parent[0m
 
 
[31m-    if (!parent) return DEFAULT_RAW[detect]; // Detect style by other nodes[0m
[32m+        if (!parent) { return DEFAULT_RAW[detect]; // Detect style by other nodes[0m
[32m+        }[0m
 
[31m-    var root = node.root();[0m
[31m-    if (!root.rawCache) root.rawCache = {};[0m
[32m+        var root = node.root();[0m
[32m+        if (!root.rawCache) { root.rawCache = {};[0m
[32m+        }[0m
 
[31m-    if (typeof root.rawCache[detect] !== 'undefined') {[0m
[31m-      return root.rawCache[detect];[0m
[31m-    }[0m
[32m+        if (typeof root.rawCache[detect] !== 'undefined') {[0m
[32m+            return root.rawCache[detect];[0m
[32m+        }[0m
 
[31m-    if (detect === 'before' || detect === 'after') {[0m
[31m-      return this.beforeAfter(node, detect);[0m
[31m-    } else {[0m
[31m-      var method = 'raw' + capitalize(detect);[0m
[32m+        if (detect === 'before' || detect === 'after') {[0m
[32m+            return this.beforeAfter(node, detect);[0m
[32m+        } else {[0m
[32m+            var method = 'raw' + capitalize(detect);[0m
 
[31m-      if (this[method]) {[0m
[31m-        value = this[method](root, node);[0m
[31m-      } else {[0m
[31m-        root.walk(function (i) {[0m
[31m-          value = i.raws[own];[0m
[31m-          if (typeof value !== 'undefined') return false;[0m
[31m-        });[0m
[31m-      }[0m
[31m-    }[0m
[32m+            if (this[method]) {[0m
[32m+                value = this[method](root, node);[0m
[32m+            } else {[0m
[32m+                root.walk([0m
[32m+                    function (i) {[0m
[32m+                        value = i.raws[own];[0m
[32m+                        if (typeof value !== 'undefined') { return false;[0m
[32m+                        }[0m
[32m+                    }[0m
[32m+                );[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-    if (typeof value === 'undefined') value = DEFAULT_RAW[detect];[0m
[31m-    root.rawCache[detect] = value;[0m
[31m-    return value;[0m
[31m-  };[0m
[32m+        if (typeof value === 'undefined') { value = DEFAULT_RAW[detect];[0m
[32m+        }[0m
[32m+        root.rawCache[detect] = value;[0m
[32m+        return value;[0m
[32m+    };[0m
 
[31m-  _proto.rawSemicolon = function rawSemicolon(root) {[0m
[31m-    var value;[0m
[31m-    root.walk(function (i) {[0m
[31m-      if (i.nodes && i.nodes.length && i.last.type === 'decl') {[0m
[31m-        value = i.raws.semicolon;[0m
[31m-        if (typeof value !== 'undefined') return false;[0m
[31m-      }[0m
[31m-    });[0m
[31m-    return value;[0m
[31m-  };[0m
[32m+    _proto.rawSemicolon = function rawSemicolon(root)[0m
[32m+    {[0m
[32m+        var value;[0m
[32m+        root.walk([0m
[32m+            function (i) {[0m
[32m+                if (i.nodes && i.nodes.length && i.last.type === 'decl') {[0m
[32m+                    value = i.raws.semicolon;[0m
[32m+                    if (typeof value !== 'undefined') { return false;[0m
[32m+                    }[0m
[32m+                }[0m
[32m+            }[0m
[32m+        );[0m
[32m+        return value;[0m
[32m+    };[0m
 
[31m-  _proto.rawEmptyBody = function rawEmptyBody(root) {[0m
[31m-    var value;[0m
[31m-    root.walk(function (i) {[0m
[31m-      if (i.nodes && i.nodes.length === 0) {[0m
[31m-        value = i.raws.after;[0m
[31m-        if (typeof value !== 'undefined') return false;[0m
[31m-      }[0m
[31m-    });[0m
[31m-    return value;[0m
[31m-  };[0m
[32m+    _proto.rawEmptyBody = function rawEmptyBody(root)[0m
[32m+    {[0m
[32m+        var value;[0m
[32m+        root.walk([0m
[32m+            function (i) {[0m
[32m+                if (i.nodes && i.nodes.length === 0) {[0m
[32m+                    value = i.raws.after;[0m
[32m+                    if (typeof value !== 'undefined') { return false;[0m
[32m+                    }[0m
[32m+                }[0m
[32m+            }[0m
[32m+        );[0m
[32m+        return value;[0m
[32m+    };[0m
 
[31m-  _proto.rawIndent = function rawIndent(root) {[0m
[31m-    if (root.raws.indent) return root.raws.indent;[0m
[31m-    var value;[0m
[31m-    root.walk(function (i) {[0m
[31m-      var p = i.parent;[0m
[31m-[0m
[31m-      if (p && p !== root && p.parent && p.parent === root) {[0m
[31m-        if (typeof i.raws.before !== 'undefined') {[0m
[31m-          var parts = i.raws.before.split('\n');[0m
[31m-          value = parts[parts.length - 1];[0m
[31m-          value = value.replace(/[^\s]/g, '');[0m
[31m-          return false;[0m
[32m+    _proto.rawIndent = function rawIndent(root)[0m
[32m+    {[0m
[32m+        if (root.raws.indent) { return root.raws.indent;[0m
         }
[31m-      }[0m
[31m-    });[0m
[31m-    return value;[0m
[31m-  };[0m
[32m+        var value;[0m
[32m+        root.walk([0m
[32m+            function (i) {[0m
[32m+                var p = i.parent;[0m
 
[31m-  _proto.rawBeforeComment = function rawBeforeComment(root, node) {[0m
[31m-    var value;[0m
[31m-    root.walkComments(function (i) {[0m
[31m-      if (typeof i.raws.before !== 'undefined') {[0m
[31m-        value = i.raws.before;[0m
[32m+                if (p && p !== root && p.parent && p.parent === root) {[0m
[32m+                    if (typeof i.raws.before !== 'undefined') {[0m
[32m+                        var parts = i.raws.before.split('\n');[0m
[32m+                        value = parts[parts.length - 1];[0m
[32m+                        value = value.replace(/[^\s]/g, '');[0m
[32m+                        return false;[0m
[32m+                    }[0m
[32m+                }[0m
[32m+            }[0m
[32m+        );[0m
[32m+        return value;[0m
[32m+    };[0m
 
[31m-        if (value.indexOf('\n') !== -1) {[0m
[31m-          value = value.replace(/[^\n]+$/, '');[0m
[31m-        }[0m
[32m+    _proto.rawBeforeComment = function rawBeforeComment(root, node)[0m
[32m+    {[0m
[32m+        var value;[0m
[32m+        root.walkComments([0m
[32m+            function (i) {[0m
[32m+                if (typeof i.raws.before !== 'undefined') {[0m
[32m+                    value = i.raws.before;[0m
 
[31m-        return false;[0m
[31m-      }[0m
[31m-    });[0m
[32m+                    if (value.indexOf('\n') !== -1) {[0m
[32m+                        value = value.replace(/[^\n]+$/, '');[0m
[32m+                    }[0m
 
[31m-    if (typeof value === 'undefined') {[0m
[31m-      value = this.raw(node, null, 'beforeDecl');[0m
[31m-    } else if (value) {[0m
[31m-      value = value.replace(/[^\s]/g, '');[0m
[31m-    }[0m
[32m+                    return false;[0m
[32m+                }[0m
[32m+            }[0m
[32m+        );[0m
 
[31m-    return value;[0m
[31m-  };[0m
[32m+        if (typeof value === 'undefined') {[0m
[32m+            value = this.raw(node, null, 'beforeDecl');[0m
[32m+        } else if (value) {[0m
[32m+            value = value.replace(/[^\s]/g, '');[0m
[32m+        }[0m
 
[31m-  _proto.rawBeforeDecl = function rawBeforeDecl(root, node) {[0m
[31m-    var value;[0m
[31m-    root.walkDecls(function (i) {[0m
[31m-      if (typeof i.raws.before !== 'undefined') {[0m
[31m-        value = i.raws.before;[0m
[32m+        return value;[0m
[32m+    };[0m
 
[31m-        if (value.indexOf('\n') !== -1) {[0m
[31m-          value = value.replace(/[^\n]+$/, '');[0m
[31m-        }[0m
[32m+    _proto.rawBeforeDecl = function rawBeforeDecl(root, node)[0m
[32m+    {[0m
[32m+        var value;[0m
[32m+        root.walkDecls([0m
[32m+            function (i) {[0m
[32m+                if (typeof i.raws.before !== 'undefined') {[0m
[32m+                    value = i.raws.before;[0m
 
[31m-        return false;[0m
[31m-      }[0m
[31m-    });[0m
[32m+                    if (value.indexOf('\n') !== -1) {[0m
[32m+                        value = value.replace(/[^\n]+$/, '');[0m
[32m+                    }[0m
 
[31m-    if (typeof value === 'undefined') {[0m
[31m-      value = this.raw(node, null, 'beforeRule');[0m
[31m-    } else if (value) {[0m
[31m-      value = value.replace(/[^\s]/g, '');[0m
[31m-    }[0m
[32m+                    return false;[0m
[32m+                }[0m
[32m+            }[0m
[32m+        );[0m
 
[31m-    return value;[0m
[31m-  };[0m
[32m+        if (typeof value === 'undefined') {[0m
[32m+            value = this.raw(node, null, 'beforeRule');[0m
[32m+        } else if (value) {[0m
[32m+            value = value.replace(/[^\s]/g, '');[0m
[32m+        }[0m
 
[31m-  _proto.rawBeforeRule = function rawBeforeRule(root) {[0m
[31m-    var value;[0m
[31m-    root.walk(function (i) {[0m
[31m-      if (i.nodes && (i.parent !== root || root.first !== i)) {[0m
[31m-        if (typeof i.raws.before !== 'undefined') {[0m
[31m-          value = i.raws.before;[0m
[32m+        return value;[0m
[32m+    };[0m
 
[31m-          if (value.indexOf('\n') !== -1) {[0m
[31m-            value = value.replace(/[^\n]+$/, '');[0m
[31m-          }[0m
[32m+    _proto.rawBeforeRule = function rawBeforeRule(root)[0m
[32m+    {[0m
[32m+        var value;[0m
[32m+        root.walk([0m
[32m+            function (i) {[0m
[32m+                if (i.nodes && (i.parent !== root || root.first !== i)) {[0m
[32m+                    if (typeof i.raws.before !== 'undefined') {[0m
[32m+                        value = i.raws.before;[0m
 
[31m-          return false;[0m
[32m+                        if (value.indexOf('\n') !== -1) {[0m
[32m+                              value = value.replace(/[^\n]+$/, '');[0m
[32m+                        }[0m
[32m+[0m
[32m+                        return false;[0m
[32m+                    }[0m
[32m+                }[0m
[32m+            }[0m
[32m+        );[0m
[32m+        if (value) { value = value.replace(/[^\s]/g, '');[0m
         }
[31m-      }[0m
[31m-    });[0m
[31m-    if (value) value = value.replace(/[^\s]/g, '');[0m
[31m-    return value;[0m
[31m-  };[0m
[32m+        return value;[0m
[32m+    };[0m
 
[31m-  _proto.rawBeforeClose = function rawBeforeClose(root) {[0m
[31m-    var value;[0m
[31m-    root.walk(function (i) {[0m
[31m-      if (i.nodes && i.nodes.length > 0) {[0m
[31m-        if (typeof i.raws.after !== 'undefined') {[0m
[31m-          value = i.raws.after;[0m
[32m+    _proto.rawBeforeClose = function rawBeforeClose(root)[0m
[32m+    {[0m
[32m+        var value;[0m
[32m+        root.walk([0m
[32m+            function (i) {[0m
[32m+                if (i.nodes && i.nodes.length > 0) {[0m
[32m+                    if (typeof i.raws.after !== 'undefined') {[0m
[32m+                        value = i.raws.after;[0m
 
[31m-          if (value.indexOf('\n') !== -1) {[0m
[31m-            value = value.replace(/[^\n]+$/, '');[0m
[31m-          }[0m
[32m+                        if (value.indexOf('\n') !== -1) {[0m
[32m+                              value = value.replace(/[^\n]+$/, '');[0m
[32m+                        }[0m
 
[31m-          return false;[0m
[32m+                        return false;[0m
[32m+                    }[0m
[32m+                }[0m
[32m+            }[0m
[32m+        );[0m
[32m+        if (value) { value = value.replace(/[^\s]/g, '');[0m
         }
[31m-      }[0m
[31m-    });[0m
[31m-    if (value) value = value.replace(/[^\s]/g, '');[0m
[31m-    return value;[0m
[31m-  };[0m
[32m+        return value;[0m
[32m+    };[0m
 
[31m-  _proto.rawBeforeOpen = function rawBeforeOpen(root) {[0m
[31m-    var value;[0m
[31m-    root.walk(function (i) {[0m
[31m-      if (i.type !== 'decl') {[0m
[31m-        value = i.raws.between;[0m
[31m-        if (typeof value !== 'undefined') return false;[0m
[31m-      }[0m
[31m-    });[0m
[31m-    return value;[0m
[31m-  };[0m
[32m+    _proto.rawBeforeOpen = function rawBeforeOpen(root)[0m
[32m+    {[0m
[32m+        var value;[0m
[32m+        root.walk([0m
[32m+            function (i) {[0m
[32m+                if (i.type !== 'decl') {[0m
[32m+                    value = i.raws.between;[0m
[32m+                    if (typeof value !== 'undefined') { return false;[0m
[32m+                    }[0m
[32m+                }[0m
[32m+            }[0m
[32m+        );[0m
[32m+        return value;[0m
[32m+    };[0m
 
[31m-  _proto.rawColon = function rawColon(root) {[0m
[31m-    var value;[0m
[31m-    root.walkDecls(function (i) {[0m
[31m-      if (typeof i.raws.between !== 'undefined') {[0m
[31m-        value = i.raws.between.replace(/[^\s:]/g, '');[0m
[31m-        return false;[0m
[31m-      }[0m
[31m-    });[0m
[31m-    return value;[0m
[31m-  };[0m
[32m+    _proto.rawColon = function rawColon(root)[0m
[32m+    {[0m
[32m+        var value;[0m
[32m+        root.walkDecls([0m
[32m+            function (i) {[0m
[32m+                if (typeof i.raws.between !== 'undefined') {[0m
[32m+                    value = i.raws.between.replace(/[^\s:]/g, '');[0m
[32m+                    return false;[0m
[32m+                }[0m
[32m+            }[0m
[32m+        );[0m
[32m+        return value;[0m
[32m+    };[0m
 
[31m-  _proto.beforeAfter = function beforeAfter(node, detect) {[0m
[31m-    var value;[0m
[32m+    _proto.beforeAfter = function beforeAfter(node, detect)[0m
[32m+    {[0m
[32m+        var value;[0m
 
[31m-    if (node.type === 'decl') {[0m
[31m-      value = this.raw(node, null, 'beforeDecl');[0m
[31m-    } else if (node.type === 'comment') {[0m
[31m-      value = this.raw(node, null, 'beforeComment');[0m
[31m-    } else if (detect === 'before') {[0m
[31m-      value = this.raw(node, null, 'beforeRule');[0m
[31m-    } else {[0m
[31m-      value = this.raw(node, null, 'beforeClose');[0m
[31m-    }[0m
[32m+        if (node.type === 'decl') {[0m
[32m+            value = this.raw(node, null, 'beforeDecl');[0m
[32m+        } else if (node.type === 'comment') {[0m
[32m+            value = this.raw(node, null, 'beforeComment');[0m
[32m+        } else if (detect === 'before') {[0m
[32m+            value = this.raw(node, null, 'beforeRule');[0m
[32m+        } else {[0m
[32m+            value = this.raw(node, null, 'beforeClose');[0m
[32m+        }[0m
 
[31m-    var buf = node.parent;[0m
[31m-    var depth = 0;[0m
[32m+        var buf = node.parent;[0m
[32m+        var depth = 0;[0m
 
[31m-    while (buf && buf.type !== 'root') {[0m
[31m-      depth += 1;[0m
[31m-      buf = buf.parent;[0m
[31m-    }[0m
[32m+        while (buf && buf.type !== 'root') {[0m
[32m+            depth += 1;[0m
[32m+            buf = buf.parent;[0m
[32m+        }[0m
 
[31m-    if (value.indexOf('\n') !== -1) {[0m
[31m-      var indent = this.raw(node, null, 'indent');[0m
[32m+        if (value.indexOf('\n') !== -1) {[0m
[32m+            var indent = this.raw(node, null, 'indent');[0m
 
[31m-      if (indent.length) {[0m
[31m-        for (var step = 0; step < depth; step++) {[0m
[31m-          value += indent;[0m
[32m+            if (indent.length) {[0m
[32m+                for (var step = 0; step < depth; step++) {[0m
[32m+                    value += indent;[0m
[32m+                }[0m
[32m+            }[0m
         }
[31m-      }[0m
[31m-    }[0m
 
[31m-    return value;[0m
[31m-  };[0m
[32m+        return value;[0m
[32m+    };[0m
 
[31m-  _proto.rawValue = function rawValue(node, prop) {[0m
[31m-    var value = node[prop];[0m
[31m-    var raw = node.raws[prop];[0m
[32m+    _proto.rawValue = function rawValue(node, prop)[0m
[32m+    {[0m
[32m+        var value = node[prop];[0m
[32m+        var raw = node.raws[prop];[0m
 
[31m-    if (raw && raw.value === value) {[0m
[31m-      return raw.raw;[0m
[31m-    }[0m
[32m+        if (raw && raw.value === value) {[0m
[32m+            return raw.raw;[0m
[32m+        }[0m
 
[31m-    return value;[0m
[31m-  };[0m
[32m+        return value;[0m
[32m+    };[0m
 
[31m-  return Stringifier;[0m
[32m+    return Stringifier;[0m
 }();
 
 var _default = Stringifier;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/container.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -9,26 +9,55 @@
 
 var _node = _interopRequireDefault(require("./node"));
 
[31m-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }[0m
[32m+function _interopRequireDefault(obj)[0m
[32m+{[0m
[32m+    return obj && obj.__esModule ? obj : { default: obj }; }[0m
 
[31m-function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }[0m
[32m+function _createForOfIteratorHelperLoose(o, allowArrayLike)[0m
[32m+{[0m
[32m+    var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) { o = it;[0m
[32m+    } var i = 0; return function () {[0m
[32m+        if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }[0m
 
[31m-function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }[0m
[32m+function _unsupportedIterableToArray(o, minLen)[0m
[32m+{[0m
[32m+    if (!o) { return;[0m
[32m+    } if (typeof o === "string") { return _arrayLikeToArray(o, minLen);[0m
[32m+    } var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) { n = o.constructor.name;[0m
[32m+    } if (n === "Map" || n === "Set") { return Array.from(o);[0m
[32m+    } if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) { return _arrayLikeToArray(o, minLen);[0m
[32m+    } }[0m
 
[31m-function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }[0m
[32m+function _arrayLikeToArray(arr, len)[0m
[32m+{[0m
[32m+    if (len == null || len > arr.length) { len = arr.length;[0m
[32m+    } for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }[0m
 
[31m-function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }[0m
[32m+function _defineProperties(target, props)[0m
[32m+{[0m
[32m+    for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) { descriptor.writable = true;[0m
[32m+    } Object.defineProperty(target, descriptor.key, descriptor); } }[0m
 
[31m-function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }[0m
[32m+function _createClass(Constructor, protoProps, staticProps)[0m
[32m+{[0m
[32m+    if (protoProps) { _defineProperties(Constructor.prototype, protoProps);[0m
[32m+    } if (staticProps) { _defineProperties(Constructor, staticProps);[0m
[32m+    } return Constructor; }[0m
 
[31m-function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }[0m
[32m+function _inheritsLoose(subClass, superClass)[0m
[32m+{[0m
[32m+    subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }[0m
 
[31m-function cleanSource(nodes) {[0m
[31m-  return nodes.map(function (i) {[0m
[31m-    if (i.nodes) i.nodes = cleanSource(i.nodes);[0m
[31m-    delete i.source;[0m
[31m-    return i;[0m
[31m-  });[0m
[32m+function cleanSource(nodes)[0m
[32m+{[0m
[32m+    return nodes.map([0m
[32m+        function (i) {[0m
[32m+            if (i.nodes) { i.nodes = cleanSource(i.nodes);[0m
[32m+            }[0m
[32m+            delete i.source;[0m
[32m+            return i;[0m
[32m+        }[0m
[32m+    );[0m
 }
 /**
  * The {@link Root}, {@link AtRule}, and {@link Rule} container nodes
@@ -37,736 +66,797 @@
  * Note that all containers can store any content. If you write a rule inside
  * a rule, PostCSS will parse it.
  *
[31m- * @extends Node[0m
[32m+ * @extends  Node[0m
  * @abstract
  */
 
 
 var Container = /*#__PURE__*/function (_Node) {
[31m-  _inheritsLoose(Container, _Node);[0m
[32m+    _inheritsLoose(Container, _Node);[0m
 
[31m-  function Container() {[0m
[31m-    return _Node.apply(this, arguments) || this;[0m
[31m-  }[0m
[32m+    function Container()[0m
[32m+    {[0m
[32m+        return _Node.apply(this, arguments) || this;[0m
[32m+    }[0m
 
[31m-  var _proto = Container.prototype;[0m
[32m+    var _proto = Container.prototype;[0m
 
[31m-  _proto.push = function push(child) {[0m
[31m-    child.parent = this;[0m
[31m-    this.nodes.push(child);[0m
[31m-    return this;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Iterates through the container’s immediate children,[0m
[31m-   * calling `callback` for each child.[0m
[31m-   *[0m
[31m-   * Returning `false` in the callback will break iteration.[0m
[31m-   *[0m
[31m-   * This method only iterates through the container’s immediate children.[0m
[31m-   * If you need to recursively iterate through all the container’s descendant[0m
[31m-   * nodes, use {@link Container#walk}.[0m
[31m-   *[0m
[31m-   * Unlike the for `{}`-cycle or `Array#forEach` this iterator is safe[0m
[31m-   * if you are mutating the array of child nodes during iteration.[0m
[31m-   * PostCSS will adjust the current index to match the mutations.[0m
[31m-   *[0m
[31m-   * @param {childIterator} callback Iterator receives each node and index.[0m
[31m-   *[0m
[31m-   * @return {false|undefined} Returns `false` if iteration was broke.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const root = postcss.parse('a { color: black; z-index: 1 }')[0m
[31m-   * const rule = root.first[0m
[31m-   *[0m
[31m-   * for (const decl of rule.nodes) {[0m
[31m-   *   decl.cloneBefore({ prop: '-webkit-' + decl.prop })[0m
[31m-   *   // Cycle will be infinite, because cloneBefore moves the current node[0m
[31m-   *   // to the next index[0m
[31m-   * }[0m
[31m-   *[0m
[31m-   * rule.each(decl => {[0m
[31m-   *   decl.cloneBefore({ prop: '-webkit-' + decl.prop })[0m
[31m-   *   // Will be executed only for color and z-index[0m
[31m-   * })[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.push = function push(child)[0m
[32m+    {[0m
[32m+        child.parent = this;[0m
[32m+        this.nodes.push(child);[0m
[32m+        return this;[0m
[32m+    }[0m
[32m+    /**[0m
[32m+     * Iterates through the container’s immediate children,[0m
[32m+     * calling `callback` for each child.[0m
[32m+     *[0m
[32m+     * Returning `false` in the callback will break iteration.[0m
[32m+     *[0m
[32m+     * This method only iterates through the container’s immediate children.[0m
[32m+     * If you need to recursively iterate through all the container’s descendant[0m
[32m+     * nodes, use {@link Container#walk}.[0m
[32m+     *[0m
[32m+     * Unlike the for `{}`-cycle or `Array#forEach` this iterator is safe[0m
[32m+     * if you are mutating the array of child nodes during iteration.[0m
[32m+     * PostCSS will adjust the current index to match the mutations.[0m
[32m+     *[0m
[32m+     * @param {childIterator} callback Iterator receives each node and index.[0m
[32m+     *[0m
[32m+     * @return {false|undefined} Returns `false` if iteration was broke.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const root = postcss.parse('a { color: black; z-index: 1 }')[0m
[32m+     * const rule = root.first[0m
[32m+     *[0m
[32m+     * for (const decl of rule.nodes) {[0m
[32m+     *   decl.cloneBefore({ prop: '-webkit-' + decl.prop })[0m
[32m+     *   // Cycle will be infinite, because cloneBefore moves the current node[0m
[32m+     *   // to the next index[0m
[32m+     * }[0m
[32m+     *[0m
[32m+     * rule.each(decl => {[0m
[32m+     *   decl.cloneBefore({ prop: '-webkit-' + decl.prop })[0m
[32m+     *   // Will be executed only for color and z-index[0m
[32m+     * })[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-  _proto.each = function each(callback) {[0m
[31m-    if (!this.lastEach) this.lastEach = 0;[0m
[31m-    if (!this.indexes) this.indexes = {};[0m
[31m-    this.lastEach += 1;[0m
[31m-    var id = this.lastEach;[0m
[31m-    this.indexes[id] = 0;[0m
[31m-    if (!this.nodes) return undefined;[0m
[31m-    var index, result;[0m
[32m+    _proto.each = function each(callback)[0m
[32m+    {[0m
[32m+        if (!this.lastEach) { this.lastEach = 0;[0m
[32m+        }[0m
[32m+        if (!this.indexes) { this.indexes = {};[0m
[32m+        }[0m
[32m+        this.lastEach += 1;[0m
[32m+        var id = this.lastEach;[0m
[32m+        this.indexes[id] = 0;[0m
[32m+        if (!this.nodes) { return undefined;[0m
[32m+        }[0m
[32m+        var index, result;[0m
 
[31m-    while (this.indexes[id] < this.nodes.length) {[0m
[31m-      index = this.indexes[id];[0m
[31m-      result = callback(this.nodes[index], index);[0m
[31m-      if (result === false) break;[0m
[31m-      this.indexes[id] += 1;[0m
[32m+        while (this.indexes[id] < this.nodes.length) {[0m
[32m+            index = this.indexes[id];[0m
[32m+            result = callback(this.nodes[index], index);[0m
[32m+            if (result === false) { break;[0m
[32m+            }[0m
[32m+            this.indexes[id] += 1;[0m
[32m+        }[0m
[32m+[0m
[32m+        delete this.indexes[id];[0m
[32m+        return result;[0m
     }
[32m+    /**[0m
[32m+     * Traverses the container’s descendant nodes, calling callback[0m
[32m+     * for each node.[0m
[32m+     *[0m
[32m+     * Like container.each(), this method is safe to use[0m
[32m+     * if you are mutating arrays during iteration.[0m
[32m+     *[0m
[32m+     * If you only need to iterate through the container’s immediate children,[0m
[32m+     * use {@link Container#each}.[0m
[32m+     *[0m
[32m+     * @param {childIterator} callback Iterator receives each node and index.[0m
[32m+     *[0m
[32m+     * @return {false|undefined} Returns `false` if iteration was broke.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * root.walk(node => {[0m
[32m+     *   // Traverses all descendant nodes.[0m
[32m+     * })[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    delete this.indexes[id];[0m
[31m-    return result;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Traverses the container’s descendant nodes, calling callback[0m
[31m-   * for each node.[0m
[31m-   *[0m
[31m-   * Like container.each(), this method is safe to use[0m
[31m-   * if you are mutating arrays during iteration.[0m
[31m-   *[0m
[31m-   * If you only need to iterate through the container’s immediate children,[0m
[31m-   * use {@link Container#each}.[0m
[31m-   *[0m
[31m-   * @param {childIterator} callback Iterator receives each node and index.[0m
[31m-   *[0m
[31m-   * @return {false|undefined} Returns `false` if iteration was broke.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * root.walk(node => {[0m
[31m-   *   // Traverses all descendant nodes.[0m
[31m-   * })[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.walk = function walk(callback)[0m
[32m+    {[0m
[32m+        return this.each([0m
[32m+            function (child, i) {[0m
[32m+                var result;[0m
 
[31m-  _proto.walk = function walk(callback) {[0m
[31m-    return this.each(function (child, i) {[0m
[31m-      var result;[0m
[32m+                try {[0m
[32m+                    result = callback(child, i);[0m
[32m+                } catch (e) {[0m
[32m+                    e.postcssNode = child;[0m
 
[31m-      try {[0m
[31m-        result = callback(child, i);[0m
[31m-      } catch (e) {[0m
[31m-        e.postcssNode = child;[0m
[32m+                    if (e.stack && child.source && /\n\s{4}at /.test(e.stack)) {[0m
[32m+                        var s = child.source;[0m
[32m+                        e.stack = e.stack.replace(/\n\s{4}at /, "$&" + s.input.from + ":" + s.start.line + ":" + s.start.column + "$&");[0m
[32m+                    }[0m
 
[31m-        if (e.stack && child.source && /\n\s{4}at /.test(e.stack)) {[0m
[31m-          var s = child.source;[0m
[31m-          e.stack = e.stack.replace(/\n\s{4}at /, "$&" + s.input.from + ":" + s.start.line + ":" + s.start.column + "$&");[0m
[31m-        }[0m
[32m+                    throw e;[0m
[32m+                }[0m
 
[31m-        throw e;[0m
[31m-      }[0m
[32m+                if (result !== false && child.walk) {[0m
[32m+                    result = child.walk(callback);[0m
[32m+                }[0m
 
[31m-      if (result !== false && child.walk) {[0m
[31m-        result = child.walk(callback);[0m
[31m-      }[0m
[32m+                return result;[0m
[32m+            }[0m
[32m+        );[0m
[32m+    }[0m
[32m+    /**[0m
[32m+     * Traverses the container’s descendant nodes, calling callback[0m
[32m+     * for each declaration node.[0m
[32m+     *[0m
[32m+     * If you pass a filter, iteration will only happen over declarations[0m
[32m+     * with matching properties.[0m
[32m+     *[0m
[32m+     * Like {@link Container#each}, this method is safe[0m
[32m+     * to use if you are mutating arrays during iteration.[0m
[32m+     *[0m
[32m+     * @param {string|RegExp} [prop]   String or regular expression[0m
[32m+     *                                 to filter declarations by property name.[0m
[32m+     * @param {childIterator} callback Iterator receives each node and index.[0m
[32m+     *[0m
[32m+     * @return {false|undefined} Returns `false` if iteration was broke.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * root.walkDecls(decl => {[0m
[32m+     *   checkPropertySupport(decl.prop)[0m
[32m+     * })[0m
[32m+     *[0m
[32m+     * root.walkDecls('border-radius', decl => {[0m
[32m+     *   decl.remove()[0m
[32m+     * })[0m
[32m+     *[0m
[32m+     * root.walkDecls(/^background/, decl => {[0m
[32m+     *   decl.value = takeFirstColorFromGradient(decl.value)[0m
[32m+     * })[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-      return result;[0m
[31m-    });[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Traverses the container’s descendant nodes, calling callback[0m
[31m-   * for each declaration node.[0m
[31m-   *[0m
[31m-   * If you pass a filter, iteration will only happen over declarations[0m
[31m-   * with matching properties.[0m
[31m-   *[0m
[31m-   * Like {@link Container#each}, this method is safe[0m
[31m-   * to use if you are mutating arrays during iteration.[0m
[31m-   *[0m
[31m-   * @param {string|RegExp} [prop]   String or regular expression[0m
[31m-   *                                 to filter declarations by property name.[0m
[31m-   * @param {childIterator} callback Iterator receives each node and index.[0m
[31m-   *[0m
[31m-   * @return {false|undefined} Returns `false` if iteration was broke.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * root.walkDecls(decl => {[0m
[31m-   *   checkPropertySupport(decl.prop)[0m
[31m-   * })[0m
[31m-   *[0m
[31m-   * root.walkDecls('border-radius', decl => {[0m
[31m-   *   decl.remove()[0m
[31m-   * })[0m
[31m-   *[0m
[31m-   * root.walkDecls(/^background/, decl => {[0m
[31m-   *   decl.value = takeFirstColorFromGradient(decl.value)[0m
[31m-   * })[0m
[31m-   */[0m
[31m-  ;[0m
[31m-[0m
[31m-  _proto.walkDecls = function walkDecls(prop, callback) {[0m
[31m-    if (!callback) {[0m
[31m-      callback = prop;[0m
[31m-      return this.walk(function (child, i) {[0m
[31m-        if (child.type === 'decl') {[0m
[31m-          return callback(child, i);[0m
[32m+    _proto.walkDecls = function walkDecls(prop, callback)[0m
[32m+    {[0m
[32m+        if (!callback) {[0m
[32m+            callback = prop;[0m
[32m+            return this.walk([0m
[32m+                function (child, i) {[0m
[32m+                    if (child.type === 'decl') {[0m
[32m+                        return callback(child, i);[0m
[32m+                    }[0m
[32m+                }[0m
[32m+            );[0m
         }
[31m-      });[0m
[31m-    }[0m
 
[31m-    if (prop instanceof RegExp) {[0m
[31m-      return this.walk(function (child, i) {[0m
[31m-        if (child.type === 'decl' && prop.test(child.prop)) {[0m
[31m-          return callback(child, i);[0m
[32m+        if (prop instanceof RegExp) {[0m
[32m+            return this.walk([0m
[32m+                function (child, i) {[0m
[32m+                    if (child.type === 'decl' && prop.test(child.prop)) {[0m
[32m+                        return callback(child, i);[0m
[32m+                    }[0m
[32m+                }[0m
[32m+            );[0m
         }
[31m-      });[0m
[32m+[0m
[32m+        return this.walk([0m
[32m+            function (child, i) {[0m
[32m+                if (child.type === 'decl' && child.prop === prop) {[0m
[32m+                    return callback(child, i);[0m
[32m+                }[0m
[32m+            }[0m
[32m+        );[0m
     }
[32m+    /**[0m
[32m+     * Traverses the container’s descendant nodes, calling callback[0m
[32m+     * for each rule node.[0m
[32m+     *[0m
[32m+     * If you pass a filter, iteration will only happen over rules[0m
[32m+     * with matching selectors.[0m
[32m+     *[0m
[32m+     * Like {@link Container#each}, this method is safe[0m
[32m+     * to use if you are mutating arrays during iteration.[0m
[32m+     *[0m
[32m+     * @param {string|RegExp} [selector] String or regular expression[0m
[32m+     *                                   to filter rules by selector.[0m
[32m+     * @param {childIterator} callback   Iterator receives each node and index.[0m
[32m+     *[0m
[32m+     * @return {false|undefined} returns `false` if iteration was broke.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const selectors = [][0m
[32m+     * root.walkRules(rule => {[0m
[32m+     *   selectors.push(rule.selector)[0m
[32m+     * })[0m
[32m+     * console.log(`Your CSS uses ${ selectors.length } selectors`)[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    return this.walk(function (child, i) {[0m
[31m-      if (child.type === 'decl' && child.prop === prop) {[0m
[31m-        return callback(child, i);[0m
[31m-      }[0m
[31m-    });[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Traverses the container’s descendant nodes, calling callback[0m
[31m-   * for each rule node.[0m
[31m-   *[0m
[31m-   * If you pass a filter, iteration will only happen over rules[0m
[31m-   * with matching selectors.[0m
[31m-   *[0m
[31m-   * Like {@link Container#each}, this method is safe[0m
[31m-   * to use if you are mutating arrays during iteration.[0m
[31m-   *[0m
[31m-   * @param {string|RegExp} [selector] String or regular expression[0m
[31m-   *                                   to filter rules by selector.[0m
[31m-   * @param {childIterator} callback   Iterator receives each node and index.[0m
[31m-   *[0m
[31m-   * @return {false|undefined} returns `false` if iteration was broke.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const selectors = [][0m
[31m-   * root.walkRules(rule => {[0m
[31m-   *   selectors.push(rule.selector)[0m
[31m-   * })[0m
[31m-   * console.log(`Your CSS uses ${ selectors.length } selectors`)[0m
[31m-   */[0m
[31m-  ;[0m
[31m-[0m
[31m-  _proto.walkRules = function walkRules(selector, callback) {[0m
[31m-    if (!callback) {[0m
[31m-      callback = selector;[0m
[31m-      return this.walk(function (child, i) {[0m
[31m-        if (child.type === 'rule') {[0m
[31m-          return callback(child, i);[0m
[32m+    _proto.walkRules = function walkRules(selector, callback)[0m
[32m+    {[0m
[32m+        if (!callback) {[0m
[32m+            callback = selector;[0m
[32m+            return this.walk([0m
[32m+                function (child, i) {[0m
[32m+                    if (child.type === 'rule') {[0m
[32m+                        return callback(child, i);[0m
[32m+                    }[0m
[32m+                }[0m
[32m+            );[0m
         }
[31m-      });[0m
[31m-    }[0m
 
[31m-    if (selector instanceof RegExp) {[0m
[31m-      return this.walk(function (child, i) {[0m
[31m-        if (child.type === 'rule' && selector.test(child.selector)) {[0m
[31m-          return callback(child, i);[0m
[32m+        if (selector instanceof RegExp) {[0m
[32m+            return this.walk([0m
[32m+                function (child, i) {[0m
[32m+                    if (child.type === 'rule' && selector.test(child.selector)) {[0m
[32m+                        return callback(child, i);[0m
[32m+                    }[0m
[32m+                }[0m
[32m+            );[0m
         }
[31m-      });[0m
[32m+[0m
[32m+        return this.walk([0m
[32m+            function (child, i) {[0m
[32m+                if (child.type === 'rule' && child.selector === selector) {[0m
[32m+                    return callback(child, i);[0m
[32m+                }[0m
[32m+            }[0m
[32m+        );[0m
     }
[32m+    /**[0m
[32m+     * Traverses the container’s descendant nodes, calling callback[0m
[32m+     * for each at-rule node.[0m
[32m+     *[0m
[32m+     * If you pass a filter, iteration will only happen over at-rules[0m
[32m+     * that have matching names.[0m
[32m+     *[0m
[32m+     * Like {@link Container#each}, this method is safe[0m
[32m+     * to use if you are mutating arrays during iteration.[0m
[32m+     *[0m
[32m+     * @param {string|RegExp} [name]   String or regular expression[0m
[32m+     *                                 to filter at-rules by name.[0m
[32m+     * @param {childIterator} callback Iterator receives each node and index.[0m
[32m+     *[0m
[32m+     * @return {false|undefined} Returns `false` if iteration was broke.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * root.walkAtRules(rule => {[0m
[32m+     *   if (isOld(rule.name)) rule.remove()[0m
[32m+     * })[0m
[32m+     *[0m
[32m+     * let first = false[0m
[32m+     * root.walkAtRules('charset', rule => {[0m
[32m+     *   if (!first) {[0m
[32m+     *     first = true[0m
[32m+     *   } else {[0m
[32m+     *     rule.remove()[0m
[32m+     *   }[0m
[32m+     * })[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    return this.walk(function (child, i) {[0m
[31m-      if (child.type === 'rule' && child.selector === selector) {[0m
[31m-        return callback(child, i);[0m
[31m-      }[0m
[31m-    });[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Traverses the container’s descendant nodes, calling callback[0m
[31m-   * for each at-rule node.[0m
[31m-   *[0m
[31m-   * If you pass a filter, iteration will only happen over at-rules[0m
[31m-   * that have matching names.[0m
[31m-   *[0m
[31m-   * Like {@link Container#each}, this method is safe[0m
[31m-   * to use if you are mutating arrays during iteration.[0m
[31m-   *[0m
[31m-   * @param {string|RegExp} [name]   String or regular expression[0m
[31m-   *                                 to filter at-rules by name.[0m
[31m-   * @param {childIterator} callback Iterator receives each node and index.[0m
[31m-   *[0m
[31m-   * @return {false|undefined} Returns `false` if iteration was broke.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * root.walkAtRules(rule => {[0m
[31m-   *   if (isOld(rule.name)) rule.remove()[0m
[31m-   * })[0m
[31m-   *[0m
[31m-   * let first = false[0m
[31m-   * root.walkAtRules('charset', rule => {[0m
[31m-   *   if (!first) {[0m
[31m-   *     first = true[0m
[31m-   *   } else {[0m
[31m-   *     rule.remove()[0m
[31m-   *   }[0m
[31m-   * })[0m
[31m-   */[0m
[31m-  ;[0m
[31m-[0m
[31m-  _proto.walkAtRules = function walkAtRules(name, callback) {[0m
[31m-    if (!callback) {[0m
[31m-      callback = name;[0m
[31m-      return this.walk(function (child, i) {[0m
[31m-        if (child.type === 'atrule') {[0m
[31m-          return callback(child, i);[0m
[32m+    _proto.walkAtRules = function walkAtRules(name, callback)[0m
[32m+    {[0m
[32m+        if (!callback) {[0m
[32m+            callback = name;[0m
[32m+            return this.walk([0m
[32m+                function (child, i) {[0m
[32m+                    if (child.type === 'atrule') {[0m
[32m+                        return callback(child, i);[0m
[32m+                    }[0m
[32m+                }[0m
[32m+            );[0m
         }
[31m-      });[0m
[31m-    }[0m
 
[31m-    if (name instanceof RegExp) {[0m
[31m-      return this.walk(function (child, i) {[0m
[31m-        if (child.type === 'atrule' && name.test(child.name)) {[0m
[31m-          return callback(child, i);[0m
[32m+        if (name instanceof RegExp) {[0m
[32m+            return this.walk([0m
[32m+                function (child, i) {[0m
[32m+                    if (child.type === 'atrule' && name.test(child.name)) {[0m
[32m+                        return callback(child, i);[0m
[32m+                    }[0m
[32m+                }[0m
[32m+            );[0m
         }
[31m-      });[0m
[32m+[0m
[32m+        return this.walk([0m
[32m+            function (child, i) {[0m
[32m+                if (child.type === 'atrule' && child.name === name) {[0m
[32m+                    return callback(child, i);[0m
[32m+                }[0m
[32m+            }[0m
[32m+        );[0m
     }
[32m+    /**[0m
[32m+     * Traverses the container’s descendant nodes, calling callback[0m
[32m+     * for each comment node.[0m
[32m+     *[0m
[32m+     * Like {@link Container#each}, this method is safe[0m
[32m+     * to use if you are mutating arrays during iteration.[0m
[32m+     *[0m
[32m+     * @param {childIterator} callback Iterator receives each node and index.[0m
[32m+     *[0m
[32m+     * @return {false|undefined} Returns `false` if iteration was broke.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * root.walkComments(comment => {[0m
[32m+     *   comment.remove()[0m
[32m+     * })[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    return this.walk(function (child, i) {[0m
[31m-      if (child.type === 'atrule' && child.name === name) {[0m
[31m-        return callback(child, i);[0m
[31m-      }[0m
[31m-    });[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Traverses the container’s descendant nodes, calling callback[0m
[31m-   * for each comment node.[0m
[31m-   *[0m
[31m-   * Like {@link Container#each}, this method is safe[0m
[31m-   * to use if you are mutating arrays during iteration.[0m
[31m-   *[0m
[31m-   * @param {childIterator} callback Iterator receives each node and index.[0m
[31m-   *[0m
[31m-   * @return {false|undefined} Returns `false` if iteration was broke.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * root.walkComments(comment => {[0m
[31m-   *   comment.remove()[0m
[31m-   * })[0m
[31m-   */[0m
[31m-  ;[0m
[31m-[0m
[31m-  _proto.walkComments = function walkComments(callback) {[0m
[31m-    return this.walk(function (child, i) {[0m
[31m-      if (child.type === 'comment') {[0m
[31m-        return callback(child, i);[0m
[31m-      }[0m
[31m-    });[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Inserts new nodes to the end of the container.[0m
[31m-   *[0m
[31m-   * @param {...(Node|object|string|Node[])} children New nodes.[0m
[31m-   *[0m
[31m-   * @return {Node} This node for methods chain.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const decl1 = postcss.decl({ prop: 'color', value: 'black' })[0m
[31m-   * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' })[0m
[31m-   * rule.append(decl1, decl2)[0m
[31m-   *[0m
[31m-   * root.append({ name: 'charset', params: '"UTF-8"' })  // at-rule[0m
[31m-   * root.append({ selector: 'a' })                       // rule[0m
[31m-   * rule.append({ prop: 'color', value: 'black' })       // declaration[0m
[31m-   * rule.append({ text: 'Comment' })                     // comment[0m
[31m-   *[0m
[31m-   * root.append('a {}')[0m
[31m-   * root.first.append('color: black; z-index: 1')[0m
[31m-   */[0m
[31m-  ;[0m
[31m-[0m
[31m-  _proto.append = function append() {[0m
[31m-    for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {[0m
[31m-      children[_key] = arguments[_key];[0m
[32m+    _proto.walkComments = function walkComments(callback)[0m
[32m+    {[0m
[32m+        return this.walk([0m
[32m+            function (child, i) {[0m
[32m+                if (child.type === 'comment') {[0m
[32m+                    return callback(child, i);[0m
[32m+                }[0m
[32m+            }[0m
[32m+        );[0m
     }
[32m+    /**[0m
[32m+     * Inserts new nodes to the end of the container.[0m
[32m+     *[0m
[32m+     * @param {...(Node|object|string|Node[])} children New nodes.[0m
[32m+     *[0m
[32m+     * @return {Node} This node for methods chain.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const decl1 = postcss.decl({ prop: 'color', value: 'black' })[0m
[32m+     * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' })[0m
[32m+     * rule.append(decl1, decl2)[0m
[32m+     *[0m
[32m+     * root.append({ name: 'charset', params: '"UTF-8"' })  // at-rule[0m
[32m+     * root.append({ selector: 'a' })                       // rule[0m
[32m+     * rule.append({ prop: 'color', value: 'black' })       // declaration[0m
[32m+     * rule.append({ text: 'Comment' })                     // comment[0m
[32m+     *[0m
[32m+     * root.append('a {}')[0m
[32m+     * root.first.append('color: black; z-index: 1')[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    for (var _i = 0, _children = children; _i < _children.length; _i++) {[0m
[31m-      var child = _children[_i];[0m
[31m-      var nodes = this.normalize(child, this.last);[0m
[32m+    _proto.append = function append()[0m
[32m+    {[0m
[32m+        for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {[0m
[32m+            children[_key] = arguments[_key];[0m
[32m+        }[0m
 
[31m-      for (var _iterator = _createForOfIteratorHelperLoose(nodes), _step; !(_step = _iterator()).done;) {[0m
[31m-        var node = _step.value;[0m
[31m-        this.nodes.push(node);[0m
[31m-      }[0m
[31m-    }[0m
[32m+        for (var _i = 0, _children = children; _i < _children.length; _i++) {[0m
[32m+            var child = _children[_i];[0m
[32m+            var nodes = this.normalize(child, this.last);[0m
 
[31m-    return this;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Inserts new nodes to the start of the container.[0m
[31m-   *[0m
[31m-   * @param {...(Node|object|string|Node[])} children New nodes.[0m
[31m-   *[0m
[31m-   * @return {Node} This node for methods chain.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const decl1 = postcss.decl({ prop: 'color', value: 'black' })[0m
[31m-   * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' })[0m
[31m-   * rule.prepend(decl1, decl2)[0m
[31m-   *[0m
[31m-   * root.append({ name: 'charset', params: '"UTF-8"' })  // at-rule[0m
[31m-   * root.append({ selector: 'a' })                       // rule[0m
[31m-   * rule.append({ prop: 'color', value: 'black' })       // declaration[0m
[31m-   * rule.append({ text: 'Comment' })                     // comment[0m
[31m-   *[0m
[31m-   * root.append('a {}')[0m
[31m-   * root.first.append('color: black; z-index: 1')[0m
[31m-   */[0m
[31m-  ;[0m
[32m+            for (var _iterator = _createForOfIteratorHelperLoose(nodes), _step; !(_step = _iterator()).done;) {[0m
[32m+                var node = _step.value;[0m
[32m+                this.nodes.push(node);[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-  _proto.prepend = function prepend() {[0m
[31m-    for (var _len2 = arguments.length, children = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {[0m
[31m-      children[_key2] = arguments[_key2];[0m
[32m+        return this;[0m
     }
[32m+    /**[0m
[32m+     * Inserts new nodes to the start of the container.[0m
[32m+     *[0m
[32m+     * @param {...(Node|object|string|Node[])} children New nodes.[0m
[32m+     *[0m
[32m+     * @return {Node} This node for methods chain.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const decl1 = postcss.decl({ prop: 'color', value: 'black' })[0m
[32m+     * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' })[0m
[32m+     * rule.prepend(decl1, decl2)[0m
[32m+     *[0m
[32m+     * root.append({ name: 'charset', params: '"UTF-8"' })  // at-rule[0m
[32m+     * root.append({ selector: 'a' })                       // rule[0m
[32m+     * rule.append({ prop: 'color', value: 'black' })       // declaration[0m
[32m+     * rule.append({ text: 'Comment' })                     // comment[0m
[32m+     *[0m
[32m+     * root.append('a {}')[0m
[32m+     * root.first.append('color: black; z-index: 1')[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    children = children.reverse();[0m
[32m+    _proto.prepend = function prepend()[0m
[32m+    {[0m
[32m+        for (var _len2 = arguments.length, children = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {[0m
[32m+            children[_key2] = arguments[_key2];[0m
[32m+        }[0m
 
[31m-    for (var _iterator2 = _createForOfIteratorHelperLoose(children), _step2; !(_step2 = _iterator2()).done;) {[0m
[31m-      var child = _step2.value;[0m
[31m-      var nodes = this.normalize(child, this.first, 'prepend').reverse();[0m
[32m+        children = children.reverse();[0m
 
[31m-      for (var _iterator3 = _createForOfIteratorHelperLoose(nodes), _step3; !(_step3 = _iterator3()).done;) {[0m
[31m-        var node = _step3.value;[0m
[31m-        this.nodes.unshift(node);[0m
[31m-      }[0m
[32m+        for (var _iterator2 = _createForOfIteratorHelperLoose(children), _step2; !(_step2 = _iterator2()).done;) {[0m
[32m+            var child = _step2.value;[0m
[32m+            var nodes = this.normalize(child, this.first, 'prepend').reverse();[0m
 
[31m-      for (var id in this.indexes) {[0m
[31m-        this.indexes[id] = this.indexes[id] + nodes.length;[0m
[31m-      }[0m
[31m-    }[0m
[32m+            for (var _iterator3 = _createForOfIteratorHelperLoose(nodes), _step3; !(_step3 = _iterator3()).done;) {[0m
[32m+                var node = _step3.value;[0m
[32m+                this.nodes.unshift(node);[0m
[32m+            }[0m
 
[31m-    return this;[0m
[31m-  };[0m
[32m+            for (var id in this.indexes) {[0m
[32m+                this.indexes[id] = this.indexes[id] + nodes.length;[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-  _proto.cleanRaws = function cleanRaws(keepBetween) {[0m
[31m-    _Node.prototype.cleanRaws.call(this, keepBetween);[0m
[32m+        return this;[0m
[32m+    };[0m
 
[31m-    if (this.nodes) {[0m
[31m-      for (var _iterator4 = _createForOfIteratorHelperLoose(this.nodes), _step4; !(_step4 = _iterator4()).done;) {[0m
[31m-        var node = _step4.value;[0m
[31m-        node.cleanRaws(keepBetween);[0m
[31m-      }[0m
[32m+    _proto.cleanRaws = function cleanRaws(keepBetween)[0m
[32m+    {[0m
[32m+        _Node.prototype.cleanRaws.call(this, keepBetween);[0m
[32m+[0m
[32m+        if (this.nodes) {[0m
[32m+            for (var _iterator4 = _createForOfIteratorHelperLoose(this.nodes), _step4; !(_step4 = _iterator4()).done;) {[0m
[32m+                var node = _step4.value;[0m
[32m+                node.cleanRaws(keepBetween);[0m
[32m+            }[0m
[32m+        }[0m
     }
[31m-  }[0m
[31m-  /**[0m
[31m-   * Insert new node before old node within the container.[0m
[31m-   *[0m
[31m-   * @param {Node|number} exist             Child or child’s index.[0m
[31m-   * @param {Node|object|string|Node[]} add New node.[0m
[31m-   *[0m
[31m-   * @return {Node} This node for methods chain.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * rule.insertBefore(decl, decl.clone({ prop: '-webkit-' + decl.prop }))[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    /**[0m
[32m+     * Insert new node before old node within the container.[0m
[32m+     *[0m
[32m+     * @param {Node|number} exist             Child or child’s index.[0m
[32m+     * @param {Node|object|string|Node[]} add New node.[0m
[32m+     *[0m
[32m+     * @return {Node} This node for methods chain.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * rule.insertBefore(decl, decl.clone({ prop: '-webkit-' + decl.prop }))[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-  _proto.insertBefore = function insertBefore(exist, add) {[0m
[31m-    exist = this.index(exist);[0m
[31m-    var type = exist === 0 ? 'prepend' : false;[0m
[31m-    var nodes = this.normalize(add, this.nodes[exist], type).reverse();[0m
[32m+    _proto.insertBefore = function insertBefore(exist, add)[0m
[32m+    {[0m
[32m+        exist = this.index(exist);[0m
[32m+        var type = exist === 0 ? 'prepend' : false;[0m
[32m+        var nodes = this.normalize(add, this.nodes[exist], type).reverse();[0m
 
[31m-    for (var _iterator5 = _createForOfIteratorHelperLoose(nodes), _step5; !(_step5 = _iterator5()).done;) {[0m
[31m-      var node = _step5.value;[0m
[31m-      this.nodes.splice(exist, 0, node);[0m
[31m-    }[0m
[32m+        for (var _iterator5 = _createForOfIteratorHelperLoose(nodes), _step5; !(_step5 = _iterator5()).done;) {[0m
[32m+            var node = _step5.value;[0m
[32m+            this.nodes.splice(exist, 0, node);[0m
[32m+        }[0m
 
[31m-    var index;[0m
[32m+        var index;[0m
 
[31m-    for (var id in this.indexes) {[0m
[31m-      index = this.indexes[id];[0m
[32m+        for (var id in this.indexes) {[0m
[32m+            index = this.indexes[id];[0m
 
[31m-      if (exist <= index) {[0m
[31m-        this.indexes[id] = index + nodes.length;[0m
[31m-      }[0m
[32m+            if (exist <= index) {[0m
[32m+                this.indexes[id] = index + nodes.length;[0m
[32m+            }[0m
[32m+        }[0m
[32m+[0m
[32m+        return this;[0m
     }
[32m+    /**[0m
[32m+     * Insert new node after old node within the container.[0m
[32m+     *[0m
[32m+     * @param {Node|number} exist             Child or child’s index.[0m
[32m+     * @param {Node|object|string|Node[]} add New node.[0m
[32m+     *[0m
[32m+     * @return {Node} This node for methods chain.[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    return this;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Insert new node after old node within the container.[0m
[31m-   *[0m
[31m-   * @param {Node|number} exist             Child or child’s index.[0m
[31m-   * @param {Node|object|string|Node[]} add New node.[0m
[31m-   *[0m
[31m-   * @return {Node} This node for methods chain.[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.insertAfter = function insertAfter(exist, add)[0m
[32m+    {[0m
[32m+        exist = this.index(exist);[0m
[32m+        var nodes = this.normalize(add, this.nodes[exist]).reverse();[0m
 
[31m-  _proto.insertAfter = function insertAfter(exist, add) {[0m
[31m-    exist = this.index(exist);[0m
[31m-    var nodes = this.normalize(add, this.nodes[exist]).reverse();[0m
[32m+        for (var _iterator6 = _createForOfIteratorHelperLoose(nodes), _step6; !(_step6 = _iterator6()).done;) {[0m
[32m+            var node = _step6.value;[0m
[32m+            this.nodes.splice(exist + 1, 0, node);[0m
[32m+        }[0m
 
[31m-    for (var _iterator6 = _createForOfIteratorHelperLoose(nodes), _step6; !(_step6 = _iterator6()).done;) {[0m
[31m-      var node = _step6.value;[0m
[31m-      this.nodes.splice(exist + 1, 0, node);[0m
[31m-    }[0m
[32m+        var index;[0m
 
[31m-    var index;[0m
[32m+        for (var id in this.indexes) {[0m
[32m+            index = this.indexes[id];[0m
 
[31m-    for (var id in this.indexes) {[0m
[31m-      index = this.indexes[id];[0m
[32m+            if (exist < index) {[0m
[32m+                this.indexes[id] = index + nodes.length;[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-      if (exist < index) {[0m
[31m-        this.indexes[id] = index + nodes.length;[0m
[31m-      }[0m
[32m+        return this;[0m
     }
[32m+    /**[0m
[32m+     * Removes node from the container and cleans the parent properties[0m
[32m+     * from the node and its children.[0m
[32m+     *[0m
[32m+     * @param {Node|number} child Child or child’s index.[0m
[32m+     *[0m
[32m+     * @return {Node} This node for methods chain[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * rule.nodes.length  //=> 5[0m
[32m+     * rule.removeChild(decl)[0m
[32m+     * rule.nodes.length  //=> 4[0m
[32m+     * decl.parent        //=> undefined[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    return this;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Removes node from the container and cleans the parent properties[0m
[31m-   * from the node and its children.[0m
[31m-   *[0m
[31m-   * @param {Node|number} child Child or child’s index.[0m
[31m-   *[0m
[31m-   * @return {Node} This node for methods chain[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * rule.nodes.length  //=> 5[0m
[31m-   * rule.removeChild(decl)[0m
[31m-   * rule.nodes.length  //=> 4[0m
[31m-   * decl.parent        //=> undefined[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.removeChild = function removeChild(child)[0m
[32m+    {[0m
[32m+        child = this.index(child);[0m
[32m+        this.nodes[child].parent = undefined;[0m
[32m+        this.nodes.splice(child, 1);[0m
[32m+        var index;[0m
 
[31m-  _proto.removeChild = function removeChild(child) {[0m
[31m-    child = this.index(child);[0m
[31m-    this.nodes[child].parent = undefined;[0m
[31m-    this.nodes.splice(child, 1);[0m
[31m-    var index;[0m
[32m+        for (var id in this.indexes) {[0m
[32m+            index = this.indexes[id];[0m
 
[31m-    for (var id in this.indexes) {[0m
[31m-      index = this.indexes[id];[0m
[32m+            if (index >= child) {[0m
[32m+                this.indexes[id] = index - 1;[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-      if (index >= child) {[0m
[31m-        this.indexes[id] = index - 1;[0m
[31m-      }[0m
[32m+        return this;[0m
     }
[32m+    /**[0m
[32m+     * Removes all children from the container[0m
[32m+     * and cleans their parent properties.[0m
[32m+     *[0m
[32m+     * @return {Node} This node for methods chain.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * rule.removeAll()[0m
[32m+     * rule.nodes.length //=> 0[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    return this;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Removes all children from the container[0m
[31m-   * and cleans their parent properties.[0m
[31m-   *[0m
[31m-   * @return {Node} This node for methods chain.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * rule.removeAll()[0m
[31m-   * rule.nodes.length //=> 0[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.removeAll = function removeAll()[0m
[32m+    {[0m
[32m+        for (var _iterator7 = _createForOfIteratorHelperLoose(this.nodes), _step7; !(_step7 = _iterator7()).done;) {[0m
[32m+            var node = _step7.value;[0m
[32m+            node.parent = undefined;[0m
[32m+        }[0m
 
[31m-  _proto.removeAll = function removeAll() {[0m
[31m-    for (var _iterator7 = _createForOfIteratorHelperLoose(this.nodes), _step7; !(_step7 = _iterator7()).done;) {[0m
[31m-      var node = _step7.value;[0m
[31m-      node.parent = undefined;[0m
[32m+        this.nodes = [];[0m
[32m+        return this;[0m
     }
[32m+    /**[0m
[32m+     * Passes all declaration values within the container that match pattern[0m
[32m+     * through callback, replacing those values with the returned result[0m
[32m+     * of callback.[0m
[32m+     *[0m
[32m+     * This method is useful if you are using a custom unit or function[0m
[32m+     * and need to iterate through all values.[0m
[32m+     *[0m
[32m+     * @param {string|RegExp} pattern      Replace pattern.[0m
[32m+     * @param {object} opts                Options to speed up the search.[0m
[32m+     * @param {string|string[]} opts.props An array of property names.[0m
[32m+     * @param {string} opts.fast           String that’s used to narrow down[0m
[32m+     *                                     values and speed up the regexp search.[0m
[32m+     * @param {function|string} callback   String to replace pattern or callback[0m
[32m+     *                                     that returns a new value. The callback[0m
[32m+     *                                     will receive the same arguments[0m
[32m+     *                                     as those passed to a function parameter[0m
[32m+     *                                     of `String#replace`.[0m
[32m+     *[0m
[32m+     * @return {Node} This node for methods chain.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * root.replaceValues(/\d+rem/, { fast: 'rem' }, string => {[0m
[32m+     *   return 15 * parseInt(string) + 'px'[0m
[32m+     * })[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    this.nodes = [];[0m
[31m-    return this;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Passes all declaration values within the container that match pattern[0m
[31m-   * through callback, replacing those values with the returned result[0m
[31m-   * of callback.[0m
[31m-   *[0m
[31m-   * This method is useful if you are using a custom unit or function[0m
[31m-   * and need to iterate through all values.[0m
[31m-   *[0m
[31m-   * @param {string|RegExp} pattern      Replace pattern.[0m
[31m-   * @param {object} opts                Options to speed up the search.[0m
[31m-   * @param {string|string[]} opts.props An array of property names.[0m
[31m-   * @param {string} opts.fast           String that’s used to narrow down[0m
[31m-   *                                     values and speed up the regexp search.[0m
[31m-   * @param {function|string} callback   String to replace pattern or callback[0m
[31m-   *                                     that returns a new value. The callback[0m
[31m-   *                                     will receive the same arguments[0m
[31m-   *                                     as those passed to a function parameter[0m
[31m-   *                                     of `String#replace`.[0m
[31m-   *[0m
[31m-   * @return {Node} This node for methods chain.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * root.replaceValues(/\d+rem/, { fast: 'rem' }, string => {[0m
[31m-   *   return 15 * parseInt(string) + 'px'[0m
[31m-   * })[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.replaceValues = function replaceValues(pattern, opts, callback)[0m
[32m+    {[0m
[32m+        if (!callback) {[0m
[32m+            callback = opts;[0m
[32m+            opts = {};[0m
[32m+        }[0m
 
[31m-  _proto.replaceValues = function replaceValues(pattern, opts, callback) {[0m
[31m-    if (!callback) {[0m
[31m-      callback = opts;[0m
[31m-      opts = {};[0m
[32m+        this.walkDecls([0m
[32m+            function (decl) {[0m
[32m+                if (opts.props && opts.props.indexOf(decl.prop) === -1) { return;[0m
[32m+                }[0m
[32m+                if (opts.fast && decl.value.indexOf(opts.fast) === -1) { return;[0m
[32m+                }[0m
[32m+                decl.value = decl.value.replace(pattern, callback);[0m
[32m+            }[0m
[32m+        );[0m
[32m+        return this;[0m
     }
[32m+    /**[0m
[32m+     * Returns `true` if callback returns `true`[0m
[32m+     * for all of the container’s children.[0m
[32m+     *[0m
[32m+     * @param {childCondition} condition Iterator returns true or false.[0m
[32m+     *[0m
[32m+     * @return {boolean} Is every child pass condition.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const noPrefixes = rule.every(i => i.prop[0] !== '-')[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    this.walkDecls(function (decl) {[0m
[31m-      if (opts.props && opts.props.indexOf(decl.prop) === -1) return;[0m
[31m-      if (opts.fast && decl.value.indexOf(opts.fast) === -1) return;[0m
[31m-      decl.value = decl.value.replace(pattern, callback);[0m
[31m-    });[0m
[31m-    return this;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Returns `true` if callback returns `true`[0m
[31m-   * for all of the container’s children.[0m
[31m-   *[0m
[31m-   * @param {childCondition} condition Iterator returns true or false.[0m
[31m-   *[0m
[31m-   * @return {boolean} Is every child pass condition.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const noPrefixes = rule.every(i => i.prop[0] !== '-')[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.every = function every(condition)[0m
[32m+    {[0m
[32m+        return this.nodes.every(condition);[0m
[32m+    }[0m
[32m+    /**[0m
[32m+     * Returns `true` if callback returns `true` for (at least) one[0m
[32m+     * of the container’s children.[0m
[32m+     *[0m
[32m+     * @param {childCondition} condition Iterator returns true or false.[0m
[32m+     *[0m
[32m+     * @return {boolean} Is some child pass condition.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const hasPrefix = rule.some(i => i.prop[0] === '-')[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-  _proto.every = function every(condition) {[0m
[31m-    return this.nodes.every(condition);[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Returns `true` if callback returns `true` for (at least) one[0m
[31m-   * of the container’s children.[0m
[31m-   *[0m
[31m-   * @param {childCondition} condition Iterator returns true or false.[0m
[31m-   *[0m
[31m-   * @return {boolean} Is some child pass condition.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const hasPrefix = rule.some(i => i.prop[0] === '-')[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.some = function some(condition)[0m
[32m+    {[0m
[32m+        return this.nodes.some(condition);[0m
[32m+    }[0m
[32m+    /**[0m
[32m+     * Returns a `child`’s index within the {@link Container#nodes} array.[0m
[32m+     *[0m
[32m+     * @param {Node} child Child of the current container.[0m
[32m+     *[0m
[32m+     * @return {number} Child index.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * rule.index( rule.nodes[2] ) //=> 2[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-  _proto.some = function some(condition) {[0m
[31m-    return this.nodes.some(condition);[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Returns a `child`’s index within the {@link Container#nodes} array.[0m
[31m-   *[0m
[31m-   * @param {Node} child Child of the current container.[0m
[31m-   *[0m
[31m-   * @return {number} Child index.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * rule.index( rule.nodes[2] ) //=> 2[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.index = function index(child)[0m
[32m+    {[0m
[32m+        if (typeof child === 'number') {[0m
[32m+            return child;[0m
[32m+        }[0m
 
[31m-  _proto.index = function index(child) {[0m
[31m-    if (typeof child === 'number') {[0m
[31m-      return child;[0m
[32m+        return this.nodes.indexOf(child);[0m
     }
[32m+    /**[0m
[32m+     * The container’s first child.[0m
[32m+     *[0m
[32m+     * @type {Node}[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * rule.first === rules.nodes[0][0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    return this.nodes.indexOf(child);[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * The container’s first child.[0m
[31m-   *[0m
[31m-   * @type {Node}[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * rule.first === rules.nodes[0][0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.normalize = function normalize(nodes, sample)[0m
[32m+    {[0m
[32m+        var _this = this;[0m
 
[31m-  _proto.normalize = function normalize(nodes, sample) {[0m
[31m-    var _this = this;[0m
[32m+        if (typeof nodes === 'string') {[0m
[32m+            var parse = require('./parse');[0m
 
[31m-    if (typeof nodes === 'string') {[0m
[31m-      var parse = require('./parse');[0m
[32m+            nodes = cleanSource(parse(nodes).nodes);[0m
[32m+        } else if (Array.isArray(nodes)) {[0m
[32m+            nodes = nodes.slice(0);[0m
 
[31m-      nodes = cleanSource(parse(nodes).nodes);[0m
[31m-    } else if (Array.isArray(nodes)) {[0m
[31m-      nodes = nodes.slice(0);[0m
[32m+            for (var _iterator8 = _createForOfIteratorHelperLoose(nodes), _step8; !(_step8 = _iterator8()).done;) {[0m
[32m+                var i = _step8.value;[0m
[32m+                if (i.parent) { i.parent.removeChild(i, 'ignore');[0m
[32m+                }[0m
[32m+            }[0m
[32m+        } else if (nodes.type === 'root') {[0m
[32m+            nodes = nodes.nodes.slice(0);[0m
 
[31m-      for (var _iterator8 = _createForOfIteratorHelperLoose(nodes), _step8; !(_step8 = _iterator8()).done;) {[0m
[31m-        var i = _step8.value;[0m
[31m-        if (i.parent) i.parent.removeChild(i, 'ignore');[0m
[31m-      }[0m
[31m-    } else if (nodes.type === 'root') {[0m
[31m-      nodes = nodes.nodes.slice(0);[0m
[32m+            for (var _iterator9 = _createForOfIteratorHelperLoose(nodes), _step9; !(_step9 = _iterator9()).done;) {[0m
[32m+                var _i2 = _step9.value;[0m
[32m+                if (_i2.parent) { _i2.parent.removeChild(_i2, 'ignore');[0m
[32m+                }[0m
[32m+            }[0m
[32m+        } else if (nodes.type) {[0m
[32m+            nodes = [nodes];[0m
[32m+        } else if (nodes.prop) {[0m
[32m+            if (typeof nodes.value === 'undefined') {[0m
[32m+                throw new Error('Value field is missed in node creation');[0m
[32m+            } else if (typeof nodes.value !== 'string') {[0m
[32m+                nodes.value = String(nodes.value);[0m
[32m+            }[0m
 
[31m-      for (var _iterator9 = _createForOfIteratorHelperLoose(nodes), _step9; !(_step9 = _iterator9()).done;) {[0m
[31m-        var _i2 = _step9.value;[0m
[31m-        if (_i2.parent) _i2.parent.removeChild(_i2, 'ignore');[0m
[31m-      }[0m
[31m-    } else if (nodes.type) {[0m
[31m-      nodes = [nodes];[0m
[31m-    } else if (nodes.prop) {[0m
[31m-      if (typeof nodes.value === 'undefined') {[0m
[31m-        throw new Error('Value field is missed in node creation');[0m
[31m-      } else if (typeof nodes.value !== 'string') {[0m
[31m-        nodes.value = String(nodes.value);[0m
[31m-      }[0m
[32m+            nodes = [new _declaration.default(nodes)];[0m
[32m+        } else if (nodes.selector) {[0m
[32m+            var Rule = require('./rule');[0m
 
[31m-      nodes = [new _declaration.default(nodes)];[0m
[31m-    } else if (nodes.selector) {[0m
[31m-      var Rule = require('./rule');[0m
[32m+            nodes = [new Rule(nodes)];[0m
[32m+        } else if (nodes.name) {[0m
[32m+            var AtRule = require('./at-rule');[0m
 
[31m-      nodes = [new Rule(nodes)];[0m
[31m-    } else if (nodes.name) {[0m
[31m-      var AtRule = require('./at-rule');[0m
[31m-[0m
[31m-      nodes = [new AtRule(nodes)];[0m
[31m-    } else if (nodes.text) {[0m
[31m-      nodes = [new _comment.default(nodes)];[0m
[31m-    } else {[0m
[31m-      throw new Error('Unknown node type in node creation');[0m
[31m-    }[0m
[31m-[0m
[31m-    var processed = nodes.map(function (i) {[0m
[31m-      if (i.parent) i.parent.removeChild(i);[0m
[31m-[0m
[31m-      if (typeof i.raws.before === 'undefined') {[0m
[31m-        if (sample && typeof sample.raws.before !== 'undefined') {[0m
[31m-          i.raws.before = sample.raws.before.replace(/[^\s]/g, '');[0m
[32m+            nodes = [new AtRule(nodes)];[0m
[32m+        } else if (nodes.text) {[0m
[32m+            nodes = [new _comment.default(nodes)];[0m
[32m+        } else {[0m
[32m+            throw new Error('Unknown node type in node creation');[0m
         }
[31m-      }[0m
 
[31m-      i.parent = _this;[0m
[31m-      return i;[0m
[31m-    });[0m
[31m-    return processed;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * @memberof Container#[0m
[31m-   * @member {Node[]} nodes An array containing the container’s children.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const root = postcss.parse('a { color: black }')[0m
[31m-   * root.nodes.length           //=> 1[0m
[31m-   * root.nodes[0].selector      //=> 'a'[0m
[31m-   * root.nodes[0].nodes[0].prop //=> 'color'[0m
[31m-   */[0m
[31m-  ;[0m
[32m+        var processed = nodes.map([0m
[32m+            function (i) {[0m
[32m+                if (i.parent) { i.parent.removeChild(i);[0m
[32m+                }[0m
 
[31m-  _createClass(Container, [{[0m
[31m-    key: "first",[0m
[31m-    get: function get() {[0m
[31m-      if (!this.nodes) return undefined;[0m
[31m-      return this.nodes[0];[0m
[32m+                if (typeof i.raws.before === 'undefined') {[0m
[32m+                    if (sample && typeof sample.raws.before !== 'undefined') {[0m
[32m+                        i.raws.before = sample.raws.before.replace(/[^\s]/g, '');[0m
[32m+                    }[0m
[32m+                }[0m
[32m+[0m
[32m+                i.parent = _this;[0m
[32m+                return i;[0m
[32m+            }[0m
[32m+        );[0m
[32m+        return processed;[0m
     }
     /**
[31m-     * The container’s last child.[0m
[32m+     * @memberof Container#[0m
[32m+     * @member   {Node[]} nodes An array containing the container’s children.[0m
      *
[31m-     * @type {Node}[0m
[31m-     *[0m
      * @example
[31m-     * rule.last === rule.nodes[rule.nodes.length - 1][0m
[32m+     * const root = postcss.parse('a { color: black }')[0m
[32m+     * root.nodes.length           //=> 1[0m
[32m+     * root.nodes[0].selector      //=> 'a'[0m
[32m+     * root.nodes[0].nodes[0].prop //=> 'color'[0m
      */
[32m+    ;[0m
 
[31m-  }, {[0m
[31m-    key: "last",[0m
[31m-    get: function get() {[0m
[31m-      if (!this.nodes) return undefined;[0m
[31m-      return this.nodes[this.nodes.length - 1];[0m
[31m-    }[0m
[31m-  }]);[0m
[32m+    _createClass([0m
[32m+        Container, [{[0m
[32m+            key: "first",[0m
[32m+            get: function get()[0m
[32m+            {[0m
[32m+                if (!this.nodes) { return undefined;[0m
[32m+                }[0m
[32m+                return this.nodes[0];[0m
[32m+            }[0m
[32m+            /**[0m
[32m+             * The container’s last child.[0m
[32m+             *[0m
[32m+             * @type {Node}[0m
[32m+             *[0m
[32m+             * @example[0m
[32m+             * rule.last === rule.nodes[rule.nodes.length - 1][0m
[32m+             */[0m
 
[31m-  return Container;[0m
[32m+        }, {[0m
[32m+            key: "last",[0m
[32m+            get: function get()[0m
[32m+            {[0m
[32m+                if (!this.nodes) { return undefined;[0m
[32m+                }[0m
[32m+                return this.nodes[this.nodes.length - 1];[0m
[32m+            }[0m
[32m+        }][0m
[32m+    );[0m
[32m+[0m
[32m+    return Container;[0m
 }(_node.default);
 
 var _default = Container;
 /**
  * @callback childCondition
[31m- * @param {Node} node    Container child.[0m
[31m- * @param {number} index Child index.[0m
[31m- * @param {Node[]} nodes All container children.[0m
[31m- * @return {boolean}[0m
[32m+ * @param    {Node} node    Container child.[0m
[32m+ * @param    {number} index Child index.[0m
[32m+ * @param    {Node[]} nodes All container children.[0m
[32m+ * @return   {boolean}[0m
  */
 
 /**
  * @callback childIterator
[31m- * @param {Node} node    Container child.[0m
[31m- * @param {number} index Child index.[0m
[31m- * @return {false|undefined} Returning `false` will break iteration.[0m
[32m+ * @param    {Node} node    Container child.[0m
[32m+ * @param    {number} index Child index.[0m
[32m+ * @return   {false|undefined} Returning `false` will break iteration.[0m
  */
 
 exports.default = _default;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/lazy-result.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -13,20 +13,44 @@
 
 var _parse = _interopRequireDefault(require("./parse"));
 
[31m-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }[0m
[32m+function _interopRequireDefault(obj)[0m
[32m+{[0m
[32m+    return obj && obj.__esModule ? obj : { default: obj }; }[0m
 
[31m-function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }[0m
[32m+function _createForOfIteratorHelperLoose(o, allowArrayLike)[0m
[32m+{[0m
[32m+    var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) { o = it;[0m
[32m+    } var i = 0; return function () {[0m
[32m+        if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }[0m
 
[31m-function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }[0m
[32m+function _unsupportedIterableToArray(o, minLen)[0m
[32m+{[0m
[32m+    if (!o) { return;[0m
[32m+    } if (typeof o === "string") { return _arrayLikeToArray(o, minLen);[0m
[32m+    } var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) { n = o.constructor.name;[0m
[32m+    } if (n === "Map" || n === "Set") { return Array.from(o);[0m
[32m+    } if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) { return _arrayLikeToArray(o, minLen);[0m
[32m+    } }[0m
 
[31m-function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }[0m
[32m+function _arrayLikeToArray(arr, len)[0m
[32m+{[0m
[32m+    if (len == null || len > arr.length) { len = arr.length;[0m
[32m+    } for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }[0m
 
[31m-function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }[0m
[32m+function _defineProperties(target, props)[0m
[32m+{[0m
[32m+    for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) { descriptor.writable = true;[0m
[32m+    } Object.defineProperty(target, descriptor.key, descriptor); } }[0m
 
[31m-function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }[0m
[32m+function _createClass(Constructor, protoProps, staticProps)[0m
[32m+{[0m
[32m+    if (protoProps) { _defineProperties(Constructor.prototype, protoProps);[0m
[32m+    } if (staticProps) { _defineProperties(Constructor, staticProps);[0m
[32m+    } return Constructor; }[0m
 
[31m-function isPromise(obj) {[0m
[31m-  return typeof obj === 'object' && typeof obj.then === 'function';[0m
[32m+function isPromise(obj)[0m
[32m+{[0m
[32m+    return typeof obj === 'object' && typeof obj.then === 'function';[0m
 }
 /**
  * A Promise proxy for the result of PostCSS transformations.
@@ -39,397 +63,441 @@
 
 
 var LazyResult = /*#__PURE__*/function () {
[31m-  function LazyResult(processor, css, opts) {[0m
[31m-    this.stringified = false;[0m
[31m-    this.processed = false;[0m
[31m-    var root;[0m
[32m+    function LazyResult(processor, css, opts)[0m
[32m+    {[0m
[32m+        this.stringified = false;[0m
[32m+        this.processed = false;[0m
[32m+        var root;[0m
 
[31m-    if (typeof css === 'object' && css !== null && css.type === 'root') {[0m
[31m-      root = css;[0m
[31m-    } else if (css instanceof LazyResult || css instanceof _result.default) {[0m
[31m-      root = css.root;[0m
[32m+        if (typeof css === 'object' && css !== null && css.type === 'root') {[0m
[32m+            root = css;[0m
[32m+        } else if (css instanceof LazyResult || css instanceof _result.default) {[0m
[32m+            root = css.root;[0m
 
[31m-      if (css.map) {[0m
[31m-        if (typeof opts.map === 'undefined') opts.map = {};[0m
[31m-        if (!opts.map.inline) opts.map.inline = false;[0m
[31m-        opts.map.prev = css.map;[0m
[31m-      }[0m
[31m-    } else {[0m
[31m-      var parser = _parse.default;[0m
[31m-      if (opts.syntax) parser = opts.syntax.parse;[0m
[31m-      if (opts.parser) parser = opts.parser;[0m
[31m-      if (parser.parse) parser = parser.parse;[0m
[32m+            if (css.map) {[0m
[32m+                if (typeof opts.map === 'undefined') { opts.map = {};[0m
[32m+                }[0m
[32m+                if (!opts.map.inline) { opts.map.inline = false;[0m
[32m+                }[0m
[32m+                opts.map.prev = css.map;[0m
[32m+            }[0m
[32m+        } else {[0m
[32m+            var parser = _parse.default;[0m
[32m+            if (opts.syntax) { parser = opts.syntax.parse;[0m
[32m+            }[0m
[32m+            if (opts.parser) { parser = opts.parser;[0m
[32m+            }[0m
[32m+            if (parser.parse) { parser = parser.parse;[0m
[32m+            }[0m
 
[31m-      try {[0m
[31m-        root = parser(css, opts);[0m
[31m-      } catch (error) {[0m
[31m-        this.error = error;[0m
[31m-      }[0m
[32m+            try {[0m
[32m+                root = parser(css, opts);[0m
[32m+            } catch (error) {[0m
[32m+                this.error = error;[0m
[32m+            }[0m
[32m+        }[0m
[32m+[0m
[32m+        this.result = new _result.default(processor, root, opts);[0m
     }
[32m+    /**[0m
[32m+     * Returns a {@link Processor} instance, which will be used[0m
[32m+     * for CSS transformations.[0m
[32m+     *[0m
[32m+     * @type {Processor}[0m
[32m+     */[0m
 
[31m-    this.result = new _result.default(processor, root, opts);[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Returns a {@link Processor} instance, which will be used[0m
[31m-   * for CSS transformations.[0m
[31m-   *[0m
[31m-   * @type {Processor}[0m
[31m-   */[0m
 
[32m+    var _proto = LazyResult.prototype;[0m
 
[31m-  var _proto = LazyResult.prototype;[0m
[32m+    /**[0m
[32m+     * Processes input CSS through synchronous plugins[0m
[32m+     * and calls {@link Result#warnings()}.[0m
[32m+     *[0m
[32m+     * @return {Warning[]} Warnings from plugins.[0m
[32m+     */[0m
[32m+    _proto.warnings = function warnings()[0m
[32m+    {[0m
[32m+        return this.sync().warnings();[0m
[32m+    }[0m
[32m+    /**[0m
[32m+     * Alias for the {@link LazyResult#css} property.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * lazy + '' === lazy.css[0m
[32m+     *[0m
[32m+     * @return {string} Output CSS.[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-  /**[0m
[31m-   * Processes input CSS through synchronous plugins[0m
[31m-   * and calls {@link Result#warnings()}.[0m
[31m-   *[0m
[31m-   * @return {Warning[]} Warnings from plugins.[0m
[31m-   */[0m
[31m-  _proto.warnings = function warnings() {[0m
[31m-    return this.sync().warnings();[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Alias for the {@link LazyResult#css} property.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * lazy + '' === lazy.css[0m
[31m-   *[0m
[31m-   * @return {string} Output CSS.[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.toString = function toString()[0m
[32m+    {[0m
[32m+        return this.css;[0m
[32m+    }[0m
[32m+    /**[0m
[32m+     * Processes input CSS through synchronous and asynchronous plugins[0m
[32m+     * and calls `onFulfilled` with a Result instance. If a plugin throws[0m
[32m+     * an error, the `onRejected` callback will be executed.[0m
[32m+     *[0m
[32m+     * It implements standard Promise API.[0m
[32m+     *[0m
[32m+     * @param {onFulfilled} onFulfilled Callback will be executed[0m
[32m+     *                                  when all plugins will finish work.[0m
[32m+     * @param {onRejected}  onRejected  Callback will be executed on any error.[0m
[32m+     *[0m
[32m+     * @return {Promise} Promise API to make queue.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * postcss([autoprefixer]).process(css, { from: cssPath }).then(result => {[0m
[32m+     *   console.log(result.css)[0m
[32m+     * })[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-  _proto.toString = function toString() {[0m
[31m-    return this.css;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Processes input CSS through synchronous and asynchronous plugins[0m
[31m-   * and calls `onFulfilled` with a Result instance. If a plugin throws[0m
[31m-   * an error, the `onRejected` callback will be executed.[0m
[31m-   *[0m
[31m-   * It implements standard Promise API.[0m
[31m-   *[0m
[31m-   * @param {onFulfilled} onFulfilled Callback will be executed[0m
[31m-   *                                  when all plugins will finish work.[0m
[31m-   * @param {onRejected}  onRejected  Callback will be executed on any error.[0m
[31m-   *[0m
[31m-   * @return {Promise} Promise API to make queue.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * postcss([autoprefixer]).process(css, { from: cssPath }).then(result => {[0m
[31m-   *   console.log(result.css)[0m
[31m-   * })[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.then = function then(onFulfilled, onRejected)[0m
[32m+    {[0m
[32m+        if (process.env.NODE_ENV !== 'production') {[0m
[32m+            if (!('from' in this.opts)) {[0m
[32m+                (0, _warnOnce.default)('Without `from` option PostCSS could generate wrong source map ' + 'and will not find Browserslist config. Set it to CSS file path ' + 'or to `undefined` to prevent this warning.');[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-  _proto.then = function then(onFulfilled, onRejected) {[0m
[31m-    if (process.env.NODE_ENV !== 'production') {[0m
[31m-      if (!('from' in this.opts)) {[0m
[31m-        (0, _warnOnce.default)('Without `from` option PostCSS could generate wrong source map ' + 'and will not find Browserslist config. Set it to CSS file path ' + 'or to `undefined` to prevent this warning.');[0m
[31m-      }[0m
[32m+        return this.async().then(onFulfilled, onRejected);[0m
     }
[32m+    /**[0m
[32m+     * Processes input CSS through synchronous and asynchronous plugins[0m
[32m+     * and calls onRejected for each error thrown in any plugin.[0m
[32m+     *[0m
[32m+     * It implements standard Promise API.[0m
[32m+     *[0m
[32m+     * @param {onRejected} onRejected Callback will be executed on any error.[0m
[32m+     *[0m
[32m+     * @return {Promise} Promise API to make queue.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * postcss([autoprefixer]).process(css).then(result => {[0m
[32m+     *   console.log(result.css)[0m
[32m+     * }).catch(error => {[0m
[32m+     *   console.error(error)[0m
[32m+     * })[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    return this.async().then(onFulfilled, onRejected);[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Processes input CSS through synchronous and asynchronous plugins[0m
[31m-   * and calls onRejected for each error thrown in any plugin.[0m
[31m-   *[0m
[31m-   * It implements standard Promise API.[0m
[31m-   *[0m
[31m-   * @param {onRejected} onRejected Callback will be executed on any error.[0m
[31m-   *[0m
[31m-   * @return {Promise} Promise API to make queue.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * postcss([autoprefixer]).process(css).then(result => {[0m
[31m-   *   console.log(result.css)[0m
[31m-   * }).catch(error => {[0m
[31m-   *   console.error(error)[0m
[31m-   * })[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.catch = function _catch(onRejected)[0m
[32m+    {[0m
[32m+        return this.async().catch(onRejected);[0m
[32m+    }[0m
[32m+    /**[0m
[32m+     * Processes input CSS through synchronous and asynchronous plugins[0m
[32m+     * and calls onFinally on any error or when all plugins will finish work.[0m
[32m+     *[0m
[32m+     * It implements standard Promise API.[0m
[32m+     *[0m
[32m+     * @param {onFinally} onFinally Callback will be executed on any error or[0m
[32m+     *                              when all plugins will finish work.[0m
[32m+     *[0m
[32m+     * @return {Promise} Promise API to make queue.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * postcss([autoprefixer]).process(css).finally(() => {[0m
[32m+     *   console.log('processing ended')[0m
[32m+     * })[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-  _proto.catch = function _catch(onRejected) {[0m
[31m-    return this.async().catch(onRejected);[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Processes input CSS through synchronous and asynchronous plugins[0m
[31m-   * and calls onFinally on any error or when all plugins will finish work.[0m
[31m-   *[0m
[31m-   * It implements standard Promise API.[0m
[31m-   *[0m
[31m-   * @param {onFinally} onFinally Callback will be executed on any error or[0m
[31m-   *                              when all plugins will finish work.[0m
[31m-   *[0m
[31m-   * @return {Promise} Promise API to make queue.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * postcss([autoprefixer]).process(css).finally(() => {[0m
[31m-   *   console.log('processing ended')[0m
[31m-   * })[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.finally = function _finally(onFinally)[0m
[32m+    {[0m
[32m+        return this.async().then(onFinally, onFinally);[0m
[32m+    };[0m
 
[31m-  _proto.finally = function _finally(onFinally) {[0m
[31m-    return this.async().then(onFinally, onFinally);[0m
[31m-  };[0m
[32m+    _proto.handleError = function handleError(error, plugin)[0m
[32m+    {[0m
[32m+        try {[0m
[32m+            this.error = error;[0m
 
[31m-  _proto.handleError = function handleError(error, plugin) {[0m
[31m-    try {[0m
[31m-      this.error = error;[0m
[32m+            if (error.name === 'CssSyntaxError' && !error.plugin) {[0m
[32m+                error.plugin = plugin.postcssPlugin;[0m
[32m+                error.setMessage();[0m
[32m+            } else if (plugin.postcssVersion) {[0m
[32m+                if (process.env.NODE_ENV !== 'production') {[0m
[32m+                    var pluginName = plugin.postcssPlugin;[0m
[32m+                    var pluginVer = plugin.postcssVersion;[0m
[32m+                    var runtimeVer = this.result.processor.version;[0m
[32m+                    var a = pluginVer.split('.');[0m
[32m+                    var b = runtimeVer.split('.');[0m
 
[31m-      if (error.name === 'CssSyntaxError' && !error.plugin) {[0m
[31m-        error.plugin = plugin.postcssPlugin;[0m
[31m-        error.setMessage();[0m
[31m-      } else if (plugin.postcssVersion) {[0m
[31m-        if (process.env.NODE_ENV !== 'production') {[0m
[31m-          var pluginName = plugin.postcssPlugin;[0m
[31m-          var pluginVer = plugin.postcssVersion;[0m
[31m-          var runtimeVer = this.result.processor.version;[0m
[31m-          var a = pluginVer.split('.');[0m
[31m-          var b = runtimeVer.split('.');[0m
[31m-[0m
[31m-          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {[0m
[31m-            console.error('Unknown error from PostCSS plugin. Your current PostCSS ' + 'version is ' + runtimeVer + ', but ' + pluginName + ' uses ' + pluginVer + '. Perhaps this is the source of the error below.');[0m
[31m-          }[0m
[32m+                    if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {[0m
[32m+                        console.error('Unknown error from PostCSS plugin. Your current PostCSS ' + 'version is ' + runtimeVer + ', but ' + pluginName + ' uses ' + pluginVer + '. Perhaps this is the source of the error below.');[0m
[32m+                    }[0m
[32m+                }[0m
[32m+            }[0m
[32m+        } catch (err) {[0m
[32m+            if (console && console.error) { console.error(err);[0m
[32m+            }[0m
         }
[31m-      }[0m
[31m-    } catch (err) {[0m
[31m-      if (console && console.error) console.error(err);[0m
[31m-    }[0m
[31m-  };[0m
[32m+    };[0m
 
[31m-  _proto.asyncTick = function asyncTick(resolve, reject) {[0m
[31m-    var _this = this;[0m
[32m+    _proto.asyncTick = function asyncTick(resolve, reject)[0m
[32m+    {[0m
[32m+        var _this = this;[0m
 
[31m-    if (this.plugin >= this.processor.plugins.length) {[0m
[31m-      this.processed = true;[0m
[31m-      return resolve();[0m
[31m-    }[0m
[32m+        if (this.plugin >= this.processor.plugins.length) {[0m
[32m+            this.processed = true;[0m
[32m+            return resolve();[0m
[32m+        }[0m
 
[31m-    try {[0m
[31m-      var plugin = this.processor.plugins[this.plugin];[0m
[31m-      var promise = this.run(plugin);[0m
[31m-      this.plugin += 1;[0m
[32m+        try {[0m
[32m+            var plugin = this.processor.plugins[this.plugin];[0m
[32m+            var promise = this.run(plugin);[0m
[32m+            this.plugin += 1;[0m
 
[31m-      if (isPromise(promise)) {[0m
[31m-        promise.then(function () {[0m
[31m-          _this.asyncTick(resolve, reject);[0m
[31m-        }).catch(function (error) {[0m
[31m-          _this.handleError(error, plugin);[0m
[32m+            if (isPromise(promise)) {[0m
[32m+                promise.then([0m
[32m+                    function () {[0m
[32m+                        _this.asyncTick(resolve, reject);[0m
[32m+                    }[0m
[32m+                ).catch([0m
[32m+                    function (error) {[0m
[32m+                        _this.handleError(error, plugin);[0m
 
[31m-          _this.processed = true;[0m
[31m-          reject(error);[0m
[31m-        });[0m
[31m-      } else {[0m
[31m-        this.asyncTick(resolve, reject);[0m
[31m-      }[0m
[31m-    } catch (error) {[0m
[31m-      this.processed = true;[0m
[31m-      reject(error);[0m
[31m-    }[0m
[31m-  };[0m
[32m+                        _this.processed = true;[0m
[32m+                        reject(error);[0m
[32m+                    }[0m
[32m+                );[0m
[32m+            } else {[0m
[32m+                this.asyncTick(resolve, reject);[0m
[32m+            }[0m
[32m+        } catch (error) {[0m
[32m+            this.processed = true;[0m
[32m+            reject(error);[0m
[32m+        }[0m
[32m+    };[0m
 
[31m-  _proto.async = function async() {[0m
[31m-    var _this2 = this;[0m
[32m+    _proto.async = function async()[0m
[32m+    {[0m
[32m+        var _this2 = this;[0m
 
[31m-    if (this.processed) {[0m
[31m-      return new Promise(function (resolve, reject) {[0m
[31m-        if (_this2.error) {[0m
[31m-          reject(_this2.error);[0m
[31m-        } else {[0m
[31m-          resolve(_this2.stringify());[0m
[32m+        if (this.processed) {[0m
[32m+            return new Promise([0m
[32m+                function (resolve, reject) {[0m
[32m+                    if (_this2.error) {[0m
[32m+                        reject(_this2.error);[0m
[32m+                    } else {[0m
[32m+                        resolve(_this2.stringify());[0m
[32m+                    }[0m
[32m+                }[0m
[32m+            );[0m
         }
[31m-      });[0m
[31m-    }[0m
 
[31m-    if (this.processing) {[0m
[31m-      return this.processing;[0m
[31m-    }[0m
[32m+        if (this.processing) {[0m
[32m+            return this.processing;[0m
[32m+        }[0m
 
[31m-    this.processing = new Promise(function (resolve, reject) {[0m
[31m-      if (_this2.error) return reject(_this2.error);[0m
[31m-      _this2.plugin = 0;[0m
[32m+        this.processing = new Promise([0m
[32m+            function (resolve, reject) {[0m
[32m+                if (_this2.error) { return reject(_this2.error);[0m
[32m+                }[0m
[32m+                _this2.plugin = 0;[0m
 
[31m-      _this2.asyncTick(resolve, reject);[0m
[31m-    }).then(function () {[0m
[31m-      _this2.processed = true;[0m
[31m-      return _this2.stringify();[0m
[31m-    });[0m
[31m-    return this.processing;[0m
[31m-  };[0m
[32m+                _this2.asyncTick(resolve, reject);[0m
[32m+            }[0m
[32m+        ).then([0m
[32m+            function () {[0m
[32m+                _this2.processed = true;[0m
[32m+                return _this2.stringify();[0m
[32m+            }[0m
[32m+        );[0m
[32m+        return this.processing;[0m
[32m+    };[0m
 
[31m-  _proto.sync = function sync() {[0m
[31m-    if (this.processed) return this.result;[0m
[31m-    this.processed = true;[0m
[32m+    _proto.sync = function sync()[0m
[32m+    {[0m
[32m+        if (this.processed) { return this.result;[0m
[32m+        }[0m
[32m+        this.processed = true;[0m
 
[31m-    if (this.processing) {[0m
[31m-      throw new Error('Use process(css).then(cb) to work with async plugins');[0m
[31m-    }[0m
[32m+        if (this.processing) {[0m
[32m+            throw new Error('Use process(css).then(cb) to work with async plugins');[0m
[32m+        }[0m
 
[31m-    if (this.error) throw this.error;[0m
[32m+        if (this.error) { throw this.error;[0m
[32m+        }[0m
 
[31m-    for (var _iterator = _createForOfIteratorHelperLoose(this.result.processor.plugins), _step; !(_step = _iterator()).done;) {[0m
[31m-      var plugin = _step.value;[0m
[31m-      var promise = this.run(plugin);[0m
[32m+        for (var _iterator = _createForOfIteratorHelperLoose(this.result.processor.plugins), _step; !(_step = _iterator()).done;) {[0m
[32m+            var plugin = _step.value;[0m
[32m+            var promise = this.run(plugin);[0m
 
[31m-      if (isPromise(promise)) {[0m
[31m-        throw new Error('Use process(css).then(cb) to work with async plugins');[0m
[31m-      }[0m
[31m-    }[0m
[32m+            if (isPromise(promise)) {[0m
[32m+                throw new Error('Use process(css).then(cb) to work with async plugins');[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-    return this.result;[0m
[31m-  };[0m
[32m+        return this.result;[0m
[32m+    };[0m
 
[31m-  _proto.run = function run(plugin) {[0m
[31m-    this.result.lastPlugin = plugin;[0m
[32m+    _proto.run = function run(plugin)[0m
[32m+    {[0m
[32m+        this.result.lastPlugin = plugin;[0m
 
[31m-    try {[0m
[31m-      return plugin(this.result.root, this.result);[0m
[31m-    } catch (error) {[0m
[31m-      this.handleError(error, plugin);[0m
[31m-      throw error;[0m
[31m-    }[0m
[31m-  };[0m
[32m+        try {[0m
[32m+            return plugin(this.result.root, this.result);[0m
[32m+        } catch (error) {[0m
[32m+            this.handleError(error, plugin);[0m
[32m+            throw error;[0m
[32m+        }[0m
[32m+    };[0m
 
[31m-  _proto.stringify = function stringify() {[0m
[31m-    if (this.stringified) return this.result;[0m
[31m-    this.stringified = true;[0m
[31m-    this.sync();[0m
[31m-    var opts = this.result.opts;[0m
[31m-    var str = _stringify2.default;[0m
[31m-    if (opts.syntax) str = opts.syntax.stringify;[0m
[31m-    if (opts.stringifier) str = opts.stringifier;[0m
[31m-    if (str.stringify) str = str.stringify;[0m
[31m-    var map = new _mapGenerator.default(str, this.result.root, this.result.opts);[0m
[31m-    var data = map.generate();[0m
[31m-    this.result.css = data[0];[0m
[31m-    this.result.map = data[1];[0m
[31m-    return this.result;[0m
[31m-  };[0m
[32m+    _proto.stringify = function stringify()[0m
[32m+    {[0m
[32m+        if (this.stringified) { return this.result;[0m
[32m+        }[0m
[32m+        this.stringified = true;[0m
[32m+        this.sync();[0m
[32m+        var opts = this.result.opts;[0m
[32m+        var str = _stringify2.default;[0m
[32m+        if (opts.syntax) { str = opts.syntax.stringify;[0m
[32m+        }[0m
[32m+        if (opts.stringifier) { str = opts.stringifier;[0m
[32m+        }[0m
[32m+        if (str.stringify) { str = str.stringify;[0m
[32m+        }[0m
[32m+        var map = new _mapGenerator.default(str, this.result.root, this.result.opts);[0m
[32m+        var data = map.generate();[0m
[32m+        this.result.css = data[0];[0m
[32m+        this.result.map = data[1];[0m
[32m+        return this.result;[0m
[32m+    };[0m
 
[31m-  _createClass(LazyResult, [{[0m
[31m-    key: "processor",[0m
[31m-    get: function get() {[0m
[31m-      return this.result.processor;[0m
[31m-    }[0m
[31m-    /**[0m
[31m-     * Options from the {@link Processor#process} call.[0m
[31m-     *[0m
[31m-     * @type {processOptions}[0m
[31m-     */[0m
[32m+    _createClass([0m
[32m+        LazyResult, [{[0m
[32m+            key: "processor",[0m
[32m+            get: function get()[0m
[32m+            {[0m
[32m+                return this.result.processor;[0m
[32m+            }[0m
[32m+            /**[0m
[32m+             * Options from the {@link Processor#process} call.[0m
[32m+             *[0m
[32m+             * @type {processOptions}[0m
[32m+             */[0m
 
[31m-  }, {[0m
[31m-    key: "opts",[0m
[31m-    get: function get() {[0m
[31m-      return this.result.opts;[0m
[31m-    }[0m
[31m-    /**[0m
[31m-     * Processes input CSS through synchronous plugins, converts `Root`[0m
[31m-     * to a CSS string and returns {@link Result#css}.[0m
[31m-     *[0m
[31m-     * This property will only work with synchronous plugins.[0m
[31m-     * If the processor contains any asynchronous plugins[0m
[31m-     * it will throw an error. This is why this method is only[0m
[31m-     * for debug purpose, you should always use {@link LazyResult#then}.[0m
[31m-     *[0m
[31m-     * @type {string}[0m
[31m-     * @see Result#css[0m
[31m-     */[0m
[32m+        }, {[0m
[32m+            key: "opts",[0m
[32m+            get: function get()[0m
[32m+            {[0m
[32m+                return this.result.opts;[0m
[32m+            }[0m
[32m+            /**[0m
[32m+             * Processes input CSS through synchronous plugins, converts `Root`[0m
[32m+             * to a CSS string and returns {@link Result#css}.[0m
[32m+             *[0m
[32m+             * This property will only work with synchronous plugins.[0m
[32m+             * If the processor contains any asynchronous plugins[0m
[32m+             * it will throw an error. This is why this method is only[0m
[32m+             * for debug purpose, you should always use {@link LazyResult#then}.[0m
[32m+             *[0m
[32m+             * @type {string}[0m
[32m+             * @see  Result#css[0m
[32m+             */[0m
 
[31m-  }, {[0m
[31m-    key: "css",[0m
[31m-    get: function get() {[0m
[31m-      return this.stringify().css;[0m
[31m-    }[0m
[31m-    /**[0m
[31m-     * An alias for the `css` property. Use it with syntaxes[0m
[31m-     * that generate non-CSS output.[0m
[31m-     *[0m
[31m-     * This property will only work with synchronous plugins.[0m
[31m-     * If the processor contains any asynchronous plugins[0m
[31m-     * it will throw an error. This is why this method is only[0m
[31m-     * for debug purpose, you should always use {@link LazyResult#then}.[0m
[31m-     *[0m
[31m-     * @type {string}[0m
[31m-     * @see Result#content[0m
[31m-     */[0m
[32m+        }, {[0m
[32m+            key: "css",[0m
[32m+            get: function get()[0m
[32m+            {[0m
[32m+                return this.stringify().css;[0m
[32m+            }[0m
[32m+            /**[0m
[32m+             * An alias for the `css` property. Use it with syntaxes[0m
[32m+             * that generate non-CSS output.[0m
[32m+             *[0m
[32m+             * This property will only work with synchronous plugins.[0m
[32m+             * If the processor contains any asynchronous plugins[0m
[32m+             * it will throw an error. This is why this method is only[0m
[32m+             * for debug purpose, you should always use {@link LazyResult#then}.[0m
[32m+             *[0m
[32m+             * @type {string}[0m
[32m+             * @see  Result#content[0m
[32m+             */[0m
 
[31m-  }, {[0m
[31m-    key: "content",[0m
[31m-    get: function get() {[0m
[31m-      return this.stringify().content;[0m
[31m-    }[0m
[31m-    /**[0m
[31m-     * Processes input CSS through synchronous plugins[0m
[31m-     * and returns {@link Result#map}.[0m
[31m-     *[0m
[31m-     * This property will only work with synchronous plugins.[0m
[31m-     * If the processor contains any asynchronous plugins[0m
[31m-     * it will throw an error. This is why this method is only[0m
[31m-     * for debug purpose, you should always use {@link LazyResult#then}.[0m
[31m-     *[0m
[31m-     * @type {SourceMapGenerator}[0m
[31m-     * @see Result#map[0m
[31m-     */[0m
[32m+        }, {[0m
[32m+            key: "content",[0m
[32m+            get: function get()[0m
[32m+            {[0m
[32m+                return this.stringify().content;[0m
[32m+            }[0m
[32m+            /**[0m
[32m+             * Processes input CSS through synchronous plugins[0m
[32m+             * and returns {@link Result#map}.[0m
[32m+             *[0m
[32m+             * This property will only work with synchronous plugins.[0m
[32m+             * If the processor contains any asynchronous plugins[0m
[32m+             * it will throw an error. This is why this method is only[0m
[32m+             * for debug purpose, you should always use {@link LazyResult#then}.[0m
[32m+             *[0m
[32m+             * @type {SourceMapGenerator}[0m
[32m+             * @see  Result#map[0m
[32m+             */[0m
 
[31m-  }, {[0m
[31m-    key: "map",[0m
[31m-    get: function get() {[0m
[31m-      return this.stringify().map;[0m
[31m-    }[0m
[31m-    /**[0m
[31m-     * Processes input CSS through synchronous plugins[0m
[31m-     * and returns {@link Result#root}.[0m
[31m-     *[0m
[31m-     * This property will only work with synchronous plugins. If the processor[0m
[31m-     * contains any asynchronous plugins it will throw an error.[0m
[31m-     *[0m
[31m-     * This is why this method is only for debug purpose,[0m
[31m-     * you should always use {@link LazyResult#then}.[0m
[31m-     *[0m
[31m-     * @type {Root}[0m
[31m-     * @see Result#root[0m
[31m-     */[0m
[32m+        }, {[0m
[32m+            key: "map",[0m
[32m+            get: function get()[0m
[32m+            {[0m
[32m+                return this.stringify().map;[0m
[32m+            }[0m
[32m+            /**[0m
[32m+             * Processes input CSS through synchronous plugins[0m
[32m+             * and returns {@link Result#root}.[0m
[32m+             *[0m
[32m+             * This property will only work with synchronous plugins. If the processor[0m
[32m+             * contains any asynchronous plugins it will throw an error.[0m
[32m+             *[0m
[32m+             * This is why this method is only for debug purpose,[0m
[32m+             * you should always use {@link LazyResult#then}.[0m
[32m+             *[0m
[32m+             * @type {Root}[0m
[32m+             * @see  Result#root[0m
[32m+             */[0m
 
[31m-  }, {[0m
[31m-    key: "root",[0m
[31m-    get: function get() {[0m
[31m-      return this.sync().root;[0m
[31m-    }[0m
[31m-    /**[0m
[31m-     * Processes input CSS through synchronous plugins[0m
[31m-     * and returns {@link Result#messages}.[0m
[31m-     *[0m
[31m-     * This property will only work with synchronous plugins. If the processor[0m
[31m-     * contains any asynchronous plugins it will throw an error.[0m
[31m-     *[0m
[31m-     * This is why this method is only for debug purpose,[0m
[31m-     * you should always use {@link LazyResult#then}.[0m
[31m-     *[0m
[31m-     * @type {Message[]}[0m
[31m-     * @see Result#messages[0m
[31m-     */[0m
[32m+        }, {[0m
[32m+            key: "root",[0m
[32m+            get: function get()[0m
[32m+            {[0m
[32m+                return this.sync().root;[0m
[32m+            }[0m
[32m+            /**[0m
[32m+             * Processes input CSS through synchronous plugins[0m
[32m+             * and returns {@link Result#messages}.[0m
[32m+             *[0m
[32m+             * This property will only work with synchronous plugins. If the processor[0m
[32m+             * contains any asynchronous plugins it will throw an error.[0m
[32m+             *[0m
[32m+             * This is why this method is only for debug purpose,[0m
[32m+             * you should always use {@link LazyResult#then}.[0m
[32m+             *[0m
[32m+             * @type {Message[]}[0m
[32m+             * @see  Result#messages[0m
[32m+             */[0m
 
[31m-  }, {[0m
[31m-    key: "messages",[0m
[31m-    get: function get() {[0m
[31m-      return this.sync().messages;[0m
[31m-    }[0m
[31m-  }]);[0m
[32m+        }, {[0m
[32m+            key: "messages",[0m
[32m+            get: function get()[0m
[32m+            {[0m
[32m+                return this.sync().messages;[0m
[32m+            }[0m
[32m+        }][0m
[32m+    );[0m
 
[31m-  return LazyResult;[0m
[32m+    return LazyResult;[0m
 }();
 
 var _default = LazyResult;
 /**
  * @callback onFulfilled
[31m- * @param {Result} result[0m
[32m+ * @param    {Result} result[0m
  */
 
 /**
  * @callback onRejected
[31m- * @param {Error} error[0m
[32m+ * @param    {Error} error[0m
  */
 
 exports.default = _default;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/map-generator.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -7,338 +7,405 @@
 
 var _path = _interopRequireDefault(require("path"));
 
[31m-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }[0m
[32m+function _interopRequireDefault(obj)[0m
[32m+{[0m
[32m+    return obj && obj.__esModule ? obj : { default: obj }; }[0m
 
[31m-function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }[0m
[32m+function _createForOfIteratorHelperLoose(o, allowArrayLike)[0m
[32m+{[0m
[32m+    var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) { o = it;[0m
[32m+    } var i = 0; return function () {[0m
[32m+        if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }[0m
 
[31m-function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }[0m
[32m+function _unsupportedIterableToArray(o, minLen)[0m
[32m+{[0m
[32m+    if (!o) { return;[0m
[32m+    } if (typeof o === "string") { return _arrayLikeToArray(o, minLen);[0m
[32m+    } var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) { n = o.constructor.name;[0m
[32m+    } if (n === "Map" || n === "Set") { return Array.from(o);[0m
[32m+    } if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) { return _arrayLikeToArray(o, minLen);[0m
[32m+    } }[0m
 
[31m-function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }[0m
[32m+function _arrayLikeToArray(arr, len)[0m
[32m+{[0m
[32m+    if (len == null || len > arr.length) { len = arr.length;[0m
[32m+    } for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }[0m
 
 var MapGenerator = /*#__PURE__*/function () {
[31m-  function MapGenerator(stringify, root, opts) {[0m
[31m-    this.stringify = stringify;[0m
[31m-    this.mapOpts = opts.map || {};[0m
[31m-    this.root = root;[0m
[31m-    this.opts = opts;[0m
[31m-  }[0m
[32m+    function MapGenerator(stringify, root, opts)[0m
[32m+    {[0m
[32m+        this.stringify = stringify;[0m
[32m+        this.mapOpts = opts.map || {};[0m
[32m+        this.root = root;[0m
[32m+        this.opts = opts;[0m
[32m+    }[0m
 
[31m-  var _proto = MapGenerator.prototype;[0m
[32m+    var _proto = MapGenerator.prototype;[0m
 
[31m-  _proto.isMap = function isMap() {[0m
[31m-    if (typeof this.opts.map !== 'undefined') {[0m
[31m-      return !!this.opts.map;[0m
[31m-    }[0m
[32m+    _proto.isMap = function isMap()[0m
[32m+    {[0m
[32m+        if (typeof this.opts.map !== 'undefined') {[0m
[32m+            return !!this.opts.map;[0m
[32m+        }[0m
 
[31m-    return this.previous().length > 0;[0m
[31m-  };[0m
[32m+        return this.previous().length > 0;[0m
[32m+    };[0m
 
[31m-  _proto.previous = function previous() {[0m
[31m-    var _this = this;[0m
[32m+    _proto.previous = function previous()[0m
[32m+    {[0m
[32m+        var _this = this;[0m
 
[31m-    if (!this.previousMaps) {[0m
[31m-      this.previousMaps = [];[0m
[31m-      this.root.walk(function (node) {[0m
[31m-        if (node.source && node.source.input.map) {[0m
[31m-          var map = node.source.input.map;[0m
[32m+        if (!this.previousMaps) {[0m
[32m+            this.previousMaps = [];[0m
[32m+            this.root.walk([0m
[32m+                function (node) {[0m
[32m+                    if (node.source && node.source.input.map) {[0m
[32m+                        var map = node.source.input.map;[0m
 
[31m-          if (_this.previousMaps.indexOf(map) === -1) {[0m
[31m-            _this.previousMaps.push(map);[0m
[31m-          }[0m
[32m+                        if (_this.previousMaps.indexOf(map) === -1) {[0m
[32m+                            _this.previousMaps.push(map);[0m
[32m+                        }[0m
[32m+                    }[0m
[32m+                }[0m
[32m+            );[0m
         }
[31m-      });[0m
[31m-    }[0m
 
[31m-    return this.previousMaps;[0m
[31m-  };[0m
[32m+        return this.previousMaps;[0m
[32m+    };[0m
 
[31m-  _proto.isInline = function isInline() {[0m
[31m-    if (typeof this.mapOpts.inline !== 'undefined') {[0m
[31m-      return this.mapOpts.inline;[0m
[31m-    }[0m
[32m+    _proto.isInline = function isInline()[0m
[32m+    {[0m
[32m+        if (typeof this.mapOpts.inline !== 'undefined') {[0m
[32m+            return this.mapOpts.inline;[0m
[32m+        }[0m
 
[31m-    var annotation = this.mapOpts.annotation;[0m
[32m+        var annotation = this.mapOpts.annotation;[0m
 
[31m-    if (typeof annotation !== 'undefined' && annotation !== true) {[0m
[31m-      return false;[0m
[31m-    }[0m
[32m+        if (typeof annotation !== 'undefined' && annotation !== true) {[0m
[32m+            return false;[0m
[32m+        }[0m
 
[31m-    if (this.previous().length) {[0m
[31m-      return this.previous().some(function (i) {[0m
[31m-        return i.inline;[0m
[31m-      });[0m
[31m-    }[0m
[32m+        if (this.previous().length) {[0m
[32m+            return this.previous().some([0m
[32m+                function (i) {[0m
[32m+                    return i.inline;[0m
[32m+                }[0m
[32m+            );[0m
[32m+        }[0m
 
[31m-    return true;[0m
[31m-  };[0m
[32m+        return true;[0m
[32m+    };[0m
 
[31m-  _proto.isSourcesContent = function isSourcesContent() {[0m
[31m-    if (typeof this.mapOpts.sourcesContent !== 'undefined') {[0m
[31m-      return this.mapOpts.sourcesContent;[0m
[31m-    }[0m
[32m+    _proto.isSourcesContent = function isSourcesContent()[0m
[32m+    {[0m
[32m+        if (typeof this.mapOpts.sourcesContent !== 'undefined') {[0m
[32m+            return this.mapOpts.sourcesContent;[0m
[32m+        }[0m
 
[31m-    if (this.previous().length) {[0m
[31m-      return this.previous().some(function (i) {[0m
[31m-        return i.withContent();[0m
[31m-      });[0m
[31m-    }[0m
[32m+        if (this.previous().length) {[0m
[32m+            return this.previous().some([0m
[32m+                function (i) {[0m
[32m+                    return i.withContent();[0m
[32m+                }[0m
[32m+            );[0m
[32m+        }[0m
 
[31m-    return true;[0m
[31m-  };[0m
[32m+        return true;[0m
[32m+    };[0m
 
[31m-  _proto.clearAnnotation = function clearAnnotation() {[0m
[31m-    if (this.mapOpts.annotation === false) return;[0m
[31m-    var node;[0m
[32m+    _proto.clearAnnotation = function clearAnnotation()[0m
[32m+    {[0m
[32m+        if (this.mapOpts.annotation === false) { return;[0m
[32m+        }[0m
[32m+        var node;[0m
 
[31m-    for (var i = this.root.nodes.length - 1; i >= 0; i--) {[0m
[31m-      node = this.root.nodes[i];[0m
[31m-      if (node.type !== 'comment') continue;[0m
[32m+        for (var i = this.root.nodes.length - 1; i >= 0; i--) {[0m
[32m+            node = this.root.nodes[i];[0m
[32m+            if (node.type !== 'comment') { continue;[0m
[32m+            }[0m
 
[31m-      if (node.text.indexOf('# sourceMappingURL=') === 0) {[0m
[31m-        this.root.removeChild(i);[0m
[31m-      }[0m
[31m-    }[0m
[31m-  };[0m
[32m+            if (node.text.indexOf('# sourceMappingURL=') === 0) {[0m
[32m+                this.root.removeChild(i);[0m
[32m+            }[0m
[32m+        }[0m
[32m+    };[0m
 
[31m-  _proto.setSourcesContent = function setSourcesContent() {[0m
[31m-    var _this2 = this;[0m
[32m+    _proto.setSourcesContent = function setSourcesContent()[0m
[32m+    {[0m
[32m+        var _this2 = this;[0m
 
[31m-    var already = {};[0m
[31m-    this.root.walk(function (node) {[0m
[31m-      if (node.source) {[0m
[31m-        var from = node.source.input.from;[0m
[32m+        var already = {};[0m
[32m+        this.root.walk([0m
[32m+            function (node) {[0m
[32m+                if (node.source) {[0m
[32m+                    var from = node.source.input.from;[0m
 
[31m-        if (from && !already[from]) {[0m
[31m-          already[from] = true;[0m
[32m+                    if (from && !already[from]) {[0m
[32m+                        already[from] = true;[0m
 
[31m-          var relative = _this2.relative(from);[0m
[32m+                        var relative = _this2.relative(from);[0m
 
[31m-          _this2.map.setSourceContent(relative, node.source.input.css);[0m
[31m-        }[0m
[31m-      }[0m
[31m-    });[0m
[31m-  };[0m
[32m+                        _this2.map.setSourceContent(relative, node.source.input.css);[0m
[32m+                    }[0m
[32m+                }[0m
[32m+            }[0m
[32m+        );[0m
[32m+    };[0m
 
[31m-  _proto.applyPrevMaps = function applyPrevMaps() {[0m
[31m-    for (var _iterator = _createForOfIteratorHelperLoose(this.previous()), _step; !(_step = _iterator()).done;) {[0m
[31m-      var prev = _step.value;[0m
[31m-      var from = this.relative(prev.file);[0m
[32m+    _proto.applyPrevMaps = function applyPrevMaps()[0m
[32m+    {[0m
[32m+        for (var _iterator = _createForOfIteratorHelperLoose(this.previous()), _step; !(_step = _iterator()).done;) {[0m
[32m+            var prev = _step.value;[0m
[32m+            var from = this.relative(prev.file);[0m
 
[31m-      var root = prev.root || _path.default.dirname(prev.file);[0m
[32m+            var root = prev.root || _path.default.dirname(prev.file);[0m
 
[31m-      var map = void 0;[0m
[32m+            var map = void 0;[0m
 
[31m-      if (this.mapOpts.sourcesContent === false) {[0m
[31m-        map = new _sourceMap.default.SourceMapConsumer(prev.text);[0m
[32m+            if (this.mapOpts.sourcesContent === false) {[0m
[32m+                map = new _sourceMap.default.SourceMapConsumer(prev.text);[0m
 
[31m-        if (map.sourcesContent) {[0m
[31m-          map.sourcesContent = map.sourcesContent.map(function () {[0m
[31m-            return null;[0m
[31m-          });[0m
[32m+                if (map.sourcesContent) {[0m
[32m+                    map.sourcesContent = map.sourcesContent.map([0m
[32m+                        function () {[0m
[32m+                            return null;[0m
[32m+                        }[0m
[32m+                    );[0m
[32m+                }[0m
[32m+            } else {[0m
[32m+                map = prev.consumer();[0m
[32m+            }[0m
[32m+[0m
[32m+            this.map.applySourceMap(map, from, this.relative(root));[0m
         }
[31m-      } else {[0m
[31m-        map = prev.consumer();[0m
[31m-      }[0m
[32m+    };[0m
 
[31m-      this.map.applySourceMap(map, from, this.relative(root));[0m
[31m-    }[0m
[31m-  };[0m
[32m+    _proto.isAnnotation = function isAnnotation()[0m
[32m+    {[0m
[32m+        if (this.isInline()) {[0m
[32m+            return true;[0m
[32m+        }[0m
 
[31m-  _proto.isAnnotation = function isAnnotation() {[0m
[31m-    if (this.isInline()) {[0m
[31m-      return true;[0m
[31m-    }[0m
[32m+        if (typeof this.mapOpts.annotation !== 'undefined') {[0m
[32m+            return this.mapOpts.annotation;[0m
[32m+        }[0m
 
[31m-    if (typeof this.mapOpts.annotation !== 'undefined') {[0m
[31m-      return this.mapOpts.annotation;[0m
[31m-    }[0m
[32m+        if (this.previous().length) {[0m
[32m+            return this.previous().some([0m
[32m+                function (i) {[0m
[32m+                    return i.annotation;[0m
[32m+                }[0m
[32m+            );[0m
[32m+        }[0m
 
[31m-    if (this.previous().length) {[0m
[31m-      return this.previous().some(function (i) {[0m
[31m-        return i.annotation;[0m
[31m-      });[0m
[31m-    }[0m
[32m+        return true;[0m
[32m+    };[0m
 
[31m-    return true;[0m
[31m-  };[0m
[32m+    _proto.toBase64 = function toBase64(str)[0m
[32m+    {[0m
[32m+        if (Buffer) {[0m
[32m+            return Buffer.from(str).toString('base64');[0m
[32m+        }[0m
 
[31m-  _proto.toBase64 = function toBase64(str) {[0m
[31m-    if (Buffer) {[0m
[31m-      return Buffer.from(str).toString('base64');[0m
[31m-    }[0m
[32m+        return window.btoa(unescape(encodeURIComponent(str)));[0m
[32m+    };[0m
 
[31m-    return window.btoa(unescape(encodeURIComponent(str)));[0m
[31m-  };[0m
[32m+    _proto.addAnnotation = function addAnnotation()[0m
[32m+    {[0m
[32m+        var content;[0m
 
[31m-  _proto.addAnnotation = function addAnnotation() {[0m
[31m-    var content;[0m
[32m+        if (this.isInline()) {[0m
[32m+            content = 'data:application/json;base64,' + this.toBase64(this.map.toString());[0m
[32m+        } else if (typeof this.mapOpts.annotation === 'string') {[0m
[32m+            content = this.mapOpts.annotation;[0m
[32m+        } else {[0m
[32m+            content = this.outputFile() + '.map';[0m
[32m+        }[0m
 
[31m-    if (this.isInline()) {[0m
[31m-      content = 'data:application/json;base64,' + this.toBase64(this.map.toString());[0m
[31m-    } else if (typeof this.mapOpts.annotation === 'string') {[0m
[31m-      content = this.mapOpts.annotation;[0m
[31m-    } else {[0m
[31m-      content = this.outputFile() + '.map';[0m
[31m-    }[0m
[32m+        var eol = '\n';[0m
[32m+        if (this.css.indexOf('\r\n') !== -1) { eol = '\r\n';[0m
[32m+        }[0m
[32m+        this.css += eol + '/*# sourceMappingURL=' + content + ' */';[0m
[32m+    };[0m
 
[31m-    var eol = '\n';[0m
[31m-    if (this.css.indexOf('\r\n') !== -1) eol = '\r\n';[0m
[31m-    this.css += eol + '/*# sourceMappingURL=' + content + ' */';[0m
[31m-  };[0m
[32m+    _proto.outputFile = function outputFile()[0m
[32m+    {[0m
[32m+        if (this.opts.to) {[0m
[32m+            return this.relative(this.opts.to);[0m
[32m+        }[0m
 
[31m-  _proto.outputFile = function outputFile() {[0m
[31m-    if (this.opts.to) {[0m
[31m-      return this.relative(this.opts.to);[0m
[31m-    }[0m
[32m+        if (this.opts.from) {[0m
[32m+            return this.relative(this.opts.from);[0m
[32m+        }[0m
 
[31m-    if (this.opts.from) {[0m
[31m-      return this.relative(this.opts.from);[0m
[31m-    }[0m
[32m+        return 'to.css';[0m
[32m+    };[0m
 
[31m-    return 'to.css';[0m
[31m-  };[0m
[32m+    _proto.generateMap = function generateMap()[0m
[32m+    {[0m
[32m+        this.generateString();[0m
[32m+        if (this.isSourcesContent()) { this.setSourcesContent();[0m
[32m+        }[0m
[32m+        if (this.previous().length > 0) { this.applyPrevMaps();[0m
[32m+        }[0m
[32m+        if (this.isAnnotation()) { this.addAnnotation();[0m
[32m+        }[0m
 
[31m-  _proto.generateMap = function generateMap() {[0m
[31m-    this.generateString();[0m
[31m-    if (this.isSourcesContent()) this.setSourcesContent();[0m
[31m-    if (this.previous().length > 0) this.applyPrevMaps();[0m
[31m-    if (this.isAnnotation()) this.addAnnotation();[0m
[32m+        if (this.isInline()) {[0m
[32m+            return [this.css];[0m
[32m+        }[0m
 
[31m-    if (this.isInline()) {[0m
[31m-      return [this.css];[0m
[31m-    }[0m
[32m+        return [this.css, this.map];[0m
[32m+    };[0m
 
[31m-    return [this.css, this.map];[0m
[31m-  };[0m
[32m+    _proto.relative = function relative(file)[0m
[32m+    {[0m
[32m+        if (file.indexOf('<') === 0) { return file;[0m
[32m+        }[0m
[32m+        if (/^\w+:\/\//.test(file)) { return file;[0m
[32m+        }[0m
[32m+        var from = this.opts.to ? _path.default.dirname(this.opts.to) : '.';[0m
 
[31m-  _proto.relative = function relative(file) {[0m
[31m-    if (file.indexOf('<') === 0) return file;[0m
[31m-    if (/^\w+:\/\//.test(file)) return file;[0m
[31m-    var from = this.opts.to ? _path.default.dirname(this.opts.to) : '.';[0m
[32m+        if (typeof this.mapOpts.annotation === 'string') {[0m
[32m+            from = _path.default.dirname(_path.default.resolve(from, this.mapOpts.annotation));[0m
[32m+        }[0m
 
[31m-    if (typeof this.mapOpts.annotation === 'string') {[0m
[31m-      from = _path.default.dirname(_path.default.resolve(from, this.mapOpts.annotation));[0m
[31m-    }[0m
[32m+        file = _path.default.relative(from, file);[0m
 
[31m-    file = _path.default.relative(from, file);[0m
[32m+        if (_path.default.sep === '\\') {[0m
[32m+            return file.replace(/\\/g, '/');[0m
[32m+        }[0m
 
[31m-    if (_path.default.sep === '\\') {[0m
[31m-      return file.replace(/\\/g, '/');[0m
[31m-    }[0m
[32m+        return file;[0m
[32m+    };[0m
 
[31m-    return file;[0m
[31m-  };[0m
[32m+    _proto.sourcePath = function sourcePath(node)[0m
[32m+    {[0m
[32m+        if (this.mapOpts.from) {[0m
[32m+            return this.mapOpts.from;[0m
[32m+        }[0m
 
[31m-  _proto.sourcePath = function sourcePath(node) {[0m
[31m-    if (this.mapOpts.from) {[0m
[31m-      return this.mapOpts.from;[0m
[31m-    }[0m
[32m+        return this.relative(node.source.input.from);[0m
[32m+    };[0m
 
[31m-    return this.relative(node.source.input.from);[0m
[31m-  };[0m
[32m+    _proto.generateString = function generateString()[0m
[32m+    {[0m
[32m+        var _this3 = this;[0m
 
[31m-  _proto.generateString = function generateString() {[0m
[31m-    var _this3 = this;[0m
[31m-[0m
[31m-    this.css = '';[0m
[31m-    this.map = new _sourceMap.default.SourceMapGenerator({[0m
[31m-      file: this.outputFile()[0m
[31m-    });[0m
[31m-    var line = 1;[0m
[31m-    var column = 1;[0m
[31m-    var lines, last;[0m
[31m-    this.stringify(this.root, function (str, node, type) {[0m
[31m-      _this3.css += str;[0m
[31m-[0m
[31m-      if (node && type !== 'end') {[0m
[31m-        if (node.source && node.source.start) {[0m
[31m-          _this3.map.addMapping({[0m
[31m-            source: _this3.sourcePath(node),[0m
[31m-            generated: {[0m
[31m-              line: line,[0m
[31m-              column: column - 1[0m
[31m-            },[0m
[31m-            original: {[0m
[31m-              line: node.source.start.line,[0m
[31m-              column: node.source.start.column - 1[0m
[32m+        this.css = '';[0m
[32m+        this.map = new _sourceMap.default.SourceMapGenerator([0m
[32m+            {[0m
[32m+                file: this.outputFile()[0m
             }
[31m-          });[0m
[31m-        } else {[0m
[31m-          _this3.map.addMapping({[0m
[31m-            source: '<no source>',[0m
[31m-            original: {[0m
[31m-              line: 1,[0m
[31m-              column: 0[0m
[31m-            },[0m
[31m-            generated: {[0m
[31m-              line: line,[0m
[31m-              column: column - 1[0m
[31m-            }[0m
[31m-          });[0m
[31m-        }[0m
[31m-      }[0m
[32m+        );[0m
[32m+        var line = 1;[0m
[32m+        var column = 1;[0m
[32m+        var lines, last;[0m
[32m+        this.stringify([0m
[32m+            this.root, function (str, node, type) {[0m
[32m+                _this3.css += str;[0m
 
[31m-      lines = str.match(/\n/g);[0m
[32m+                if (node && type !== 'end') {[0m
[32m+                    if (node.source && node.source.start) {[0m
[32m+                        _this3.map.addMapping([0m
[32m+                            {[0m
[32m+                                source: _this3.sourcePath(node),[0m
[32m+                                generated: {[0m
[32m+                                    line: line,[0m
[32m+                                    column: column - 1[0m
[32m+                                },[0m
[32m+                                original: {[0m
[32m+                                    line: node.source.start.line,[0m
[32m+                                    column: node.source.start.column - 1[0m
[32m+                                }[0m
[32m+                            }[0m
[32m+                        );[0m
[32m+                    } else {[0m
[32m+                        _this3.map.addMapping([0m
[32m+                            {[0m
[32m+                                source: '<no source>',[0m
[32m+                                original: {[0m
[32m+                                    line: 1,[0m
[32m+                                    column: 0[0m
[32m+                                },[0m
[32m+                                generated: {[0m
[32m+                                    line: line,[0m
[32m+                                    column: column - 1[0m
[32m+                                }[0m
[32m+                            }[0m
[32m+                        );[0m
[32m+                    }[0m
[32m+                }[0m
 
[31m-      if (lines) {[0m
[31m-        line += lines.length;[0m
[31m-        last = str.lastIndexOf('\n');[0m
[31m-        column = str.length - last;[0m
[31m-      } else {[0m
[31m-        column += str.length;[0m
[31m-      }[0m
[32m+                lines = str.match(/\n/g);[0m
 
[31m-      if (node && type !== 'start') {[0m
[31m-        var p = node.parent || {[0m
[31m-          raws: {}[0m
[31m-        };[0m
[32m+                if (lines) {[0m
[32m+                    line += lines.length;[0m
[32m+                    last = str.lastIndexOf('\n');[0m
[32m+                    column = str.length - last;[0m
[32m+                } else {[0m
[32m+                    column += str.length;[0m
[32m+                }[0m
 
[31m-        if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {[0m
[31m-          if (node.source && node.source.end) {[0m
[31m-            _this3.map.addMapping({[0m
[31m-              source: _this3.sourcePath(node),[0m
[31m-              generated: {[0m
[31m-                line: line,[0m
[31m-                column: column - 2[0m
[31m-              },[0m
[31m-              original: {[0m
[31m-                line: node.source.end.line,[0m
[31m-                column: node.source.end.column - 1[0m
[31m-              }[0m
[31m-            });[0m
[31m-          } else {[0m
[31m-            _this3.map.addMapping({[0m
[31m-              source: '<no source>',[0m
[31m-              original: {[0m
[31m-                line: 1,[0m
[31m-                column: 0[0m
[31m-              },[0m
[31m-              generated: {[0m
[31m-                line: line,[0m
[31m-                column: column - 1[0m
[31m-              }[0m
[31m-            });[0m
[31m-          }[0m
[31m-        }[0m
[31m-      }[0m
[31m-    });[0m
[31m-  };[0m
[32m+                if (node && type !== 'start') {[0m
[32m+                    var p = node.parent || {[0m
[32m+                        raws: {}[0m
[32m+                    };[0m
 
[31m-  _proto.generate = function generate() {[0m
[31m-    this.clearAnnotation();[0m
[32m+                    if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {[0m
[32m+                        if (node.source && node.source.end) {[0m
[32m+                            _this3.map.addMapping([0m
[32m+                                {[0m
[32m+                                    source: _this3.sourcePath(node),[0m
[32m+                                    generated: {[0m
[32m+                                        line: line,[0m
[32m+                                        column: column - 2[0m
[32m+                                    },[0m
[32m+                                    original: {[0m
[32m+                                        line: node.source.end.line,[0m
[32m+                                        column: node.source.end.column - 1[0m
[32m+                                    }[0m
[32m+                                  }[0m
[32m+                            );[0m
[32m+                        } else {[0m
[32m+                            _this3.map.addMapping([0m
[32m+                                {[0m
[32m+                                    source: '<no source>',[0m
[32m+                                    original: {[0m
[32m+                                        line: 1,[0m
[32m+                                        column: 0[0m
[32m+                                    },[0m
[32m+                                    generated: {[0m
[32m+                                        line: line,[0m
[32m+                                        column: column - 1[0m
[32m+                                    }[0m
[32m+                                }[0m
[32m+                            );[0m
[32m+                        }[0m
[32m+                    }[0m
[32m+                }[0m
[32m+            }[0m
[32m+        );[0m
[32m+    };[0m
 
[31m-    if (this.isMap()) {[0m
[31m-      return this.generateMap();[0m
[31m-    }[0m
[32m+    _proto.generate = function generate()[0m
[32m+    {[0m
[32m+        this.clearAnnotation();[0m
 
[31m-    var result = '';[0m
[31m-    this.stringify(this.root, function (i) {[0m
[31m-      result += i;[0m
[31m-    });[0m
[31m-    return [result];[0m
[31m-  };[0m
[32m+        if (this.isMap()) {[0m
[32m+            return this.generateMap();[0m
[32m+        }[0m
 
[31m-  return MapGenerator;[0m
[32m+        var result = '';[0m
[32m+        this.stringify([0m
[32m+            this.root, function (i) {[0m
[32m+                result += i;[0m
[32m+            }[0m
[32m+        );[0m
[32m+        return [result];[0m
[32m+    };[0m
[32m+[0m
[32m+    return MapGenerator;[0m
 }();
 
 var _default = MapGenerator;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/node.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -9,31 +9,39 @@
 
 var _stringify = _interopRequireDefault(require("./stringify"));
 
[31m-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }[0m
[32m+function _interopRequireDefault(obj)[0m
[32m+{[0m
[32m+    return obj && obj.__esModule ? obj : { default: obj }; }[0m
 
[31m-function cloneNode(obj, parent) {[0m
[31m-  var cloned = new obj.constructor();[0m
[32m+function cloneNode(obj, parent)[0m
[32m+{[0m
[32m+    var cloned = new obj.constructor();[0m
 
[31m-  for (var i in obj) {[0m
[31m-    if (!obj.hasOwnProperty(i)) continue;[0m
[31m-    var value = obj[i];[0m
[31m-    var type = typeof value;[0m
[32m+    for (var i in obj) {[0m
[32m+        if (!obj.hasOwnProperty(i)) { continue;[0m
[32m+        }[0m
[32m+        var value = obj[i];[0m
[32m+        var type = typeof value;[0m
 
[31m-    if (i === 'parent' && type === 'object') {[0m
[31m-      if (parent) cloned[i] = parent;[0m
[31m-    } else if (i === 'source') {[0m
[31m-      cloned[i] = value;[0m
[31m-    } else if (value instanceof Array) {[0m
[31m-      cloned[i] = value.map(function (j) {[0m
[31m-        return cloneNode(j, cloned);[0m
[31m-      });[0m
[31m-    } else {[0m
[31m-      if (type === 'object' && value !== null) value = cloneNode(value);[0m
[31m-      cloned[i] = value;[0m
[32m+        if (i === 'parent' && type === 'object') {[0m
[32m+            if (parent) { cloned[i] = parent;[0m
[32m+            }[0m
[32m+        } else if (i === 'source') {[0m
[32m+            cloned[i] = value;[0m
[32m+        } else if (value instanceof Array) {[0m
[32m+            cloned[i] = value.map([0m
[32m+                function (j) {[0m
[32m+                    return cloneNode(j, cloned);[0m
[32m+                }[0m
[32m+            );[0m
[32m+        } else {[0m
[32m+            if (type === 'object' && value !== null) { value = cloneNode(value);[0m
[32m+            }[0m
[32m+            cloned[i] = value;[0m
[32m+        }[0m
     }
[31m-  }[0m
 
[31m-  return cloned;[0m
[32m+    return cloned;[0m
 }
 /**
  * All node classes inherit the following common methods.
@@ -43,559 +51,589 @@
 
 
 var Node = /*#__PURE__*/function () {
[31m-  /**[0m
[31m-   * @param {object} [defaults] Value for node properties.[0m
[31m-   */[0m
[31m-  function Node(defaults) {[0m
[31m-    if (defaults === void 0) {[0m
[31m-      defaults = {};[0m
[31m-    }[0m
[32m+    /**[0m
[32m+     * @param {object} [defaults] Value for node properties.[0m
[32m+     */[0m
[32m+    function Node(defaults)[0m
[32m+    {[0m
[32m+        if (defaults === void 0) {[0m
[32m+            defaults = {};[0m
[32m+        }[0m
 
[31m-    this.raws = {};[0m
[32m+        this.raws = {};[0m
 
[31m-    if (process.env.NODE_ENV !== 'production') {[0m
[31m-      if (typeof defaults !== 'object' && typeof defaults !== 'undefined') {[0m
[31m-        throw new Error('PostCSS nodes constructor accepts object, not ' + JSON.stringify(defaults));[0m
[31m-      }[0m
[31m-    }[0m
[32m+        if (process.env.NODE_ENV !== 'production') {[0m
[32m+            if (typeof defaults !== 'object' && typeof defaults !== 'undefined') {[0m
[32m+                throw new Error('PostCSS nodes constructor accepts object, not ' + JSON.stringify(defaults));[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-    for (var name in defaults) {[0m
[31m-      this[name] = defaults[name];[0m
[32m+        for (var name in defaults) {[0m
[32m+            this[name] = defaults[name];[0m
[32m+        }[0m
     }
[31m-  }[0m
[31m-  /**[0m
[31m-   * Returns a `CssSyntaxError` instance containing the original position[0m
[31m-   * of the node in the source, showing line and column numbers and also[0m
[31m-   * a small excerpt to facilitate debugging.[0m
[31m-   *[0m
[31m-   * If present, an input source map will be used to get the original position[0m
[31m-   * of the source, even from a previous compilation step[0m
[31m-   * (e.g., from Sass compilation).[0m
[31m-   *[0m
[31m-   * This method produces very useful error messages.[0m
[31m-   *[0m
[31m-   * @param {string} message     Error description.[0m
[31m-   * @param {object} [opts]      Options.[0m
[31m-   * @param {string} opts.plugin Plugin name that created this error.[0m
[31m-   *                             PostCSS will set it automatically.[0m
[31m-   * @param {string} opts.word   A word inside a node’s string that should[0m
[31m-   *                             be highlighted as the source of the error.[0m
[31m-   * @param {number} opts.index  An index inside a node’s string that should[0m
[31m-   *                             be highlighted as the source of the error.[0m
[31m-   *[0m
[31m-   * @return {CssSyntaxError} Error object to throw it.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * if (!variables[name]) {[0m
[31m-   *   throw decl.error('Unknown variable ' + name, { word: name })[0m
[31m-   *   // CssSyntaxError: postcss-vars:a.sass:4:3: Unknown variable $black[0m
[31m-   *   //   color: $black[0m
[31m-   *   // a[0m
[31m-   *   //          ^[0m
[31m-   *   //   background: white[0m
[31m-   * }[0m
[31m-   */[0m
[32m+    /**[0m
[32m+     * Returns a `CssSyntaxError` instance containing the original position[0m
[32m+     * of the node in the source, showing line and column numbers and also[0m
[32m+     * a small excerpt to facilitate debugging.[0m
[32m+     *[0m
[32m+     * If present, an input source map will be used to get the original position[0m
[32m+     * of the source, even from a previous compilation step[0m
[32m+     * (e.g., from Sass compilation).[0m
[32m+     *[0m
[32m+     * This method produces very useful error messages.[0m
[32m+     *[0m
[32m+     * @param {string} message     Error description.[0m
[32m+     * @param {object} [opts]      Options.[0m
[32m+     * @param {string} opts.plugin Plugin name that created this error.[0m
[32m+     *                             PostCSS will set it automatically.[0m
[32m+     * @param {string} opts.word   A word inside a node’s string that should[0m
[32m+     *                             be highlighted as the source of the error.[0m
[32m+     * @param {number} opts.index  An index inside a node’s string that should[0m
[32m+     *                             be highlighted as the source of the error.[0m
[32m+     *[0m
[32m+     * @return {CssSyntaxError} Error object to throw it.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * if (!variables[name]) {[0m
[32m+     *   throw decl.error('Unknown variable ' + name, { word: name })[0m
[32m+     *   // CssSyntaxError: postcss-vars:a.sass:4:3: Unknown variable $black[0m
[32m+     *   //   color: $black[0m
[32m+     *   // a[0m
[32m+     *   //          ^[0m
[32m+     *   //   background: white[0m
[32m+     * }[0m
[32m+     */[0m
 
 
[31m-  var _proto = Node.prototype;[0m
[32m+    var _proto = Node.prototype;[0m
 
[31m-  _proto.error = function error(message, opts) {[0m
[31m-    if (opts === void 0) {[0m
[31m-      opts = {};[0m
[31m-    }[0m
[32m+    _proto.error = function error(message, opts)[0m
[32m+    {[0m
[32m+        if (opts === void 0) {[0m
[32m+            opts = {};[0m
[32m+        }[0m
 
[31m-    if (this.source) {[0m
[31m-      var pos = this.positionBy(opts);[0m
[31m-      return this.source.input.error(message, pos.line, pos.column, opts);[0m
[32m+        if (this.source) {[0m
[32m+            var pos = this.positionBy(opts);[0m
[32m+            return this.source.input.error(message, pos.line, pos.column, opts);[0m
[32m+        }[0m
[32m+[0m
[32m+        return new _cssSyntaxError.default(message);[0m
     }
[32m+    /**[0m
[32m+     * This method is provided as a convenience wrapper for {@link Result#warn}.[0m
[32m+     *[0m
[32m+     * @param {Result} result      The {@link Result} instance[0m
[32m+     *                             that will receive the warning.[0m
[32m+     * @param {string} text        Warning message.[0m
[32m+     * @param {object} [opts]      Options[0m
[32m+     * @param {string} opts.plugin Plugin name that created this warning.[0m
[32m+     *                             PostCSS will set it automatically.[0m
[32m+     * @param {string} opts.word   A word inside a node’s string that should[0m
[32m+     *                             be highlighted as the source of the warning.[0m
[32m+     * @param {number} opts.index  An index inside a node’s string that should[0m
[32m+     *                             be highlighted as the source of the warning.[0m
[32m+     *[0m
[32m+     * @return {Warning} Created warning object.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const plugin = postcss.plugin('postcss-deprecated', () => {[0m
[32m+     *   return (root, result) => {[0m
[32m+     *     root.walkDecls('bad', decl => {[0m
[32m+     *       decl.warn(result, 'Deprecated property bad')[0m
[32m+     *     })[0m
[32m+     *   }[0m
[32m+     * })[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    return new _cssSyntaxError.default(message);[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * This method is provided as a convenience wrapper for {@link Result#warn}.[0m
[31m-   *[0m
[31m-   * @param {Result} result      The {@link Result} instance[0m
[31m-   *                             that will receive the warning.[0m
[31m-   * @param {string} text        Warning message.[0m
[31m-   * @param {object} [opts]      Options[0m
[31m-   * @param {string} opts.plugin Plugin name that created this warning.[0m
[31m-   *                             PostCSS will set it automatically.[0m
[31m-   * @param {string} opts.word   A word inside a node’s string that should[0m
[31m-   *                             be highlighted as the source of the warning.[0m
[31m-   * @param {number} opts.index  An index inside a node’s string that should[0m
[31m-   *                             be highlighted as the source of the warning.[0m
[31m-   *[0m
[31m-   * @return {Warning} Created warning object.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const plugin = postcss.plugin('postcss-deprecated', () => {[0m
[31m-   *   return (root, result) => {[0m
[31m-   *     root.walkDecls('bad', decl => {[0m
[31m-   *       decl.warn(result, 'Deprecated property bad')[0m
[31m-   *     })[0m
[31m-   *   }[0m
[31m-   * })[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.warn = function warn(result, text, opts)[0m
[32m+    {[0m
[32m+        var data = {[0m
[32m+            node: this[0m
[32m+        };[0m
 
[31m-  _proto.warn = function warn(result, text, opts) {[0m
[31m-    var data = {[0m
[31m-      node: this[0m
[31m-    };[0m
[32m+        for (var i in opts) {[0m
[32m+            data[i] = opts[i];[0m
[32m+        }[0m
 
[31m-    for (var i in opts) {[0m
[31m-      data[i] = opts[i];[0m
[32m+        return result.warn(text, data);[0m
     }
[32m+    /**[0m
[32m+     * Removes the node from its parent and cleans the parent properties[0m
[32m+     * from the node and its children.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * if (decl.prop.match(/^-webkit-/)) {[0m
[32m+     *   decl.remove()[0m
[32m+     * }[0m
[32m+     *[0m
[32m+     * @return {Node} Node to make calls chain.[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    return result.warn(text, data);[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Removes the node from its parent and cleans the parent properties[0m
[31m-   * from the node and its children.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * if (decl.prop.match(/^-webkit-/)) {[0m
[31m-   *   decl.remove()[0m
[31m-   * }[0m
[31m-   *[0m
[31m-   * @return {Node} Node to make calls chain.[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.remove = function remove()[0m
[32m+    {[0m
[32m+        if (this.parent) {[0m
[32m+            this.parent.removeChild(this);[0m
[32m+        }[0m
 
[31m-  _proto.remove = function remove() {[0m
[31m-    if (this.parent) {[0m
[31m-      this.parent.removeChild(this);[0m
[32m+        this.parent = undefined;[0m
[32m+        return this;[0m
     }
[32m+    /**[0m
[32m+     * Returns a CSS string representing the node.[0m
[32m+     *[0m
[32m+     * @param {stringifier|syntax} [stringifier] A syntax to use[0m
[32m+     *                                           in string generation.[0m
[32m+     *[0m
[32m+     * @return {string} CSS string of this node.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * postcss.rule({ selector: 'a' }).toString() //=> "a {}"[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    this.parent = undefined;[0m
[31m-    return this;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Returns a CSS string representing the node.[0m
[31m-   *[0m
[31m-   * @param {stringifier|syntax} [stringifier] A syntax to use[0m
[31m-   *                                           in string generation.[0m
[31m-   *[0m
[31m-   * @return {string} CSS string of this node.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * postcss.rule({ selector: 'a' }).toString() //=> "a {}"[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.toString = function toString(stringifier)[0m
[32m+    {[0m
[32m+        if (stringifier === void 0) {[0m
[32m+            stringifier = _stringify.default;[0m
[32m+        }[0m
 
[31m-  _proto.toString = function toString(stringifier) {[0m
[31m-    if (stringifier === void 0) {[0m
[31m-      stringifier = _stringify.default;[0m
[32m+        if (stringifier.stringify) { stringifier = stringifier.stringify;[0m
[32m+        }[0m
[32m+        var result = '';[0m
[32m+        stringifier([0m
[32m+            this, function (i) {[0m
[32m+                result += i;[0m
[32m+            }[0m
[32m+        );[0m
[32m+        return result;[0m
     }
[32m+    /**[0m
[32m+     * Returns an exact clone of the node.[0m
[32m+     *[0m
[32m+     * The resulting cloned node and its (cloned) children will retain[0m
[32m+     * code style properties.[0m
[32m+     *[0m
[32m+     * @param {object} [overrides] New properties to override in the clone.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * decl.raws.before    //=> "\n  "[0m
[32m+     * const cloned = decl.clone({ prop: '-moz-' + decl.prop })[0m
[32m+     * cloned.raws.before  //=> "\n  "[0m
[32m+     * cloned.toString()   //=> -moz-transform: scale(0)[0m
[32m+     *[0m
[32m+     * @return {Node} Clone of the node.[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    if (stringifier.stringify) stringifier = stringifier.stringify;[0m
[31m-    var result = '';[0m
[31m-    stringifier(this, function (i) {[0m
[31m-      result += i;[0m
[31m-    });[0m
[31m-    return result;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Returns an exact clone of the node.[0m
[31m-   *[0m
[31m-   * The resulting cloned node and its (cloned) children will retain[0m
[31m-   * code style properties.[0m
[31m-   *[0m
[31m-   * @param {object} [overrides] New properties to override in the clone.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * decl.raws.before    //=> "\n  "[0m
[31m-   * const cloned = decl.clone({ prop: '-moz-' + decl.prop })[0m
[31m-   * cloned.raws.before  //=> "\n  "[0m
[31m-   * cloned.toString()   //=> -moz-transform: scale(0)[0m
[31m-   *[0m
[31m-   * @return {Node} Clone of the node.[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.clone = function clone(overrides)[0m
[32m+    {[0m
[32m+        if (overrides === void 0) {[0m
[32m+            overrides = {};[0m
[32m+        }[0m
 
[31m-  _proto.clone = function clone(overrides) {[0m
[31m-    if (overrides === void 0) {[0m
[31m-      overrides = {};[0m
[31m-    }[0m
[32m+        var cloned = cloneNode(this);[0m
 
[31m-    var cloned = cloneNode(this);[0m
[32m+        for (var name in overrides) {[0m
[32m+            cloned[name] = overrides[name];[0m
[32m+        }[0m
 
[31m-    for (var name in overrides) {[0m
[31m-      cloned[name] = overrides[name];[0m
[32m+        return cloned;[0m
     }
[32m+    /**[0m
[32m+     * Shortcut to clone the node and insert the resulting cloned node[0m
[32m+     * before the current node.[0m
[32m+     *[0m
[32m+     * @param {object} [overrides] Mew properties to override in the clone.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * decl.cloneBefore({ prop: '-moz-' + decl.prop })[0m
[32m+     *[0m
[32m+     * @return {Node} New node[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    return cloned;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Shortcut to clone the node and insert the resulting cloned node[0m
[31m-   * before the current node.[0m
[31m-   *[0m
[31m-   * @param {object} [overrides] Mew properties to override in the clone.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * decl.cloneBefore({ prop: '-moz-' + decl.prop })[0m
[31m-   *[0m
[31m-   * @return {Node} New node[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.cloneBefore = function cloneBefore(overrides)[0m
[32m+    {[0m
[32m+        if (overrides === void 0) {[0m
[32m+            overrides = {};[0m
[32m+        }[0m
 
[31m-  _proto.cloneBefore = function cloneBefore(overrides) {[0m
[31m-    if (overrides === void 0) {[0m
[31m-      overrides = {};[0m
[32m+        var cloned = this.clone(overrides);[0m
[32m+        this.parent.insertBefore(this, cloned);[0m
[32m+        return cloned;[0m
     }
[32m+    /**[0m
[32m+     * Shortcut to clone the node and insert the resulting cloned node[0m
[32m+     * after the current node.[0m
[32m+     *[0m
[32m+     * @param {object} [overrides] New properties to override in the clone.[0m
[32m+     *[0m
[32m+     * @return {Node} New node.[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    var cloned = this.clone(overrides);[0m
[31m-    this.parent.insertBefore(this, cloned);[0m
[31m-    return cloned;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Shortcut to clone the node and insert the resulting cloned node[0m
[31m-   * after the current node.[0m
[31m-   *[0m
[31m-   * @param {object} [overrides] New properties to override in the clone.[0m
[31m-   *[0m
[31m-   * @return {Node} New node.[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.cloneAfter = function cloneAfter(overrides)[0m
[32m+    {[0m
[32m+        if (overrides === void 0) {[0m
[32m+            overrides = {};[0m
[32m+        }[0m
 
[31m-  _proto.cloneAfter = function cloneAfter(overrides) {[0m
[31m-    if (overrides === void 0) {[0m
[31m-      overrides = {};[0m
[32m+        var cloned = this.clone(overrides);[0m
[32m+        this.parent.insertAfter(this, cloned);[0m
[32m+        return cloned;[0m
     }
[32m+    /**[0m
[32m+     * Inserts node(s) before the current node and removes the current node.[0m
[32m+     *[0m
[32m+     * @param {...Node} nodes Mode(s) to replace current one.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * if (atrule.name === 'mixin') {[0m
[32m+     *   atrule.replaceWith(mixinRules[atrule.params])[0m
[32m+     * }[0m
[32m+     *[0m
[32m+     * @return {Node} Current node to methods chain.[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    var cloned = this.clone(overrides);[0m
[31m-    this.parent.insertAfter(this, cloned);[0m
[31m-    return cloned;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Inserts node(s) before the current node and removes the current node.[0m
[31m-   *[0m
[31m-   * @param {...Node} nodes Mode(s) to replace current one.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * if (atrule.name === 'mixin') {[0m
[31m-   *   atrule.replaceWith(mixinRules[atrule.params])[0m
[31m-   * }[0m
[31m-   *[0m
[31m-   * @return {Node} Current node to methods chain.[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.replaceWith = function replaceWith()[0m
[32m+    {[0m
[32m+        if (this.parent) {[0m
[32m+            for (var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++) {[0m
[32m+                nodes[_key] = arguments[_key];[0m
[32m+            }[0m
 
[31m-  _proto.replaceWith = function replaceWith() {[0m
[31m-    if (this.parent) {[0m
[31m-      for (var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++) {[0m
[31m-        nodes[_key] = arguments[_key];[0m
[31m-      }[0m
[32m+            for (var _i = 0, _nodes = nodes; _i < _nodes.length; _i++) {[0m
[32m+                var node = _nodes[_i];[0m
[32m+                this.parent.insertBefore(this, node);[0m
[32m+            }[0m
 
[31m-      for (var _i = 0, _nodes = nodes; _i < _nodes.length; _i++) {[0m
[31m-        var node = _nodes[_i];[0m
[31m-        this.parent.insertBefore(this, node);[0m
[31m-      }[0m
[32m+            this.remove();[0m
[32m+        }[0m
 
[31m-      this.remove();[0m
[32m+        return this;[0m
     }
[32m+    /**[0m
[32m+     * Returns the next child of the node’s parent.[0m
[32m+     * Returns `undefined` if the current node is the last child.[0m
[32m+     *[0m
[32m+     * @return {Node|undefined} Next node.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * if (comment.text === 'delete next') {[0m
[32m+     *   const next = comment.next()[0m
[32m+     *   if (next) {[0m
[32m+     *     next.remove()[0m
[32m+     *   }[0m
[32m+     * }[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    return this;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Returns the next child of the node’s parent.[0m
[31m-   * Returns `undefined` if the current node is the last child.[0m
[31m-   *[0m
[31m-   * @return {Node|undefined} Next node.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * if (comment.text === 'delete next') {[0m
[31m-   *   const next = comment.next()[0m
[31m-   *   if (next) {[0m
[31m-   *     next.remove()[0m
[31m-   *   }[0m
[31m-   * }[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.next = function next()[0m
[32m+    {[0m
[32m+        if (!this.parent) { return undefined;[0m
[32m+        }[0m
[32m+        var index = this.parent.index(this);[0m
[32m+        return this.parent.nodes[index + 1];[0m
[32m+    }[0m
[32m+    /**[0m
[32m+     * Returns the previous child of the node’s parent.[0m
[32m+     * Returns `undefined` if the current node is the first child.[0m
[32m+     *[0m
[32m+     * @return {Node|undefined} Previous node.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const annotation = decl.prev()[0m
[32m+     * if (annotation.type === 'comment') {[0m
[32m+     *   readAnnotation(annotation.text)[0m
[32m+     * }[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-  _proto.next = function next() {[0m
[31m-    if (!this.parent) return undefined;[0m
[31m-    var index = this.parent.index(this);[0m
[31m-    return this.parent.nodes[index + 1];[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Returns the previous child of the node’s parent.[0m
[31m-   * Returns `undefined` if the current node is the first child.[0m
[31m-   *[0m
[31m-   * @return {Node|undefined} Previous node.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const annotation = decl.prev()[0m
[31m-   * if (annotation.type === 'comment') {[0m
[31m-   *   readAnnotation(annotation.text)[0m
[31m-   * }[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.prev = function prev()[0m
[32m+    {[0m
[32m+        if (!this.parent) { return undefined;[0m
[32m+        }[0m
[32m+        var index = this.parent.index(this);[0m
[32m+        return this.parent.nodes[index - 1];[0m
[32m+    }[0m
[32m+    /**[0m
[32m+     * Insert new node before current node to current node’s parent.[0m
[32m+     *[0m
[32m+     * Just alias for `node.parent.insertBefore(node, add)`.[0m
[32m+     *[0m
[32m+     * @param {Node|object|string|Node[]} add New node.[0m
[32m+     *[0m
[32m+     * @return {Node} This node for methods chain.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * decl.before('content: ""')[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-  _proto.prev = function prev() {[0m
[31m-    if (!this.parent) return undefined;[0m
[31m-    var index = this.parent.index(this);[0m
[31m-    return this.parent.nodes[index - 1];[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Insert new node before current node to current node’s parent.[0m
[31m-   *[0m
[31m-   * Just alias for `node.parent.insertBefore(node, add)`.[0m
[31m-   *[0m
[31m-   * @param {Node|object|string|Node[]} add New node.[0m
[31m-   *[0m
[31m-   * @return {Node} This node for methods chain.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * decl.before('content: ""')[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.before = function before(add)[0m
[32m+    {[0m
[32m+        this.parent.insertBefore(this, add);[0m
[32m+        return this;[0m
[32m+    }[0m
[32m+    /**[0m
[32m+     * Insert new node after current node to current node’s parent.[0m
[32m+     *[0m
[32m+     * Just alias for `node.parent.insertAfter(node, add)`.[0m
[32m+     *[0m
[32m+     * @param {Node|object|string|Node[]} add New node.[0m
[32m+     *[0m
[32m+     * @return {Node} This node for methods chain.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * decl.after('color: black')[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-  _proto.before = function before(add) {[0m
[31m-    this.parent.insertBefore(this, add);[0m
[31m-    return this;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Insert new node after current node to current node’s parent.[0m
[31m-   *[0m
[31m-   * Just alias for `node.parent.insertAfter(node, add)`.[0m
[31m-   *[0m
[31m-   * @param {Node|object|string|Node[]} add New node.[0m
[31m-   *[0m
[31m-   * @return {Node} This node for methods chain.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * decl.after('color: black')[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.after = function after(add)[0m
[32m+    {[0m
[32m+        this.parent.insertAfter(this, add);[0m
[32m+        return this;[0m
[32m+    };[0m
 
[31m-  _proto.after = function after(add) {[0m
[31m-    this.parent.insertAfter(this, add);[0m
[31m-    return this;[0m
[31m-  };[0m
[32m+    _proto.toJSON = function toJSON()[0m
[32m+    {[0m
[32m+        var fixed = {};[0m
 
[31m-  _proto.toJSON = function toJSON() {[0m
[31m-    var fixed = {};[0m
[32m+        for (var name in this) {[0m
[32m+            if (!this.hasOwnProperty(name)) { continue;[0m
[32m+            }[0m
[32m+            if (name === 'parent') { continue;[0m
[32m+            }[0m
[32m+            var value = this[name];[0m
 
[31m-    for (var name in this) {[0m
[31m-      if (!this.hasOwnProperty(name)) continue;[0m
[31m-      if (name === 'parent') continue;[0m
[31m-      var value = this[name];[0m
[32m+            if (value instanceof Array) {[0m
[32m+                fixed[name] = value.map([0m
[32m+                    function (i) {[0m
[32m+                        if (typeof i === 'object' && i.toJSON) {[0m
[32m+                            return i.toJSON();[0m
[32m+                        } else {[0m
[32m+                            return i;[0m
[32m+                        }[0m
[32m+                    }[0m
[32m+                );[0m
[32m+            } else if (typeof value === 'object' && value.toJSON) {[0m
[32m+                fixed[name] = value.toJSON();[0m
[32m+            } else {[0m
[32m+                fixed[name] = value;[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-      if (value instanceof Array) {[0m
[31m-        fixed[name] = value.map(function (i) {[0m
[31m-          if (typeof i === 'object' && i.toJSON) {[0m
[31m-            return i.toJSON();[0m
[31m-          } else {[0m
[31m-            return i;[0m
[31m-          }[0m
[31m-        });[0m
[31m-      } else if (typeof value === 'object' && value.toJSON) {[0m
[31m-        fixed[name] = value.toJSON();[0m
[31m-      } else {[0m
[31m-        fixed[name] = value;[0m
[31m-      }[0m
[32m+        return fixed;[0m
     }
[32m+    /**[0m
[32m+     * Returns a {@link Node#raws} value. If the node is missing[0m
[32m+     * the code style property (because the node was manually built or cloned),[0m
[32m+     * PostCSS will try to autodetect the code style property by looking[0m
[32m+     * at other nodes in the tree.[0m
[32m+     *[0m
[32m+     * @param {string} prop          Name of code style property.[0m
[32m+     * @param {string} [defaultType] Name of default value, it can be missed[0m
[32m+     *                               if the value is the same as prop.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const root = postcss.parse('a { background: white }')[0m
[32m+     * root.nodes[0].append({ prop: 'color', value: 'black' })[0m
[32m+     * root.nodes[0].nodes[1].raws.before   //=> undefined[0m
[32m+     * root.nodes[0].nodes[1].raw('before') //=> ' '[0m
[32m+     *[0m
[32m+     * @return {string} Code style value.[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    return fixed;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Returns a {@link Node#raws} value. If the node is missing[0m
[31m-   * the code style property (because the node was manually built or cloned),[0m
[31m-   * PostCSS will try to autodetect the code style property by looking[0m
[31m-   * at other nodes in the tree.[0m
[31m-   *[0m
[31m-   * @param {string} prop          Name of code style property.[0m
[31m-   * @param {string} [defaultType] Name of default value, it can be missed[0m
[31m-   *                               if the value is the same as prop.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const root = postcss.parse('a { background: white }')[0m
[31m-   * root.nodes[0].append({ prop: 'color', value: 'black' })[0m
[31m-   * root.nodes[0].nodes[1].raws.before   //=> undefined[0m
[31m-   * root.nodes[0].nodes[1].raw('before') //=> ' '[0m
[31m-   *[0m
[31m-   * @return {string} Code style value.[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.raw = function raw(prop, defaultType)[0m
[32m+    {[0m
[32m+        var str = new _stringifier.default();[0m
[32m+        return str.raw(this, prop, defaultType);[0m
[32m+    }[0m
[32m+    /**[0m
[32m+     * Finds the Root instance of the node’s tree.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * root.nodes[0].nodes[0].root() === root[0m
[32m+     *[0m
[32m+     * @return {Root} Root parent.[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-  _proto.raw = function raw(prop, defaultType) {[0m
[31m-    var str = new _stringifier.default();[0m
[31m-    return str.raw(this, prop, defaultType);[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Finds the Root instance of the node’s tree.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * root.nodes[0].nodes[0].root() === root[0m
[31m-   *[0m
[31m-   * @return {Root} Root parent.[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.root = function root()[0m
[32m+    {[0m
[32m+        var result = this;[0m
 
[31m-  _proto.root = function root() {[0m
[31m-    var result = this;[0m
[32m+        while (result.parent) {[0m
[32m+            result = result.parent;[0m
[32m+        }[0m
 
[31m-    while (result.parent) {[0m
[31m-      result = result.parent;[0m
[32m+        return result;[0m
     }
[32m+    /**[0m
[32m+     * Clear the code style properties for the node and its children.[0m
[32m+     *[0m
[32m+     * @param {boolean} [keepBetween] Keep the raws.between symbols.[0m
[32m+     *[0m
[32m+     * @return {undefined}[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * node.raws.before  //=> ' '[0m
[32m+     * node.cleanRaws()[0m
[32m+     * node.raws.before  //=> undefined[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    return result;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Clear the code style properties for the node and its children.[0m
[31m-   *[0m
[31m-   * @param {boolean} [keepBetween] Keep the raws.between symbols.[0m
[31m-   *[0m
[31m-   * @return {undefined}[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * node.raws.before  //=> ' '[0m
[31m-   * node.cleanRaws()[0m
[31m-   * node.raws.before  //=> undefined[0m
[31m-   */[0m
[31m-  ;[0m
[32m+    _proto.cleanRaws = function cleanRaws(keepBetween)[0m
[32m+    {[0m
[32m+        delete this.raws.before;[0m
[32m+        delete this.raws.after;[0m
[32m+        if (!keepBetween) { delete this.raws.between;[0m
[32m+        }[0m
[32m+    };[0m
 
[31m-  _proto.cleanRaws = function cleanRaws(keepBetween) {[0m
[31m-    delete this.raws.before;[0m
[31m-    delete this.raws.after;[0m
[31m-    if (!keepBetween) delete this.raws.between;[0m
[31m-  };[0m
[32m+    _proto.positionInside = function positionInside(index)[0m
[32m+    {[0m
[32m+        var string = this.toString();[0m
[32m+        var column = this.source.start.column;[0m
[32m+        var line = this.source.start.line;[0m
 
[31m-  _proto.positionInside = function positionInside(index) {[0m
[31m-    var string = this.toString();[0m
[31m-    var column = this.source.start.column;[0m
[31m-    var line = this.source.start.line;[0m
[32m+        for (var i = 0; i < index; i++) {[0m
[32m+            if (string[i] === '\n') {[0m
[32m+                column = 1;[0m
[32m+                line += 1;[0m
[32m+            } else {[0m
[32m+                column += 1;[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-    for (var i = 0; i < index; i++) {[0m
[31m-      if (string[i] === '\n') {[0m
[31m-        column = 1;[0m
[31m-        line += 1;[0m
[31m-      } else {[0m
[31m-        column += 1;[0m
[31m-      }[0m
[31m-    }[0m
[31m-[0m
[31m-    return {[0m
[31m-      line: line,[0m
[31m-      column: column[0m
[32m+        return {[0m
[32m+            line: line,[0m
[32m+            column: column[0m
[32m+        };[0m
     };
[31m-  };[0m
 
[31m-  _proto.positionBy = function positionBy(opts) {[0m
[31m-    var pos = this.source.start;[0m
[32m+    _proto.positionBy = function positionBy(opts)[0m
[32m+    {[0m
[32m+        var pos = this.source.start;[0m
 
[31m-    if (opts.index) {[0m
[31m-      pos = this.positionInside(opts.index);[0m
[31m-    } else if (opts.word) {[0m
[31m-      var index = this.toString().indexOf(opts.word);[0m
[31m-      if (index !== -1) pos = this.positionInside(index);[0m
[32m+        if (opts.index) {[0m
[32m+            pos = this.positionInside(opts.index);[0m
[32m+        } else if (opts.word) {[0m
[32m+            var index = this.toString().indexOf(opts.word);[0m
[32m+            if (index !== -1) { pos = this.positionInside(index);[0m
[32m+            }[0m
[32m+        }[0m
[32m+[0m
[32m+        return pos;[0m
     }
[32m+    /**[0m
[32m+     * @memberof Node#[0m
[32m+     * @member   {string} type String representing the node’s type.[0m
[32m+     *                       Possible values are `root`, `atrule`, `rule`,[0m
[32m+     *                       `decl`, or `comment`.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * postcss.decl({ prop: 'color', value: 'black' }).type //=> 'decl'[0m
[32m+     */[0m
 
[31m-    return pos;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * @memberof Node#[0m
[31m-   * @member {string} type String representing the node’s type.[0m
[31m-   *                       Possible values are `root`, `atrule`, `rule`,[0m
[31m-   *                       `decl`, or `comment`.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * postcss.decl({ prop: 'color', value: 'black' }).type //=> 'decl'[0m
[31m-   */[0m
[32m+    /**[0m
[32m+     * @memberof Node#[0m
[32m+     * @member   {Container} parent The node’s parent node.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * root.nodes[0].parent === root[0m
[32m+     */[0m
 
[31m-  /**[0m
[31m-   * @memberof Node#[0m
[31m-   * @member {Container} parent The node’s parent node.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * root.nodes[0].parent === root[0m
[31m-   */[0m
[32m+    /**[0m
[32m+     * @memberof Node#[0m
[32m+     * @member   {source} source The input source of the node.[0m
[32m+     *[0m
[32m+     * The property is used in source map generation.[0m
[32m+     *[0m
[32m+     * If you create a node manually (e.g., with `postcss.decl()`),[0m
[32m+     * that node will not have a `source` property and will be absent[0m
[32m+     * from the source map. For this reason, the plugin developer should[0m
[32m+     * consider cloning nodes to create new ones (in which case the new node’s[0m
[32m+     * source will reference the original, cloned node) or setting[0m
[32m+     * the `source` property manually.[0m
[32m+     *[0m
[32m+     * ```js[0m
[32m+     * // Bad[0m
[32m+     * const prefixed = postcss.decl({[0m
[32m+     *   prop: '-moz-' + decl.prop,[0m
[32m+     *   value: decl.value[0m
[32m+     * })[0m
[32m+     *[0m
[32m+     * // Good[0m
[32m+     * const prefixed = decl.clone({ prop: '-moz-' + decl.prop })[0m
[32m+     * ```[0m
[32m+     *[0m
[32m+     * ```js[0m
[32m+     * if (atrule.name === 'add-link') {[0m
[32m+     *   const rule = postcss.rule({ selector: 'a', source: atrule.source })[0m
[32m+     *   atrule.parent.insertBefore(atrule, rule)[0m
[32m+     * }[0m
[32m+     * ```[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * decl.source.input.from //=> '/home/ai/a.sass'[0m
[32m+     * decl.source.start      //=> { line: 10, column: 2 }[0m
[32m+     * decl.source.end        //=> { line: 10, column: 12 }[0m
[32m+     */[0m
 
[31m-  /**[0m
[31m-   * @memberof Node#[0m
[31m-   * @member {source} source The input source of the node.[0m
[31m-   *[0m
[31m-   * The property is used in source map generation.[0m
[31m-   *[0m
[31m-   * If you create a node manually (e.g., with `postcss.decl()`),[0m
[31m-   * that node will not have a `source` property and will be absent[0m
[31m-   * from the source map. For this reason, the plugin developer should[0m
[31m-   * consider cloning nodes to create new ones (in which case the new node’s[0m
[31m-   * source will reference the original, cloned node) or setting[0m
[31m-   * the `source` property manually.[0m
[31m-   *[0m
[31m-   * ```js[0m
[31m-   * // Bad[0m
[31m-   * const prefixed = postcss.decl({[0m
[31m-   *   prop: '-moz-' + decl.prop,[0m
[31m-   *   value: decl.value[0m
[31m-   * })[0m
[31m-   *[0m
[31m-   * // Good[0m
[31m-   * const prefixed = decl.clone({ prop: '-moz-' + decl.prop })[0m
[31m-   * ```[0m
[31m-   *[0m
[31m-   * ```js[0m
[31m-   * if (atrule.name === 'add-link') {[0m
[31m-   *   const rule = postcss.rule({ selector: 'a', source: atrule.source })[0m
[31m-   *   atrule.parent.insertBefore(atrule, rule)[0m
[31m-   * }[0m
[31m-   * ```[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * decl.source.input.from //=> '/home/ai/a.sass'[0m
[31m-   * decl.source.start      //=> { line: 10, column: 2 }[0m
[31m-   * decl.source.end        //=> { line: 10, column: 12 }[0m
[31m-   */[0m
[32m+    /**[0m
[32m+     * @memberof Node#[0m
[32m+     * @member   {object} raws Information to generate byte-to-byte equal[0m
[32m+     *                       node string as it was in the origin input.[0m
[32m+     *[0m
[32m+     * Every parser saves its own properties,[0m
[32m+     * but the default CSS parser uses:[0m
[32m+     *[0m
[32m+     * * `before`: the space symbols before the node. It also stores `*`[0m
[32m+     *   and `_` symbols before the declaration (IE hack).[0m
[32m+     * * `after`: the space symbols after the last child of the node[0m
[32m+     *   to the end of the node.[0m
[32m+     * * `between`: the symbols between the property and value[0m
[32m+     *   for declarations, selector and `{` for rules, or last parameter[0m
[32m+     *   and `{` for at-rules.[0m
[32m+     * * `semicolon`: contains true if the last child has[0m
[32m+     *   an (optional) semicolon.[0m
[32m+     * * `afterName`: the space between the at-rule name and its parameters.[0m
[32m+     * * `left`: the space symbols between `/*` and the comment’s text.[0m
[32m+     * * `right`: the space symbols between the comment’s text[0m
[32m+     *   and <code>*&#47;</code>.[0m
[32m+     * * `important`: the content of the important statement,[0m
[32m+     *   if it is not just `!important`.[0m
[32m+     *[0m
[32m+     * PostCSS cleans selectors, declaration values and at-rule parameters[0m
[32m+     * from comments and extra spaces, but it stores origin content in raws[0m
[32m+     * properties. As such, if you don’t change a declaration’s value,[0m
[32m+     * PostCSS will use the raw value with comments.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * const root = postcss.parse('a {\n  color:black\n}')[0m
[32m+     * root.first.first.raws //=> { before: '\n  ', between: ':' }[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-  /**[0m
[31m-   * @memberof Node#[0m
[31m-   * @member {object} raws Information to generate byte-to-byte equal[0m
[31m-   *                       node string as it was in the origin input.[0m
[31m-   *[0m
[31m-   * Every parser saves its own properties,[0m
[31m-   * but the default CSS parser uses:[0m
[31m-   *[0m
[31m-   * * `before`: the space symbols before the node. It also stores `*`[0m
[31m-   *   and `_` symbols before the declaration (IE hack).[0m
[31m-   * * `after`: the space symbols after the last child of the node[0m
[31m-   *   to the end of the node.[0m
[31m-   * * `between`: the symbols between the property and value[0m
[31m-   *   for declarations, selector and `{` for rules, or last parameter[0m
[31m-   *   and `{` for at-rules.[0m
[31m-   * * `semicolon`: contains true if the last child has[0m
[31m-   *   an (optional) semicolon.[0m
[31m-   * * `afterName`: the space between the at-rule name and its parameters.[0m
[31m-   * * `left`: the space symbols between `/*` and the comment’s text.[0m
[31m-   * * `right`: the space symbols between the comment’s text[0m
[31m-   *   and <code>*&#47;</code>.[0m
[31m-   * * `important`: the content of the important statement,[0m
[31m-   *   if it is not just `!important`.[0m
[31m-   *[0m
[31m-   * PostCSS cleans selectors, declaration values and at-rule parameters[0m
[31m-   * from comments and extra spaces, but it stores origin content in raws[0m
[31m-   * properties. As such, if you don’t change a declaration’s value,[0m
[31m-   * PostCSS will use the raw value with comments.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const root = postcss.parse('a {\n  color:black\n}')[0m
[31m-   * root.first.first.raws //=> { before: '\n  ', between: ':' }[0m
[31m-   */[0m
[31m-  ;[0m
[31m-[0m
[31m-  return Node;[0m
[32m+    return Node;[0m
 }();
 
 var _default = Node;
 /**
[31m- * @typedef {object} position[0m
[32m+ * @typedef  {object} position[0m
  * @property {number} line   Source line in file.
  * @property {number} column Source column in file.
  */
 
 /**
[31m- * @typedef {object} source[0m
[32m+ * @typedef  {object} source[0m
  * @property {Input} input    {@link Input} with input file
  * @property {position} start The starting position of the node’s source.
  * @property {position} end   The ending position of the node’s source.
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/css-syntax-error.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -9,290 +9,432 @@
 
 var _terminalHighlight = _interopRequireDefault(require("./terminal-highlight"));
 
[31m-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }[0m
[32m+function _interopRequireDefault(obj)[0m
[32m+{[0m
[32m+    return obj && obj.__esModule ? obj : { default: obj }; }[0m
 
[31m-function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }[0m
[32m+function _assertThisInitialized(self)[0m
[32m+{[0m
[32m+    if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }[0m
 
[31m-function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }[0m
[32m+function _inheritsLoose(subClass, superClass)[0m
[32m+{[0m
[32m+    subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }[0m
 
[31m-function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }[0m
[32m+function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class)[0m
[32m+{[0m
[32m+        if (Class === null || !_isNativeFunction(Class)) { { { { { { { { { { { { { { { { { { { { { { { { { { return Class;[0m
[32m+        }[0m
[32m+        }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+    } if (typeof Class !== "function") { { { { { { { { { { { { { { { { { { { { { { { { { { { throw new TypeError("Super expression must either be null or a function");[0m
[32m+    }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        } } if (typeof _cache !== "undefined") { if (_cache.has(Class)) { { { { { { { { { { { { { { { { { { { { { { { { { { return _cache.get(Class);[0m
[32m+        }[0m
[32m+        }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+            }[0m
[32m+    } _cache.set(Class, Wrapper); } function Wrapper()[0m
[32m+    {[0m
[32m+        return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }[0m
 
[31m-function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }[0m
[32m+function _construct(Parent, args, Class)[0m
[32m+{[0m
[32m+    if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) { { { { { { { { { { { { { { { { { { { { { { { { { { _setPrototypeOf(instance, Class.prototype);[0m
[32m+    }[0m
[32m+    }[0m
[32m+    }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        }[0m
[32m+        } return instance; }; } return _construct.apply(null, arguments); }[0m
 
[31m-function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }[0m
[32m+    function _isNativeReflectConstruct()[0m
[32m+    {[0m
[32m+        if (typeof Reflect === "undefined" || !Reflect.construct) { return false;[0m
[32m+        } if (Reflect.construct.sham) { return false;[0m
[32m+        } if (typeof Proxy === "function") { return true;[0m
[32m+        } try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }[0m
 
[31m-function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }[0m
[32m+    function _isNativeFunction(fn)[0m
[32m+    {[0m
[32m+        return Function.toString.call(fn).indexOf("[native code]") !== -1; }[0m
 
[31m-function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }[0m
[32m+    function _setPrototypeOf(o, p)[0m
[32m+    {[0m
[32m+        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p)[0m
[32m+        {[0m
[32m+            o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }[0m
 
[31m-function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }[0m
[32m+    function _getPrototypeOf(o)[0m
[32m+    {[0m
[32m+        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o)[0m
[32m+        {[0m
[32m+            return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }[0m
 
[31m-/**[0m
[31m- * The CSS parser throws this error for broken CSS.[0m
[31m- *[0m
[31m- * Custom parsers can throw this error for broken custom syntax using[0m
[31m- * the {@link Node#error} method.[0m
[31m- *[0m
[31m- * PostCSS will use the input source map to detect the original error location.[0m
[31m- * If you wrote a Sass file, compiled it to CSS and then parsed it with PostCSS,[0m
[31m- * PostCSS will show the original position in the Sass file.[0m
[31m- *[0m
[31m- * If you need the position in the PostCSS input[0m
[31m- * (e.g., to debug the previous compiler), use `error.input.file`.[0m
[31m- *[0m
[31m- * @example[0m
[31m- * // Catching and checking syntax error[0m
[31m- * try {[0m
[31m- *   postcss.parse('a{')[0m
[31m- * } catch (error) {[0m
[31m- *   if (error.name === 'CssSyntaxError') {[0m
[31m- *     error //=> CssSyntaxError[0m
[31m- *   }[0m
[31m- * }[0m
[31m- *[0m
[31m- * @example[0m
[31m- * // Raising error from plugin[0m
[31m- * throw node.error('Unknown variable', { plugin: 'postcss-vars' })[0m
[31m- */[0m
[31m-var CssSyntaxError = /*#__PURE__*/function (_Error) {[0m
[31m-  _inheritsLoose(CssSyntaxError, _Error);[0m
[31m-[0m
[31m-  /**[0m
[31m-   * @param {string} message  Error message.[0m
[31m-   * @param {number} [line]   Source line of the error.[0m
[31m-   * @param {number} [column] Source column of the error.[0m
[31m-   * @param {string} [source] Source code of the broken file.[0m
[31m-   * @param {string} [file]   Absolute path to the broken file.[0m
[31m-   * @param {string} [plugin] PostCSS plugin name, if error came from plugin.[0m
[31m-   */[0m
[31m-  function CssSyntaxError(message, line, column, source, file, plugin) {[0m
[31m-    var _this;[0m
[31m-[0m
[31m-    _this = _Error.call(this, message) || this;[0m
     /**
[31m-     * Always equal to `'CssSyntaxError'`. You should always check error type[0m
[31m-     * by `error.name === 'CssSyntaxError'`[0m
[31m-     * instead of `error instanceof CssSyntaxError`,[0m
[31m-     * because npm could have several PostCSS versions.[0m
[32m+     * The CSS parser throws this error for broken CSS.[0m
      *
[31m-     * @type {string}[0m
[32m+     * Custom parsers can throw this error for broken custom syntax using[0m
[32m+     * the {@link Node#error} method.[0m
      *
[32m+     * PostCSS will use the input source map to detect the original error location.[0m
[32m+     * If you wrote a Sass file, compiled it to CSS and then parsed it with PostCSS,[0m
[32m+     * PostCSS will show the original position in the Sass file.[0m
[32m+     *[0m
[32m+     * If you need the position in the PostCSS input[0m
[32m+     * (e.g., to debug the previous compiler), use `error.input.file`.[0m
[32m+     *[0m
      * @example
[31m-     * if (error.name === 'CssSyntaxError') {[0m
[31m-     *   error //=> CssSyntaxError[0m
[32m+     * // Catching and checking syntax error[0m
[32m+     * try {[0m
[32m+     *   postcss.parse('a{')[0m
[32m+     * } catch (error) {[0m
[32m+     *   if (error.name === 'CssSyntaxError') {[0m
[32m+     *     error //=> CssSyntaxError[0m
[32m+     *   }[0m
      * }
[31m-     */[0m
[31m-[0m
[31m-    _this.name = 'CssSyntaxError';[0m
[31m-    /**[0m
[31m-     * Error message.[0m
      *
[31m-     * @type {string}[0m
[31m-     *[0m
      * @example
[31m-     * error.message //=> 'Unclosed block'[0m
[32m+     * // Raising error from plugin[0m
[32m+     * throw node.error('Unknown variable', { plugin: 'postcss-vars' })[0m
      */
[32m+    var CssSyntaxError = /*#__PURE__*/function (_Error) {[0m
[32m+        _inheritsLoose(CssSyntaxError, _Error);[0m
 
[31m-    _this.reason = message;[0m
[32m+        /**[0m
[32m+         * @param {string} message  Error message.[0m
[32m+         * @param {number} [line]   Source line of the error.[0m
[32m+         * @param {number} [column] Source column of the error.[0m
[32m+         * @param {string} [source] Source code of the broken file.[0m
[32m+         * @param {string} [file]   Absolute path to the broken file.[0m
[32m+         * @param {string} [plugin] PostCSS plugin name, if error came from plugin.[0m
[32m+         */[0m
[32m+        function CssSyntaxError(message, line, column, source, file, plugin)[0m
[32m+        {[0m
[32m+            var _this;[0m
 
[31m-    if (file) {[0m
[31m-      /**[0m
[31m-       * Absolute path to the broken file.[0m
[31m-       *[0m
[31m-       * @type {string}[0m
[31m-       *[0m
[31m-       * @example[0m
[31m-       * error.file       //=> 'a.sass'[0m
[31m-       * error.input.file //=> 'a.css'[0m
[31m-       */[0m
[31m-      _this.file = file;[0m
[31m-    }[0m
[32m+            _this = _Error.call(this, message) || this;[0m
[32m+            /**[0m
[32m+             * Always equal to `'CssSyntaxError'`. You should always check error type[0m
[32m+             * by `error.name === 'CssSyntaxError'`[0m
[32m+             * instead of `error instanceof CssSyntaxError`,[0m
[32m+             * because npm could have several PostCSS versions.[0m
[32m+             *[0m
[32m+             * @type {string}[0m
[32m+             *[0m
[32m+             * @example[0m
[32m+             * if (error.name === 'CssSyntaxError') {[0m
[32m+             *   error //=> CssSyntaxError[0m
[32m+             * }[0m
[32m+             */[0m
 
[31m-    if (source) {[0m
[31m-      /**[0m
[31m-       * Source code of the broken file.[0m
[31m-       *[0m
[31m-       * @type {string}[0m
[31m-       *[0m
[31m-       * @example[0m
[31m-       * error.source       //=> 'a { b {} }'[0m
[31m-       * error.input.column //=> 'a b { }'[0m
[31m-       */[0m
[31m-      _this.source = source;[0m
[31m-    }[0m
[32m+            _this.name = 'CssSyntaxError';[0m
[32m+            /**[0m
[32m+             * Error message.[0m
[32m+             *[0m
[32m+             * @type {string}[0m
[32m+             *[0m
[32m+             * @example[0m
[32m+             * error.message //=> 'Unclosed block'[0m
[32m+             */[0m
 
[31m-    if (plugin) {[0m
[31m-      /**[0m
[31m-       * Plugin name, if error came from plugin.[0m
[31m-       *[0m
[31m-       * @type {string}[0m
[31m-       *[0m
[31m-       * @example[0m
[31m-       * error.plugin //=> 'postcss-vars'[0m
[31m-       */[0m
[31m-      _this.plugin = plugin;[0m
[31m-    }[0m
[32m+            _this.reason = message;[0m
 
[31m-    if (typeof line !== 'undefined' && typeof column !== 'undefined') {[0m
[31m-      /**[0m
[31m-       * Source line of the error.[0m
[31m-       *[0m
[31m-       * @type {number}[0m
[31m-       *[0m
[31m-       * @example[0m
[31m-       * error.line       //=> 2[0m
[31m-       * error.input.line //=> 4[0m
[31m-       */[0m
[31m-      _this.line = line;[0m
[31m-      /**[0m
[31m-       * Source column of the error.[0m
[31m-       *[0m
[31m-       * @type {number}[0m
[31m-       *[0m
[31m-       * @example[0m
[31m-       * error.column       //=> 1[0m
[31m-       * error.input.column //=> 4[0m
[31m-       */[0m
[32m+            if (file) {[0m
[32m+                /**[0m
[32m+                 * Absolute path to the broken file.[0m
[32m+                 *[0m
[32m+                 * @type {string}[0m
[32m+                 *[0m
[32m+                 * @example[0m
[32m+                 * error.file       //=> 'a.sass'[0m
[32m+                 * error.input.file //=> 'a.css'[0m
[32m+                 */[0m
[32m+                _this.file = file;[0m
[32m+            }[0m
 
[31m-      _this.column = column;[0m
[31m-    }[0m
[32m+            if (source) {[0m
[32m+                /**[0m
[32m+                 * Source code of the broken file.[0m
[32m+                 *[0m
[32m+                 * @type {string}[0m
[32m+                 *[0m
[32m+                 * @example[0m
[32m+                 * error.source       //=> 'a { b {} }'[0m
[32m+                 * error.input.column //=> 'a b { }'[0m
[32m+                 */[0m
[32m+                _this.source = source;[0m
[32m+            }[0m
 
[31m-    _this.setMessage();[0m
[32m+            if (plugin) {[0m
[32m+                /**[0m
[32m+                 * Plugin name, if error came from plugin.[0m
[32m+                 *[0m
[32m+                 * @type {string}[0m
[32m+                 *[0m
[32m+                 * @example[0m
[32m+                 * error.plugin //=> 'postcss-vars'[0m
[32m+                 */[0m
[32m+                _this.plugin = plugin;[0m
[32m+            }[0m
 
[31m-    if (Error.captureStackTrace) {[0m
[31m-      Error.captureStackTrace(_assertThisInitialized(_this), CssSyntaxError);[0m
[31m-    }[0m
[32m+            if (typeof line !== 'undefined' && typeof column !== 'undefined') {[0m
[32m+                /**[0m
[32m+                 * Source line of the error.[0m
[32m+                 *[0m
[32m+                 * @type {number}[0m
[32m+                 *[0m
[32m+                 * @example[0m
[32m+                 * error.line       //=> 2[0m
[32m+                 * error.input.line //=> 4[0m
[32m+                 */[0m
[32m+                _this.line = line;[0m
[32m+                /**[0m
[32m+                 * Source column of the error.[0m
[32m+                 *[0m
[32m+                 * @type {number}[0m
[32m+                 *[0m
[32m+                 * @example[0m
[32m+                 * error.column       //=> 1[0m
[32m+                 * error.input.column //=> 4[0m
[32m+                 */[0m
 
[31m-    return _this;[0m
[31m-  }[0m
[32m+                _this.column = column;[0m
[32m+            }[0m
 
[31m-  var _proto = CssSyntaxError.prototype;[0m
[32m+            _this.setMessage();[0m
 
[31m-  _proto.setMessage = function setMessage() {[0m
[31m-    /**[0m
[31m-     * Full error text in the GNU error format[0m
[31m-     * with plugin, file, line and column.[0m
[31m-     *[0m
[31m-     * @type {string}[0m
[31m-     *[0m
[31m-     * @example[0m
[31m-     * error.message //=> 'a.css:1:1: Unclosed block'[0m
[31m-     */[0m
[31m-    this.message = this.plugin ? this.plugin + ': ' : '';[0m
[31m-    this.message += this.file ? this.file : '<css input>';[0m
[32m+            if (Error.captureStackTrace) {[0m
[32m+                Error.captureStackTrace(_assertThisInitialized(_this), CssSyntaxError);[0m
[32m+            }[0m
 
[31m-    if (typeof this.line !== 'undefined') {[0m
[31m-      this.message += ':' + this.line + ':' + this.column;[0m
[31m-    }[0m
[32m+            return _this;[0m
[32m+        }[0m
 
[31m-    this.message += ': ' + this.reason;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Returns a few lines of CSS source that caused the error.[0m
[31m-   *[0m
[31m-   * If the CSS has an input source map without `sourceContent`,[0m
[31m-   * this method will return an empty string.[0m
[31m-   *[0m
[31m-   * @param {boolean} [color] Whether arrow will be colored red by terminal[0m
[31m-   *                          color codes. By default, PostCSS will detect[0m
[31m-   *                          color support by `process.stdout.isTTY`[0m
[31m-   *                          and `process.env.NODE_DISABLE_COLORS`.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * error.showSourceCode() //=> "  4 | }[0m
[31m-   *                        //      5 | a {[0m
[31m-   *                        //    > 6 |   bad[0m
[31m-   *                        //        |   ^[0m
[31m-   *                        //      7 | }[0m
[31m-   *                        //      8 | b {"[0m
[31m-   *[0m
[31m-   * @return {string} Few lines of CSS source that caused the error.[0m
[31m-   */[0m
[31m-  ;[0m
[32m+        var _proto = CssSyntaxError.prototype;[0m
 
[31m-  _proto.showSourceCode = function showSourceCode(color) {[0m
[31m-    var _this2 = this;[0m
[32m+        _proto.setMessage = function setMessage()[0m
[32m+        {[0m
[32m+            /**[0m
[32m+             * Full error text in the GNU error format[0m
[32m+             * with plugin, file, line and column.[0m
[32m+             *[0m
[32m+             * @type {string}[0m
[32m+             *[0m
[32m+             * @example[0m
[32m+             * error.message //=> 'a.css:1:1: Unclosed block'[0m
[32m+             */[0m
[32m+            this.message = this.plugin ? this.plugin + ': ' : '';[0m
[32m+            this.message += this.file ? this.file : '<css input>';[0m
 
[31m-    if (!this.source) return '';[0m
[31m-    var css = this.source;[0m
[32m+            if (typeof this.line !== 'undefined') {[0m
[32m+                this.message += ':' + this.line + ':' + this.column;[0m
[32m+            }[0m
 
[31m-    if (_terminalHighlight.default) {[0m
[31m-      if (typeof color === 'undefined') color = _supportsColor.default.stdout;[0m
[31m-      if (color) css = (0, _terminalHighlight.default)(css);[0m
[31m-    }[0m
[32m+            this.message += ': ' + this.reason;[0m
[32m+        }[0m
[32m+        /**[0m
[32m+         * Returns a few lines of CSS source that caused the error.[0m
[32m+         *[0m
[32m+         * If the CSS has an input source map without `sourceContent`,[0m
[32m+         * this method will return an empty string.[0m
[32m+         *[0m
[32m+         * @param {boolean} [color] Whether arrow will be colored red by terminal[0m
[32m+         *                          color codes. By default, PostCSS will detect[0m
[32m+         *                          color support by `process.stdout.isTTY`[0m
[32m+         *                          and `process.env.NODE_DISABLE_COLORS`.[0m
[32m+         *[0m
[32m+         * @example[0m
[32m+         * error.showSourceCode() //=> "  4 | }[0m
[32m+         *                        //      5 | a {[0m
[32m+         *                        //    > 6 |   bad[0m
[32m+         *                        //        |   ^[0m
[32m+         *                        //      7 | }[0m
[32m+         *                        //      8 | b {"[0m
[32m+         *[0m
[32m+         * @return {string} Few lines of CSS source that caused the error.[0m
[32m+         */[0m
[32m+        ;[0m
 
[31m-    var lines = css.split(/\r?\n/);[0m
[31m-    var start = Math.max(this.line - 3, 0);[0m
[31m-    var end = Math.min(this.line + 2, lines.length);[0m
[31m-    var maxWidth = String(end).length;[0m
[32m+        _proto.showSourceCode = function showSourceCode(color)[0m
[32m+        {[0m
[32m+            var _this2 = this;[0m
 
[31m-    function mark(text) {[0m
[31m-      if (color && _chalk.default.red) {[0m
[31m-        return _chalk.default.red.bold(text);[0m
[31m-      }[0m
[32m+            if (!this.source) { return '';[0m
[32m+            }[0m
[32m+            var css = this.source;[0m
 
[31m-      return text;[0m
[31m-    }[0m
[32m+            if (_terminalHighlight.default) {[0m
[32m+                if (typeof color === 'undefined') { color = _supportsColor.default.stdout;[0m
[32m+                }[0m
[32m+                if (color) { css = (0, _terminalHighlight.default)(css);[0m
[32m+                }[0m
[32m+            }[0m
 
[31m-    function aside(text) {[0m
[31m-      if (color && _chalk.default.gray) {[0m
[31m-        return _chalk.default.gray(text);[0m
[31m-      }[0m
[32m+            var lines = css.split(/\r?\n/);[0m
[32m+            var start = Math.max(this.line - 3, 0);[0m
[32m+            var end = Math.min(this.line + 2, lines.length);[0m
[32m+            var maxWidth = String(end).length;[0m
 
[31m-      return text;[0m
[31m-    }[0m
[32m+            function mark(text)[0m
[32m+            {[0m
[32m+                if (color && _chalk.default.red) {[0m
[32m+                    return _chalk.default.red.bold(text);[0m
[32m+                }[0m
 
[31m-    return lines.slice(start, end).map(function (line, index) {[0m
[31m-      var number = start + 1 + index;[0m
[31m-      var gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | ';[0m
[32m+                return text;[0m
[32m+            }[0m
 
[31m-      if (number === _this2.line) {[0m
[31m-        var spacing = aside(gutter.replace(/\d/g, ' ')) + line.slice(0, _this2.column - 1).replace(/[^\t]/g, ' ');[0m
[31m-        return mark('>') + aside(gutter) + line + '\n ' + spacing + mark('^');[0m
[31m-      }[0m
[32m+            function aside(text)[0m
[32m+            {[0m
[32m+                if (color && _chalk.default.gray) {[0m
[32m+                    return _chalk.default.gray(text);[0m
[32m+                }[0m
 
[31m-      return ' ' + aside(gutter) + line;[0m
[31m-    }).join('\n');[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Returns error position, message and source code of the broken part.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * error.toString() //=> "CssSyntaxError: app.css:1:1: Unclosed block[0m
[31m-   *                  //    > 1 | a {[0m
[31m-   *                  //        | ^"[0m
[31m-   *[0m
[31m-   * @return {string} Error position, message and source code.[0m
[31m-   */[0m
[31m-  ;[0m
[32m+                return text;[0m
[32m+            }[0m
 
[31m-  _proto.toString = function toString() {[0m
[31m-    var code = this.showSourceCode();[0m
[32m+            return lines.slice(start, end).map([0m
[32m+                function (line, index) {[0m
[32m+                    var number = start + 1 + index;[0m
[32m+                    var gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | ';[0m
 
[31m-    if (code) {[0m
[31m-      code = '\n\n' + code + '\n';[0m
[31m-    }[0m
[32m+                    if (number === _this2.line) {[0m
[32m+                        var spacing = aside(gutter.replace(/\d/g, ' ')) + line.slice(0, _this2.column - 1).replace(/[^\t]/g, ' ');[0m
[32m+                        return mark('>') + aside(gutter) + line + '\n ' + spacing + mark('^');[0m
[32m+                    }[0m
 
[31m-    return this.name + ': ' + this.message + code;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * @memberof CssSyntaxError#[0m
[31m-   * @member {Input} input Input object with PostCSS internal information[0m
[31m-   *                       about input file. If input has source map[0m
[31m-   *                       from previous tool, PostCSS will use origin[0m
[31m-   *                       (for example, Sass) source. You can use this[0m
[31m-   *                       object to get PostCSS input source.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * error.input.file //=> 'a.css'[0m
[31m-   * error.file       //=> 'a.sass'[0m
[31m-   */[0m
[31m-  ;[0m
[32m+                    return ' ' + aside(gutter) + line;[0m
[32m+                }[0m
[32m+            ).join('\n');[0m
[32m+        }[0m
[32m+        /**[0m
[32m+         * Returns error position, message and source code of the broken part.[0m
[32m+         *[0m
[32m+         * @example[0m
[32m+         * error.toString() //=> "CssSyntaxError: app.css:1:1: Unclosed block[0m
[32m+         *                  //    > 1 | a {[0m
[32m+         *                  //        | ^"[0m
[32m+         *[0m
[32m+         * @return {string} Error position, message and source code.[0m
[32m+         */[0m
[32m+        ;[0m
 
[31m-  return CssSyntaxError;[0m
[31m-}( /*#__PURE__*/_wrapNativeSuper(Error));[0m
[32m+        _proto.toString = function toString()[0m
[32m+        {[0m
[32m+            var code = this.showSourceCode();[0m
 
[31m-var _default = CssSyntaxError;[0m
[31m-exports.default = _default;[0m
[31m-module.exports = exports.default;[0m
[31m-//# sourceMappingURL=data:application/json;charset=utf8;base64,[0m
[32m+            if (code) {[0m
[32m+                code = '\n\n' + code + '\n';[0m
[32m+            }[0m
[32m+[0m
[32m+            return this.name + ': ' + this.message + code;[0m
[32m+        }[0m
[32m+        /**[0m
[32m+         * @memberof CssSyntaxError#[0m
[32m+         * @member   {Input} input Input object with PostCSS internal information[0m
[32m+         *                       about input file. If input has source map[0m
[32m+         *                       from previous tool, PostCSS will use origin[0m
[32m+         *                       (for example, Sass) source. You can use this[0m
[32m+         *                       object to get PostCSS input source.[0m
[32m+         *[0m
[32m+         * @example[0m
[32m+         * error.input.file //=> 'a.css'[0m
[32m+         * error.file       //=> 'a.sass'[0m
[32m+         */[0m
[32m+        ;[0m
[32m+[0m
[32m+        return CssSyntaxError;[0m
[32m+    }( /*#__PURE__*/_wrapNativeSuper(Error));[0m
[32m+[0m
[32m+    var _default = CssSyntaxError;[0m
[32m+    exports.default = _default;[0m
[32m+    module.exports = exports.default;[0m
[32m+    //# sourceMappingURL=data:application/json;charset=utf8;base64,[0m
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/comment.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -5,9 +5,13 @@
 
 var _node = _interopRequireDefault(require("./node"));
 
[31m-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }[0m
[32m+function _interopRequireDefault(obj)[0m
[32m+{[0m
[32m+    return obj && obj.__esModule ? obj : { default: obj }; }[0m
 
[31m-function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }[0m
[32m+function _inheritsLoose(subClass, superClass)[0m
[32m+{[0m
[32m+    subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }[0m
 
 /**
  * Represents a comment between declarations or statements (rule and at-rules).
@@ -18,35 +22,36 @@
  * @extends Node
  */
 var Comment = /*#__PURE__*/function (_Node) {
[31m-  _inheritsLoose(Comment, _Node);[0m
[32m+    _inheritsLoose(Comment, _Node);[0m
 
[31m-  function Comment(defaults) {[0m
[31m-    var _this;[0m
[32m+    function Comment(defaults)[0m
[32m+    {[0m
[32m+        var _this;[0m
 
[31m-    _this = _Node.call(this, defaults) || this;[0m
[31m-    _this.type = 'comment';[0m
[31m-    return _this;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * @memberof Comment#[0m
[31m-   * @member {string} text The comment’s text.[0m
[31m-   */[0m
[32m+        _this = _Node.call(this, defaults) || this;[0m
[32m+        _this.type = 'comment';[0m
[32m+        return _this;[0m
[32m+    }[0m
[32m+    /**[0m
[32m+     * @memberof Comment#[0m
[32m+     * @member   {string} text The comment’s text.[0m
[32m+     */[0m
 
[31m-  /**[0m
[31m-   * @memberof Comment#[0m
[31m-   * @member {object} raws Information to generate byte-to-byte equal[0m
[31m-   *                       node string as it was in the origin input.[0m
[31m-   *[0m
[31m-   * Every parser saves its own properties,[0m
[31m-   * but the default CSS parser uses:[0m
[31m-   *[0m
[31m-   * * `before`: the space symbols before the node.[0m
[31m-   * * `left`: the space symbols between `/*` and the comment’s text.[0m
[31m-   * * `right`: the space symbols between the comment’s text.[0m
[31m-   */[0m
[32m+    /**[0m
[32m+     * @memberof Comment#[0m
[32m+     * @member   {object} raws Information to generate byte-to-byte equal[0m
[32m+     *                       node string as it was in the origin input.[0m
[32m+     *[0m
[32m+     * Every parser saves its own properties,[0m
[32m+     * but the default CSS parser uses:[0m
[32m+     *[0m
[32m+     * * `before`: the space symbols before the node.[0m
[32m+     * * `left`: the space symbols between `/*` and the comment’s text.[0m
[32m+     * * `right`: the space symbols between the comment’s text.[0m
[32m+     */[0m
 
 
[31m-  return Comment;[0m
[32m+    return Comment;[0m
 }(_node.default);
 
 var _default = Comment;
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/processor.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -5,13 +5,29 @@
 
 var _lazyResult = _interopRequireDefault(require("./lazy-result"));
 
[31m-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }[0m
[32m+function _interopRequireDefault(obj)[0m
[32m+{[0m
[32m+    return obj && obj.__esModule ? obj : { default: obj }; }[0m
 
[31m-function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }[0m
[32m+function _createForOfIteratorHelperLoose(o, allowArrayLike)[0m
[32m+{[0m
[32m+    var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) { o = it;[0m
[32m+    } var i = 0; return function () {[0m
[32m+        if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }[0m
 
[31m-function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }[0m
[32m+function _unsupportedIterableToArray(o, minLen)[0m
[32m+{[0m
[32m+    if (!o) { return;[0m
[32m+    } if (typeof o === "string") { return _arrayLikeToArray(o, minLen);[0m
[32m+    } var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) { n = o.constructor.name;[0m
[32m+    } if (n === "Map" || n === "Set") { return Array.from(o);[0m
[32m+    } if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) { return _arrayLikeToArray(o, minLen);[0m
[32m+    } }[0m
 
[31m-function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }[0m
[32m+function _arrayLikeToArray(arr, len)[0m
[32m+{[0m
[32m+    if (len == null || len > arr.length) { len = arr.length;[0m
[32m+    } for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }[0m
 
 /**
  * Contains plugins to process CSS. Create one `Processor` instance,
@@ -23,165 +39,170 @@
  * processor.process(css2).then(result => console.log(result.css))
  */
 var Processor = /*#__PURE__*/function () {
[31m-  /**[0m
[31m-   * @param {Array.<Plugin|pluginFunction>|Processor} plugins PostCSS plugins.[0m
[31m-   *        See {@link Processor#use} for plugin format.[0m
[31m-   */[0m
[31m-  function Processor(plugins) {[0m
[31m-    if (plugins === void 0) {[0m
[31m-      plugins = [];[0m
[31m-    }[0m
[32m+    /**[0m
[32m+     * @param {Array.<Plugin|pluginFunction>|Processor} plugins PostCSS plugins.[0m
[32m+     *        See {@link Processor#use} for plugin format.[0m
[32m+     */[0m
[32m+    function Processor(plugins)[0m
[32m+    {[0m
[32m+        if (plugins === void 0) {[0m
[32m+            plugins = [];[0m
[32m+        }[0m
 
[32m+        /**[0m
[32m+         * Current PostCSS version.[0m
[32m+         *[0m
[32m+         * @type {string}[0m
[32m+         *[0m
[32m+         * @example[0m
[32m+         * if (result.processor.version.split('.')[0] !== '6') {[0m
[32m+         *   throw new Error('This plugin works only with PostCSS 6')[0m
[32m+         * }[0m
[32m+         */[0m
[32m+        this.version = '7.0.35';[0m
[32m+        /**[0m
[32m+         * Plugins added to this processor.[0m
[32m+         *[0m
[32m+         * @type {pluginFunction[]}[0m
[32m+         *[0m
[32m+         * @example[0m
[32m+         * const processor = postcss([autoprefixer, precss])[0m
[32m+         * processor.plugins.length //=> 2[0m
[32m+         */[0m
[32m+[0m
[32m+        this.plugins = this.normalize(plugins);[0m
[32m+    }[0m
     /**
[31m-     * Current PostCSS version.[0m
[32m+     * Adds a plugin to be used as a CSS processor.[0m
      *
[31m-     * @type {string}[0m
[32m+     * PostCSS plugin can be in 4 formats:[0m
[32m+     * * A plugin created by {@link postcss.plugin} method.[0m
[32m+     * * A function. PostCSS will pass the function a @{link Root}[0m
[32m+     *   as the first argument and current {@link Result} instance[0m
[32m+     *   as the second.[0m
[32m+     * * An object with a `postcss` method. PostCSS will use that method[0m
[32m+     *   as described in #2.[0m
[32m+     * * Another {@link Processor} instance. PostCSS will copy plugins[0m
[32m+     *   from that instance into this one.[0m
      *
[31m-     * @example[0m
[31m-     * if (result.processor.version.split('.')[0] !== '6') {[0m
[31m-     *   throw new Error('This plugin works only with PostCSS 6')[0m
[31m-     * }[0m
[31m-     */[0m
[31m-    this.version = '7.0.35';[0m
[31m-    /**[0m
[31m-     * Plugins added to this processor.[0m
[32m+     * Plugins can also be added by passing them as arguments when creating[0m
[32m+     * a `postcss` instance (see [`postcss(plugins)`]).[0m
      *
[31m-     * @type {pluginFunction[]}[0m
[32m+     * Asynchronous plugins should return a `Promise` instance.[0m
      *
[32m+     * @param {Plugin|pluginFunction|Processor} plugin PostCSS plugin[0m
[32m+     *                                                 or {@link Processor}[0m
[32m+     *                                                 with plugins.[0m
[32m+     *[0m
      * @example
[31m-     * const processor = postcss([autoprefixer, precss])[0m
[31m-     * processor.plugins.length //=> 2[0m
[32m+     * const processor = postcss()[0m
[32m+     *   .use(autoprefixer)[0m
[32m+     *   .use(precss)[0m
[32m+     *[0m
[32m+     * @return {Processes} Current processor to make methods chain.[0m
      */
 
[31m-    this.plugins = this.normalize(plugins);[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Adds a plugin to be used as a CSS processor.[0m
[31m-   *[0m
[31m-   * PostCSS plugin can be in 4 formats:[0m
[31m-   * * A plugin created by {@link postcss.plugin} method.[0m
[31m-   * * A function. PostCSS will pass the function a @{link Root}[0m
[31m-   *   as the first argument and current {@link Result} instance[0m
[31m-   *   as the second.[0m
[31m-   * * An object with a `postcss` method. PostCSS will use that method[0m
[31m-   *   as described in #2.[0m
[31m-   * * Another {@link Processor} instance. PostCSS will copy plugins[0m
[31m-   *   from that instance into this one.[0m
[31m-   *[0m
[31m-   * Plugins can also be added by passing them as arguments when creating[0m
[31m-   * a `postcss` instance (see [`postcss(plugins)`]).[0m
[31m-   *[0m
[31m-   * Asynchronous plugins should return a `Promise` instance.[0m
[31m-   *[0m
[31m-   * @param {Plugin|pluginFunction|Processor} plugin PostCSS plugin[0m
[31m-   *                                                 or {@link Processor}[0m
[31m-   *                                                 with plugins.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * const processor = postcss()[0m
[31m-   *   .use(autoprefixer)[0m
[31m-   *   .use(precss)[0m
[31m-   *[0m
[31m-   * @return {Processes} Current processor to make methods chain.[0m
[31m-   */[0m
 
[32m+    var _proto = Processor.prototype;[0m
 
[31m-  var _proto = Processor.prototype;[0m
[31m-[0m
[31m-  _proto.use = function use(plugin) {[0m
[31m-    this.plugins = this.plugins.concat(this.normalize([plugin]));[0m
[31m-    return this;[0m
[31m-  }[0m
[31m-  /**[0m
[31m-   * Parses source CSS and returns a {@link LazyResult} Promise proxy.[0m
[31m-   * Because some plugins can be asynchronous it doesn’t make[0m
[31m-   * any transformations. Transformations will be applied[0m
[31m-   * in the {@link LazyResult} methods.[0m
[31m-   *[0m
[31m-   * @param {string|toString|Result} css String with input CSS or any object[0m
[31m-   *                                     with a `toString()` method,[0m
[31m-   *                                     like a Buffer. Optionally, send[0m
[31m-   *                                     a {@link Result} instance[0m
[31m-   *                                     and the processor will take[0m
[31m-   *                                     the {@link Root} from it.[0m
[31m-   * @param {processOptions} [opts]      Options.[0m
[31m-   *[0m
[31m-   * @return {LazyResult} Promise proxy.[0m
[31m-   *[0m
[31m-   * @example[0m
[31m-   * processor.process(css, { from: 'a.css', to: 'a.out.css' })[0m
[31m-   *   .then(result => {[0m
[31m-   *      console.log(result.css)[0m
[31m-   *   })[0m
[31m-   */[0m
[31m-  ;[0m
[31m-[0m
[31m-  _proto.process = function (_process) {[0m
[31m-    function process(_x) {[0m
[31m-      return _process.apply(this, arguments);[0m
[32m+    _proto.use = function use(plugin)[0m
[32m+    {[0m
[32m+        this.plugins = this.plugins.concat(this.normalize([plugin]));[0m
[32m+        return this;[0m
     }
[32m+    /**[0m
[32m+     * Parses source CSS and returns a {@link LazyResult} Promise proxy.[0m
[32m+     * Because some plugins can be asynchronous it doesn’t make[0m
[32m+     * any transformations. Transformations will be applied[0m
[32m+     * in the {@link LazyResult} methods.[0m
[32m+     *[0m
[32m+     * @param {string|toString|Result} css String with input CSS or any object[0m
[32m+     *                                     with a `toString()` method,[0m
[32m+     *                                     like a Buffer. Optionally, send[0m
[32m+     *                                     a {@link Result} instance[0m
[32m+     *                                     and the processor will take[0m
[32m+     *                                     the {@link Root} from it.[0m
[32m+     * @param {processOptions} [opts]      Options.[0m
[32m+     *[0m
[32m+     * @return {LazyResult} Promise proxy.[0m
[32m+     *[0m
[32m+     * @example[0m
[32m+     * processor.process(css, { from: 'a.css', to: 'a.out.css' })[0m
[32m+     *   .then(result => {[0m
[32m+     *      console.log(result.css)[0m
[32m+     *   })[0m
[32m+     */[0m
[32m+    ;[0m
 
[31m-    process.toString = function () {[0m
[31m-      return _process.toString();[0m
[31m-    };[0m
[32m+    _proto.process = function (_process) {[0m
[32m+        function process(_x)[0m
[32m+        {[0m
[32m+            return _process.apply(this, arguments);[0m
[32m+        }[0m
 
[31m-    return process;[0m
[31m-  }(function (css, opts) {[0m
[31m-    if (opts === void 0) {[0m
[31m-      opts = {};[0m
[31m-    }[0m
[32m+        process.toString = function () {[0m
[32m+            return _process.toString();[0m
[32m+        };[0m
 
[31m-    if (this.plugins.length === 0 && opts.parser === opts.stringifier) {[0m
[31m-      if (process.env.NODE_ENV !== 'production') {[0m
[31m-        if (typeof console !== 'undefined' && console.warn) {[0m
[31m-          console.warn('You did not set any plugins, parser, or stringifier. ' + 'Right now, PostCSS does nothing. Pick plugins for your case ' + 'on https://www.postcss.parts/ and use them in postcss.config.js.');[0m
[32m+        return process;[0m
[32m+    }(function (css, opts) {[0m
[32m+        if (opts === void 0) {[0m
[32m+            opts = {};[0m
         }
[31m-      }[0m
[31m-    }[0m
 
[31m-    return new _lazyResult.default(this, css, opts);[0m
[31m-  });[0m
[32m+        if (this.plugins.length === 0 && opts.parser === opts.stringifier) {[0m
[32m+            if (process.env.NODE_ENV !== 'production') {[0m
[32m+                if (typeof console !== 'undefined' && console.warn) {[0m
[32m+                    console.warn('You did not set any plugins, parser, or stringifier. ' + 'Right now, PostCSS does nothing. Pick plugins for your case ' + 'on https://www.postcss.parts/ and use them in postcss.config.js.');[0m
[32m+                }[0m
[32m+            }[0m
[32m+        }[0m
 
[31m-  _proto.normalize = function normalize(plugins) {[0m
[31m-    var normalized = [];[0m
[32m+        return new _lazyResult.default(this, css, opts);[0m
[32m+    });[0m
 
[31m-    for (var _iterator = _createForOfIteratorHelperLoose(plugins), _step; !(_step = _iterator()).done;) {[0m
[31m-      var i = _step.value;[0m
[32m+    _proto.normalize = function normalize(plugins)[0m
[32m+    {[0m
[32m+        var normalized = [];[0m
 
[31m-      if (i.postcss === true) {[0m
[31m-        var plugin = i();[0m
[31m-        throw new Error('PostCSS plugin ' + plugin.postcssPlugin + ' requires PostCSS 8.\n' + 'Migration guide for end-users:\n' + 'https://github.com/postcss/postcss/wiki/PostCSS-8-for-end-users');[0m
[31m-      }[0m
[32m+        for (var _iterator = _createForOfIteratorHelperLoose(plugins), _step; !(_step = _iterator()).done;) {[0m
[32m+            var i = _step.value;[0m
 
[31m-      if (i.postcss) i = i.postcss;[0m
[32m+            if (i.postcss === true) {[0m
[32m+                var plugin = i();[0m
[32m+                throw new Error('PostCSS plugin ' + plugin.postcssPlugin + ' requires PostCSS 8.\n' + 'Migration guide for end-users:\n' + 'https://github.com/postcss/postcss/wiki/PostCSS-8-for-end-users');[0m
[32m+            }[0m
 
[31m-      if (typeof i === 'object' && Array.isArray(i.plugins)) {[0m
[31m-        normalized = normalized.concat(i.plugins);[0m
[31m-      } else if (typeof i === 'function') {[0m
[31m-        normalized.push(i);[0m
[31m-      } else if (typeof i === 'object' && (i.parse || i.stringify)) {[0m
[31m-        if (process.env.NODE_ENV !== 'production') {[0m
[31m-          throw new Error('PostCSS syntaxes cannot be used as plugins. Instead, please use ' + 'one of the syntax/parser/stringifier options as outlined ' + 'in your PostCSS runner documentation.');[0m
[32m+            if (i.postcss) { i = i.postcss;[0m
[32m+            }[0m
[32m+[0m
[32m+            if (typeof i === 'object' && Array.isArray(i.plugins)) {[0m
[32m+                normalized = normalized.concat(i.plugins);[0m
[32m+            } else if (typeof i === 'function') {[0m
[32m+                normalized.push(i);[0m
[32m+            } else if (typeof i === 'object' && (i.parse || i.stringify)) {[0m
[32m+                if (process.env.NODE_ENV !== 'production') {[0m
[32m+                    throw new Error('PostCSS syntaxes cannot be used as plugins. Instead, please use ' + 'one of the syntax/parser/stringifier options as outlined ' + 'in your PostCSS runner documentation.');[0m
[32m+                }[0m
[32m+            } else if (typeof i === 'object' && i.postcssPlugin) {[0m
[32m+                throw new Error('PostCSS plugin ' + i.postcssPlugin + ' requires PostCSS 8.\n' + 'Migration guide for end-users:\n' + 'https://github.com/postcss/postcss/wiki/PostCSS-8-for-end-users');[0m
[32m+            } else {[0m
[32m+                throw new Error(i + ' is not a PostCSS plugin');[0m
[32m+            }[0m
         }
[31m-      } else if (typeof i === 'object' && i.postcssPlugin) {[0m
[31m-        throw new Error('PostCSS plugin ' + i.postcssPlugin + ' requires PostCSS 8.\n' + 'Migration guide for end-users:\n' + 'https://github.com/postcss/postcss/wiki/PostCSS-8-for-end-users');[0m
[31m-      } else {[0m
[31m-        throw new Error(i + ' is not a PostCSS plugin');[0m
[31m-      }[0m
[31m-    }[0m
 
[31m-    return normalized;[0m
[31m-  };[0m
[32m+        return normalized;[0m
[32m+    };[0m
 
[31m-  return Processor;[0m
[32m+    return Processor;[0m
 }();
 
 var _default = Processor;
 /**
  * @callback builder
[31m- * @param {string} part          Part of generated CSS connected to this node.[0m
[31m- * @param {Node}   node          AST node.[0m
[31m- * @param {"start"|"end"} [type] Node’s part type.[0m
[32m+ * @param    {string} part          Part of generated CSS connected to this node.[0m
[32m+ * @param    {Node}   node          AST node.[0m
[32m+ * @param    {"start"|"end"} [type] Node’s part type.[0m
  */
 
 /**
@@ -205,29 +226,29 @@
  */
 
 /**
[31m- * @typedef {object} syntax[0m
[32m+ * @typedef  {object} syntax[0m
  * @property {parser} parse          Function to generate AST by string.
  * @property {stringifier} stringify Function to generate string by AST.
  */
 
 /**
[31m- * @typedef {object} toString[0m
[32m+ * @typedef  {object} toString[0m
  * @property {function} toString
  */
 
 /**
  * @callback pluginFunction
[31m- * @param {Root} root     Parsed input CSS.[0m
[31m- * @param {Result} result Result to set warnings or check other plugins.[0m
[32m+ * @param    {Root} root     Parsed input CSS.[0m
[32m+ * @param    {Result} result Result to set warnings or check other plugins.[0m
  */
 
 /**
[31m- * @typedef {object} Plugin[0m
[32m+ * @typedef  {object} Plugin[0m
  * @property {function} postcss PostCSS plugin function.
  */
 
 /**
[31m- * @typedef {object} processOptions[0m
[32m+ * @typedef  {object} processOptions[0m
  * @property {string} from             The path of the CSS source file.
  *                                     You should always set `from`,
  *                                     because it is used in source map
[31m--- node_modules/postcss-normalize-positions/node_modules/postcss/lib/stringify.js[0m
[32m+++ PHP_CodeSniffer[0m
@@ -5,11 +5,14 @@
 
 var _stringifier = _interopRequireDefault(require("./stringifier"));
 
[31m-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }[0m
[32m+function _interopRequireDefault(obj)[0m
[32m+{[0m
[32m+    return obj && obj.__esModule ? obj : { default: obj }; }[0m
 
[31m-function stringify(node, builder) {[0m
[31m-  var str = new _stringifier.default(builder);[0m
[31m-  str.stringify(node);[0m
[32m+function stringify(node, builder)[0m
[32m+{[0m
[32m+    var str = new _stringifier.default(builder);[0m
[32m+    str.stringify(node);[0m
 }
 
 var _default = stringify;
